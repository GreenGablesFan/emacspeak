This is emacspeak.info, produced by makeinfo version 6.5 from
emacspeak.texi.

INFO-DIR-SECTION Accessibility
START-INFO-DIR-ENTRY
* Emacspeak:(emacspeak).		Speech-enabled Audio Desktop.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Emacspeak:(emacspeak).		Speech-enabled Audio Desktop.
END-INFO-DIR-ENTRY


File: emacspeak.info,  Node: emacspeak-generic,  Next: emacspeak-gnuplot,  Prev: emacspeak-geiser,  Up: Emacspeak Commands And Options

12.83 emacspeak-generic
=======================

This module speech-enables generic.el so that modes defined using
define-generic-mode get voice locking support.  Examples include
apache-generic-mode and friends defined in generic-x.el


File: emacspeak.info,  Node: emacspeak-gnuplot,  Next: emacspeak-gnus,  Prev: emacspeak-generic,  Up: Emacspeak Commands And Options

12.84 emacspeak-gnuplot
=======================

This module speech-enables gnuplot-mode an Emacs add-on that enables
fluent interaction with gnuplot.  Use gnuplot to generate plots of
mathematical functions for inclusion in documents.


File: emacspeak.info,  Node: emacspeak-gnus,  Next: emacspeak-go-mode,  Prev: emacspeak-gnuplot,  Up: Emacspeak Commands And Options

12.85 emacspeak-gnus
====================

This module advises gnus to speak.  Updating support in 2014 (Emacspeak
is nearly 20 years old) Updating in 2018 as I switch to gnus as my
primary mail interface.  These customizations to gnus make it convenient
to listen to news: You can read news mostly by using the four arrow
keys.  By default all article headers are hidden, so you hear the real
news.

12.85.1 emacspeak-gnus Commands
-------------------------------

12.85.1.1 emacspeak-gnus-personal-gmail-last-week
.................................................

 -- Command: emacspeak-gnus-personal-gmail-last-week

     Look for mail addressed personally in the last week.

12.85.1.2 emacspeak-gnus-personal-gmail-recent
..............................................

 -- Command: emacspeak-gnus-personal-gmail-recent

     Look for mail addressed personally in the last day.

12.85.1.3 emacspeak-gnus-summary-catchup-quietly-and-exit
.........................................................

 -- Command: emacspeak-gnus-summary-catchup-quietly-and-exit

     Catch up on all articles in current group.

12.85.2 emacspeak-gnus Options
------------------------------

 -- Variable: User Option emacspeak-gnus-large-article
     *Articles having more than emacspeak-gnus-large-article lines will
     be considered to be a large article.  A large article is not spoken
     all at once; instead you hear only the first screenful.

 -- Variable: User Option emacspeak-gnus-punctuation-mode
     Pronunciation mode to use for gnus buffers.


File: emacspeak.info,  Node: emacspeak-go-mode,  Next: emacspeak-gomoku,  Prev: emacspeak-gnus,  Up: Emacspeak Commands And Options

12.86 emacspeak-go-mode
=======================

GO-MODE == Go Language support in emacs


File: emacspeak.info,  Node: emacspeak-gomoku,  Next: emacspeak-google,  Prev: emacspeak-go-mode,  Up: Emacspeak Commands And Options

12.87 emacspeak-gomoku
======================

Auditory interface to gomoku

12.87.1 emacspeak-gomoku Commands
---------------------------------

12.87.1.1 emacspeak-gomoku-display-statistics
.............................................

 -- Command: emacspeak-gomoku-display-statistics

     Display statistics from previous games

12.87.1.2 emacspeak-gomoku-goto-x-y
...................................

 -- Command: emacspeak-gomoku-goto-x-y (x y)

     Prompt for and go to that square.

     (fn X Y)

12.87.1.3 emacspeak-gomoku-show-current-column
..............................................

 -- Command: emacspeak-gomoku-show-current-column

     Aurally display current column

12.87.1.4 emacspeak-gomoku-show-current-negative-diagonal
.........................................................

 -- Command: emacspeak-gomoku-show-current-negative-diagonal

     Aurally display current negative sloped diagonal

12.87.1.5 emacspeak-gomoku-show-current-positive-diagonal
.........................................................

 -- Command: emacspeak-gomoku-show-current-positive-diagonal

     Aurally display current positively sloped diagonal

12.87.1.6 emacspeak-gomoku-show-current-row
...........................................

 -- Command: emacspeak-gomoku-show-current-row

     Aurally display current row

12.87.1.7 emacspeak-gomoku-speak-emacs-previous-move
....................................................

 -- Command: emacspeak-gomoku-speak-emacs-previous-move

     Speak emacs’ previous move

12.87.1.8 emacspeak-gomoku-speak-humans-previous-move
.....................................................

 -- Command: emacspeak-gomoku-speak-humans-previous-move

     Speak human’ previous move

12.87.1.9 emacspeak-gomoku-speak-number-of-moves
................................................

 -- Command: emacspeak-gomoku-speak-number-of-moves

     Speak number of moves so far

12.87.1.10 emacspeak-gomoku-speak-square
........................................

 -- Command: emacspeak-gomoku-speak-square

     Speak coordinates and state of square at point


File: emacspeak.info,  Node: emacspeak-google,  Next: emacspeak-gridtext,  Prev: emacspeak-gomoku,  Up: Emacspeak Commands And Options

12.88 emacspeak-google
======================

There are a number of search tools that can be implemented on the Google
search page — in a JS-powered browser, these show up as the Google
tool-belt.  This module implements a minor mode for use in Google result
pages that enables these tools via single keyboard commands.  Originally
all options were available as tbs=p:v Now, some specialized searches,
e.g.  blog search are tbm=

12.88.1 emacspeak-google Commands
---------------------------------

12.88.1.1 emacspeak-google-show-toolbelt
........................................

 -- Command: emacspeak-google-show-toolbelt

     Reload search page with toolbelt showing.

12.88.1.2 emacspeak-google-sign-in
..................................

 -- Command: emacspeak-google-sign-in

     Sign in to Google.

12.88.1.3 emacspeak-google-sign-out
...................................

 -- Command: emacspeak-google-sign-out

     Sign out to Google.

12.88.1.4 emacspeak-google-toolbelt-change
..........................................

 -- Command: emacspeak-google-toolbelt-change

     Command to change values in the toolbelt and execute the query.

12.88.1.5 emacspeak-google-toolbelt-change-Shopping
...................................................

 -- Command: emacspeak-google-toolbelt-change-Shopping

     Change  Shopping in the currently active toolbelt.

12.88.1.6 emacspeak-google-toolbelt-change-blog
...............................................

 -- Command: emacspeak-google-toolbelt-change-blog

     Change  blog in the currently active toolbelt.

12.88.1.7 emacspeak-google-toolbelt-change-books
................................................

 -- Command: emacspeak-google-toolbelt-change-books

     Change  books in the currently active toolbelt.

12.88.1.8 emacspeak-google-toolbelt-change-books-format
.......................................................

 -- Command: emacspeak-google-toolbelt-change-books-format

     Change  books-format in the currently active toolbelt.

12.88.1.9 emacspeak-google-toolbelt-change-books-type
.....................................................

 -- Command: emacspeak-google-toolbelt-change-books-type

     Change  books-type in the currently active toolbelt.

12.88.1.10 emacspeak-google-toolbelt-change-books-viewability
.............................................................

 -- Command: emacspeak-google-toolbelt-change-books-viewability

     Change  books-viewability in the currently active toolbelt.

12.88.1.11 emacspeak-google-toolbelt-change-commercial
......................................................

 -- Command: emacspeak-google-toolbelt-change-commercial

     Change  commercial in the currently active toolbelt.

12.88.1.12 emacspeak-google-toolbelt-change-commercial-prices
.............................................................

 -- Command: emacspeak-google-toolbelt-change-commercial-prices

     Change  commercial-prices in the currently active toolbelt.

12.88.1.13 emacspeak-google-toolbelt-change-date-filter
.......................................................

 -- Command: emacspeak-google-toolbelt-change-date-filter

     Change  date-filter in the currently active toolbelt.

12.88.1.14 emacspeak-google-toolbelt-change-forums
..................................................

 -- Command: emacspeak-google-toolbelt-change-forums

     Change  forums in the currently active toolbelt.

12.88.1.15 emacspeak-google-toolbelt-change-group-discussions
.............................................................

 -- Command: emacspeak-google-toolbelt-change-group-discussions

     Change  group-discussions in the currently active toolbelt.

12.88.1.16 emacspeak-google-toolbelt-change-images
..................................................

 -- Command: emacspeak-google-toolbelt-change-images

     Change  images in the currently active toolbelt.

12.88.1.17 emacspeak-google-toolbelt-change-in-depth
....................................................

 -- Command: emacspeak-google-toolbelt-change-in-depth

     Change  in-depth in the currently active toolbelt.

12.88.1.18 emacspeak-google-toolbelt-change-literal
...................................................

 -- Command: emacspeak-google-toolbelt-change-literal

     Change  literal in the currently active toolbelt.

12.88.1.19 emacspeak-google-toolbelt-change-news
................................................

 -- Command: emacspeak-google-toolbelt-change-news

     Change  news in the currently active toolbelt.

12.88.1.20 emacspeak-google-toolbelt-change-non-commercial
..........................................................

 -- Command: emacspeak-google-toolbelt-change-non-commercial

     Change  non-commercial in the currently active toolbelt.

12.88.1.21 emacspeak-google-toolbelt-change-patents
...................................................

 -- Command: emacspeak-google-toolbelt-change-patents

     Change  patents in the currently active toolbelt.

12.88.1.22 emacspeak-google-toolbelt-change-places
..................................................

 -- Command: emacspeak-google-toolbelt-change-places

     Change  places in the currently active toolbelt.

12.88.1.23 emacspeak-google-toolbelt-change-recent
..................................................

 -- Command: emacspeak-google-toolbelt-change-recent

     Change  recent in the currently active toolbelt.

12.88.1.24 emacspeak-google-toolbelt-change-recipes
...................................................

 -- Command: emacspeak-google-toolbelt-change-recipes

     Change  recipes in the currently active toolbelt.

12.88.1.25 emacspeak-google-toolbelt-change-reviews
...................................................

 -- Command: emacspeak-google-toolbelt-change-reviews

     Change  reviews in the currently active toolbelt.

12.88.1.26 emacspeak-google-toolbelt-change-social
..................................................

 -- Command: emacspeak-google-toolbelt-change-social

     Change  social in the currently active toolbelt.

12.88.1.27 emacspeak-google-toolbelt-change-sort-by-date
........................................................

 -- Command: emacspeak-google-toolbelt-change-sort-by-date

     Change  sort-by-date in the currently active toolbelt.

12.88.1.28 emacspeak-google-toolbelt-change-structured-snippets
...............................................................

 -- Command: emacspeak-google-toolbelt-change-structured-snippets

     Change  structured-snippets in the currently active toolbelt.

12.88.1.29 emacspeak-google-toolbelt-change-timeline
....................................................

 -- Command: emacspeak-google-toolbelt-change-timeline

     Change  timeline in the currently active toolbelt.

12.88.1.30 emacspeak-google-toolbelt-change-timeline-high
.........................................................

 -- Command: emacspeak-google-toolbelt-change-timeline-high

     Change  timeline-high in the currently active toolbelt.

12.88.1.31 emacspeak-google-toolbelt-change-timeline-low
........................................................

 -- Command: emacspeak-google-toolbelt-change-timeline-low

     Change  timeline-low in the currently active toolbelt.

12.88.1.32 emacspeak-google-toolbelt-change-video
.................................................

 -- Command: emacspeak-google-toolbelt-change-video

     Change  video in the currently active toolbelt.

12.88.1.33 emacspeak-google-toolbelt-change-video-duration
..........................................................

 -- Command: emacspeak-google-toolbelt-change-video-duration

     Change  video-duration in the currently active toolbelt.

12.88.1.34 emacspeak-google-toolbelt-change-web-history-not-visited
...................................................................

 -- Command: emacspeak-google-toolbelt-change-web-history-not-visited

     Change  web-history-not-visited in the currently active toolbelt.

12.88.1.35 emacspeak-google-toolbelt-change-web-history-visited
...............................................................

 -- Command: emacspeak-google-toolbelt-change-web-history-visited

     Change  web-history-visited in the currently active toolbelt.

12.88.1.36 emacspeak-google-tts
...............................

 -- Command: emacspeak-google-tts (text &optional lang)

     Speak text using Google Network TTS.
     Optional interactive prefix arg ‘lang’ specifies  language identifier.

     (fn TEXT &optional LANG)

12.88.1.37 emacspeak-google-tts-region
......................................

 -- Command: emacspeak-google-tts-region (start end &optional ask-lang)
     ‘C-. g’
     ‘C-' g’
     ‘C-x @ s g’

     Speak region using Google Network TTS.

     (fn START END &optional ASK-LANG)

12.88.1.38 emacspeak-google-what-is-my-ip
.........................................

 -- Command: emacspeak-google-what-is-my-ip

     Show my public IP

12.88.2 emacspeak-google Options
--------------------------------

 -- Variable: User Option emacspeak-google-tts-default-language
     Default language used for Google TTS.


File: emacspeak.info,  Node: emacspeak-gridtext,  Next: emacspeak-gtags,  Prev: emacspeak-google,  Up: Emacspeak Commands And Options

12.89 emacspeak-gridtext
========================

Emacspeak’s table browsing mode allows one to efficiently access content
that is tabular in nature.  That module also provides functions for
inferring table structure where possible.  Often, such structure is hard
to infer automatically –but might be known to the user e.g.  treat
columns 1 through 30 as one column of a table and so on.  This module
allows the user to specify a conceptual grid that is "overlaid" on the
region of text to turn it into a table for tabular browsing.  For now,
elements of the grid are "one line" high –but that may change in the
future if necessary.  This module is useful for browsing structured text
files and the output from programs that tabulate their output.  It’s
also useful for handling multicolumn text.  The "grid" is specified as a
list of (start end) tuples..

12.89.1 emacspeak-gridtext Commands
-----------------------------------

12.89.1.1 emacspeak-gridtext-apply
..................................

 -- Command: emacspeak-gridtext-apply (start end grid)
     ‘C-e # a’
     ‘<fn> # a’

     Apply grid to region.

     (fn START END GRID)

12.89.1.2 emacspeak-gridtext-load
.................................

 -- Command: emacspeak-gridtext-load (file)
     ‘C-e # l’
     ‘<fn> # l’

     Load saved grid settings.

     (fn FILE)

12.89.1.3 emacspeak-gridtext-save
.................................

 -- Command: emacspeak-gridtext-save (file)
     ‘C-e # s’
     ‘<fn> # s’

     Save out grid settings.

     (fn FILE)


File: emacspeak.info,  Node: emacspeak-gtags,  Next: emacspeak-gud,  Prev: emacspeak-gridtext,  Up: Emacspeak Commands And Options

12.90 emacspeak-gtags
=====================

GTAGS == Emacs support for GNU global.  GNU global implements a modern
tags solution Package gtags interfaces Emacs to this tool.


File: emacspeak.info,  Node: emacspeak-gud,  Next: emacspeak-helm,  Prev: emacspeak-gtags,  Up: Emacspeak Commands And Options

12.91 emacspeak-gud
===================

Provide additional advice to ease debugger interaction with gud


File: emacspeak.info,  Node: emacspeak-helm,  Next: emacspeak-hide,  Prev: emacspeak-gud,  Up: Emacspeak Commands And Options

12.92 emacspeak-helm
====================

HELM == Smart narrowing/selection in emacs This module speech-enables
Helm interaction.  See tvr/helm-prepare.el in the GitHub repository for
my helm setup.  that file provides convenient emacspeak-centric
keybindings for Helm interaction.


File: emacspeak.info,  Node: emacspeak-hide,  Next: emacspeak-hideshow,  Prev: emacspeak-helm,  Up: Emacspeak Commands And Options

12.93 emacspeak-hide
====================

Flexible hide and show for emacspeak.  This module allows one to easily
hide or expose blocks of lines starting with a common prefix.  It is
motivated by the need to flexibly hide quoted text in email but is
designed to be more general.  the prefix parsing is inspired by
filladapt.el

12.93.1 emacspeak-hide Commands
-------------------------------

12.93.1.1 emacspeak-hide-or-expose-all-blocks
.............................................

 -- Command: emacspeak-hide-or-expose-all-blocks

     Hide or expose all blocks in buffer.

12.93.1.2 emacspeak-hide-or-expose-block
........................................

 -- Command: emacspeak-hide-or-expose-block (&optional prefix)
     ‘C-e j’
     ‘<fn> j’

     Hide or expose a block of text.
     This command either hides or exposes a block of text
     starting on the current line.  A block of text is defined as
     a portion of the buffer in which all lines start with a
     common PREFIX.  Optional interactive prefix arg causes all
     blocks in current buffer to be hidden or exposed.

     (fn &optional PREFIX)

12.93.1.3 emacspeak-hide-speak-block-sans-prefix
................................................

 -- Command: emacspeak-hide-speak-block-sans-prefix
     ‘C-e C-j’
     ‘<fn> C-j’

     Speaks current block after stripping its prefix.
     If the current block is not hidden, it first hides it.
     This is useful because as you locate blocks, you can invoke this
     command to listen to the block,
     and when you have heard enough navigate easily  to move past the block.

12.93.2 emacspeak-hide Options
------------------------------

 -- Variable: User Option emacspeak-hidden-header-line-personality
     Personality used to identify header lines of blocks.


File: emacspeak.info,  Node: emacspeak-hideshow,  Next: emacspeak-hydra,  Prev: emacspeak-hide,  Up: Emacspeak Commands And Options

12.94 emacspeak-hideshow
========================

speech-enable hideshow.el


File: emacspeak.info,  Node: emacspeak-hydra,  Next: emacspeak-ibuffer,  Prev: emacspeak-hideshow,  Up: Emacspeak Commands And Options

12.95 emacspeak-hydra
=====================

Speech-enable package hydra: For uses of hydra see module *Note
emacspeak-muggles::.

12.95.1 emacspeak-hydra Commands
--------------------------------

12.95.1.1 emacspeak-hydra-toggle-talkative
..........................................

 -- Command: emacspeak-hydra-toggle-talkative

     Toggle state of hydra-is-helpful


File: emacspeak.info,  Node: emacspeak-ibuffer,  Next: emacspeak-ido,  Prev: emacspeak-hydra,  Up: Emacspeak Commands And Options

12.96 emacspeak-ibuffer
=======================

speech-enable ibuffer.el this is an alternative to buffer-menu

12.96.1 emacspeak-ibuffer Commands
----------------------------------

12.96.1.1 emacspeak-ibuffer-speak-buffer-line
.............................................

 -- Command: emacspeak-ibuffer-speak-buffer-line

     Speak information about this buffer


File: emacspeak.info,  Node: emacspeak-ido,  Next: emacspeak-imenu,  Prev: emacspeak-ibuffer,  Up: Emacspeak Commands And Options

12.97 emacspeak-ido
===================

speech-enable ido.el This is an interesting task since most of the
value-add provided by package ido.el is visual feedback.  Speech UI
Challenge: What is the most efficient means of conveying a dynamically
updating set of choices?  current strategy is to walk the list using c-s
and c-r as provided by ido Set number matches shown (ido-max-prospects)
to 3 using Custom so you dont hear the entire list.

12.97.1 emacspeak-ido Options
-----------------------------

 -- Variable: User Option emacspeak-ido-typing-delay
     How long we wait before speaking completions.


File: emacspeak.info,  Node: emacspeak-imenu,  Next: emacspeak-indium,  Prev: emacspeak-ido,  Up: Emacspeak Commands And Options

12.98 emacspeak-imenu
=====================

Speech enable imenu and provide other useful navigation commands.

12.98.1 emacspeak-imenu Commands
--------------------------------

12.98.1.1 emacspeak-imenu-goto-next-index-position
..................................................

 -- Command: emacspeak-imenu-goto-next-index-position

     Goto the next index position in current buffer

12.98.1.2 emacspeak-imenu-goto-previous-index-pos
.................................................

 -- Command: emacspeak-imenu-goto-previous-index-pos

     Goto the previous index pos in current buffer

12.98.1.3 emacspeak-imenu-speak-this-section
............................................

 -- Command: emacspeak-imenu-speak-this-section

     Speak upto start of next index entry


File: emacspeak.info,  Node: emacspeak-indium,  Next: emacspeak-info,  Prev: emacspeak-imenu,  Up: Emacspeak Commands And Options

12.99 emacspeak-indium
======================

INDIUM == Javascript IDE This module speech-enables Indium.


File: emacspeak.info,  Node: emacspeak-info,  Next: emacspeak-ispell,  Prev: emacspeak-indium,  Up: Emacspeak Commands And Options

12.100 emacspeak-info
=====================

This module speech-enables the Emacs Info Reader.

12.100.1 emacspeak-info Commands
--------------------------------

12.100.1.1 emacspeak-info-next-section
......................................

 -- Command: emacspeak-info-next-section

     Move forward to next section in this node.

12.100.1.2 emacspeak-info-previous-section
..........................................

 -- Command: emacspeak-info-previous-section

     Move backward to previous section in this node.

12.100.1.3 emacspeak-info-speak-header
......................................

 -- Command: emacspeak-info-speak-header

     Speak info header line.

12.100.1.4 emacspeak-info-wizard
................................

 -- Command: emacspeak-info-wizard (node-spec)
     ‘C-h TAB’
     ‘<f1> TAB’
     ‘<help> TAB’

     Read a node spec from the minibuffer and launch
     Info-goto-node.
     See documentation for command ‘Info-goto-node’ for details on
     node-spec.

     (fn NODE-SPEC)

12.100.2 emacspeak-info Options
-------------------------------

 -- Variable: User Option emacspeak-info-select-node-speak-chunk
     *Specifies how much of the selected node gets spoken.  Possible
     values are: screenfull – speak the displayed screen node – speak
     the entire node.


File: emacspeak.info,  Node: emacspeak-ispell,  Next: emacspeak-ivy,  Prev: emacspeak-info,  Up: Emacspeak Commands And Options

12.101 emacspeak-ispell
=======================

This module speech enables ispell.  Implementation note: This is hard
because of how ispell.el is written Namely, all of the work is done by
one huge hairy function.  This makes advising it hard.  The ispell
commands work well with Emacspeak as long as the list of correction
choices are few.  For interactively moving through corrections, install
package flyspell-correct from MELPA (package-install "flyspell-correct")
Then use M-x flyspell-mode.  Package flyspell is speech-enabled by
Emacspeak module emacspeak-flyspell And that module sets up
flyspell-correct to use IDO-style completion, i.e.  you can move through
corrections with C-r and C-s.

12.101.1 emacspeak-ispell Options
---------------------------------

 -- Variable: User Option emacspeak-ispell-max-choices
     Emacspeak will not speak the choices if there are more than this
     many available corrections.


File: emacspeak.info,  Node: emacspeak-ivy,  Next: emacspeak-jabber,  Prev: emacspeak-ispell,  Up: Emacspeak Commands And Options

12.102 emacspeak-ivy
====================

IVY == One More Smart Completion Technique Speech-enable ivy-style
completion.  This is still experimental and preliminary.


File: emacspeak.info,  Node: emacspeak-jabber,  Next: emacspeak-jdee,  Prev: emacspeak-ivy,  Up: Emacspeak Commands And Options

12.103 emacspeak-jabber
=======================

emacs-jabber.el implements a jabber client for emacs emacs-jabber is
hosted at sourceforge.  I use emacs-jabber with my gmail.com account

12.103.1 emacspeak-jabber Commands
----------------------------------

12.103.1.1 emacspeak-jabber-chat-next-message
.............................................

 -- Command: emacspeak-jabber-chat-next-message

     Move forward to and speak the next message in this chat session.

12.103.1.2 emacspeak-jabber-chat-previous-message
.................................................

 -- Command: emacspeak-jabber-chat-previous-message

     Move backward to and speak the previous message in this chat session.

12.103.1.3 emacspeak-jabber-chat-speak-this-message
...................................................

 -- Command: emacspeak-jabber-chat-speak-this-message (&optional
          copy-as-kill)

     Speak chat message under point.
     With optional interactive prefix arg ‘copy-as-kill’, copy it to
     the kill ring as well.

     (fn &optional COPY-AS-KILL)

12.103.1.4 emacspeak-jabber-popup-roster
........................................

 -- Command: emacspeak-jabber-popup-roster
     ‘C-e x j’
     ‘<fn> x j’

     Pop to Jabber roster.

12.103.1.5 emacspeak-jabber-speak-recent-message
................................................

 -- Command: emacspeak-jabber-speak-recent-message
     ‘C-e x SPC’
     ‘<fn> x SPC’

     Speak most recent message if one exists.

12.103.2 emacspeak-jabber Options
---------------------------------

 -- Variable: User Option emacspeak-jabber-speak-presence-alerts
     Set to T if you want to hear presence alerts.


File: emacspeak.info,  Node: emacspeak-jdee,  Next: emacspeak-js2,  Prev: emacspeak-jabber,  Up: Emacspeak Commands And Options

12.104 emacspeak-jdee
=====================

Speech enable Java IDE. The Java IDE –JDEE– can be found at
http://sunsite.auc.dk/jdee/


File: emacspeak.info,  Node: emacspeak-js2,  Next: emacspeak-jss,  Prev: emacspeak-jdee,  Up: Emacspeak Commands And Options

12.105 emacspeak-js2
====================

JS2-mode http://js2-mode.googlecode.com/svn/trunk is a new, powerful
Emacs mode for working with JavaScript.  This module speech-enables js2.


File: emacspeak.info,  Node: emacspeak-jss,  Next: emacspeak-keymap,  Prev: emacspeak-js2,  Up: Emacspeak Commands And Options

12.106 emacspeak-jss
====================

jss connects Emacs to browsers that support the webkit debugging
protocol.  You can use this to connect to a running Chrome or Firefox.
Make sure to start chrome with the correct command-line flag: e.g., on
Linux: google-chrome –remote-debugging-port=9222 You can get Emacs
package jss from here: url = git://github.com/segv/jss.git Make sure to
first install the websocket package from elpa.  This package
speech-enables jss for Emacspeak users.  This is what I use alongside
package Kite at present when developing/debugging ChromeVox.  ChromeVox
== http://google-axs-chrome.googlecode.com http://chromevox.com


File: emacspeak.info,  Node: emacspeak-keymap,  Next: emacspeak-kite,  Prev: emacspeak-jss,  Up: Emacspeak Commands And Options

12.107 emacspeak-keymap
=======================

This module defines the emacspeak keybindings.  Note that the <fn> key
found on laptops is denoted <fn>

12.107.1 emacspeak-keymap Commands
----------------------------------

12.107.1.1 emacspeak-keymap-bindings-from-org
.............................................

 -- Command: emacspeak-keymap-bindings-from-org (variable filename)

     Load bindings from a specified file.

     (fn VARIABLE FILENAME)

12.107.1.2 emacspeak-keymap-bindings-to-org
...........................................

 -- Command: emacspeak-keymap-bindings-to-org (variable filename)

     Persists mapping to org file.

     (fn VARIABLE FILENAME)

12.107.1.3 emacspeak-keymap-choose-new-emacspeak-prefix
.......................................................

 -- Command: emacspeak-keymap-choose-new-emacspeak-prefix (prefix-key)

     Interactively select a new prefix key to use for all emacspeak
     commands.  The default is to use ‘C-e’  This command
     lets you switch the prefix to something else.  This is a useful thing
     to do if you run emacspeak on a remote machine from inside a terminal
     that is running inside a local emacspeak session.  You can have the
     remote emacspeak use a different control key to give your fingers some
     relief.

     (fn PREFIX-KEY)

12.107.2 emacspeak-keymap Options
---------------------------------

 -- Variable: User Option emacspeak-alt-keys
     *Specifies alt key bindings for the audio desktop.  You can turn
     the ‘Pause’ key on your Linux PC keyboard into a ‘alt’ key on Linux
     by having it emit the sequence ‘C-x@a’.

     Bindings specified here are available on prefix key ‘alt’ (not to
     be confused with alt==meta) for example, if you bind ‘s’ to command
     emacspeak-emergency-tts-restart then that command will be available
     on key ‘ALT s’

     KEYS should be a string constant in the format used for saving
     keyboard macros (see ‘edmacro-mode’).

     Command is an interactive command or a prefix-command that can be
     bound to a key.

     The value of this variable is an association list.  The car of each
     element specifies a key sequence.  The cdr specifies an interactive
     command that the key sequence executes.

 -- Variable: User Option emacspeak-hyper-keys
     *Specifies hyper key bindings for the audio desktop.  Emacs can use
     the ‘hyper’ key as a modifier key.  You can turn the ‘windows’ keys
     on your Linux PC keyboard into a ‘hyper’ key on Linux by having it
     emit the sequence ‘C-x@h’.

     Bindings specified here are available on prefix key ‘hyper’ for
     example, if you bind ‘b’ to command ‘bbdb ’ then that command will
     be available on key ‘hyper b’.

     KEYS should be a string constant in the format used for saving
     keyboard macros (see ‘edmacro-mode’).

     Command is an interactive command or a prefix-command that can be
     bound to a key.

     The value of this variable is an association list.  The car of each
     element specifies a key sequence.  The cdr specifies an interactive
     command that the key sequence executes.

 -- Variable: User Option emacspeak-personal-ctlx-keys
     *Specifies personal-ctlx key bindings for use with C-e C-x for the
     audio desktop.  Bindings specified here are available on prefix key
     C-e C-x for example, if you bind ‘C-s’ to command
     emacspeak-emergency-tts-restart then that command will be available
     on key C-e C-x C-s.  KEYS should be a string constant in the format
     used for saving keyboard macros (see ‘edmacro-mode’).

     Command is an interactive command or a prefix-command that can be
     bound to a key.

     The value of this variable is an association list.  The car of each
     element specifies a key sequence.  The cdr specifies an interactive
     command that the key sequence executes.

 -- Variable: User Option emacspeak-personal-keys
     *Specifies personal key bindings for the audio desktop.  Bindings
     specified here are available on prefix key C-e x for example, if
     you bind ‘s’ to command emacspeak-emergency-tts-restart then that
     command will be available on key C-e x s.

     KEYS should be a string constant in the format used for saving
     keyboard macros (see ‘edmacro-mode’).

     Command is an interactive command or a prefix-command that can be
     bound to a key.

     The value of this variable is an association list.  The car of each
     element specifies a key sequence.  The cdr specifies an interactive
     command that the key sequence executes.

 -- Variable: User Option emacspeak-super-keys
     *Specifies super key bindings for the audio desktop.  You can turn
     the right ‘windows menu’ keys on your Linux PC keyboard into a
     ‘super’ key on Linux by having it emit the sequence ‘C-x@s’.

     Bindings specified here are available on prefix key ‘super’ for
     example, if you bind ‘s’ to command emacspeak-emergency-tts-restart
     then that command will be available on key ‘super s’.  KEYS should
     be a string constant in the format used for saving keyboard macros
     (see ‘edmacro-mode’).

     Command is an interactive command or a prefix-command that can be
     bound to a key.

     The value of this variable is an association list.  The car of each
     element specifies a key sequence.  The cdr specifies an interactive
     command that the key sequence executes.


File: emacspeak.info,  Node: emacspeak-kite,  Next: emacspeak-kmacro,  Prev: emacspeak-keymap,  Up: Emacspeak Commands And Options

12.108 emacspeak-kite
=====================

kite connects Emacs to browsers that support the webkit debugging
protocol.  You can use this to connect to a running Chrome Make sure to
start chrome with the correct command-line flag: e.g., on Linux:
google-chrome –remote-debugging-port=9222 You can get Emacs package kite
from here: git clone git://github.com/jscheid/kite Make sure to first
install the websocket package from elpa.  This package speech-enables
kite for Emacspeak users.  This is what I use at present when
developing/debugging ChromeVox.  ChromeVox ==
http://google-axs-chrome.googlecode.com http://chromevox.com


File: emacspeak.info,  Node: emacspeak-kmacro,  Next: emacspeak-librivox,  Prev: emacspeak-kite,  Up: Emacspeak Commands And Options

12.109 emacspeak-kmacro
=======================

speech-enables kmacro — a kbd macro interface


File: emacspeak.info,  Node: emacspeak-librivox,  Next: emacspeak-lispy,  Prev: emacspeak-kmacro,  Up: Emacspeak Commands And Options

12.110 emacspeak-librivox
=========================

LIBRIVOX == http://www.librivox.org Free Audio Books API Info:
https://librivox.org/api/info It provides a simple Web API This module
implements an Emacspeak Librivox client.

12.110.1 Usage
--------------

main entry point is command ‘emacspeak-librivox’ bound to ‘C-; l’.  This
prompts with the following choices:
   • ‘a’ Author — Search by Author.
   • ‘t’ Title — Search by Title.
   • ‘g’ Genre — Search by Genre — with minibuffer completion.
   • ‘p’ Play — Play a book.
   • ‘d’ Directory — Browse local cache.

   Search results are displayed in a Web page that provides controls for
accessing the book.

12.110.2 emacspeak-librivox Commands
------------------------------------

12.110.2.1 emacspeak-librivox
.............................

 -- Command: emacspeak-librivox (search-type)
     ‘C-; l’
     ‘C-x @ h l’

     Launch a Librivox Search.

     (fn SEARCH-TYPE)

12.110.2.2 emacspeak-librivox-play
..................................

 -- Command: emacspeak-librivox-play (rss-url)

     Play book stream

     (fn RSS-URL)

12.110.2.3 emacspeak-librivox-search-by-author
..............................................

 -- Command: emacspeak-librivox-search-by-author (author &optional
          offset)

     Search by author. Both exact and partial matches for
     ‘author’. Optional interactive prefix arg ‘offset’ prompts for offset
     — use this for retrieving next set of results.

     (fn AUTHOR &optional OFFSET)

12.110.2.4 emacspeak-librivox-search-by-genre
.............................................

 -- Command: emacspeak-librivox-search-by-genre (genre &optional offset)

     Search by genre.
     Optional prefix arg ‘offset’ prompts for offset.

     (fn GENRE &optional OFFSET)

12.110.2.5 emacspeak-librivox-search-by-title
.............................................

 -- Command: emacspeak-librivox-search-by-title (title &optional offset)

     Search by title. Both exact and partial matches for ‘title’. Optional
     prefix arg ‘offset’ prompts for offset — use this for retrieving
     more results.

     (fn TITLE &optional OFFSET)

12.110.3 emacspeak-librivox Options
-----------------------------------

 -- Variable: User Option emacspeak-librivox-local-cache
     Location where we cache LIBRIVOX playlists.


File: emacspeak.info,  Node: emacspeak-lispy,  Next: emacspeak-lua,  Prev: emacspeak-librivox,  Up: Emacspeak Commands And Options

12.111 emacspeak-lispy
======================

LISPY == smart Navigation Of Lisp code This module speech-enables lispy.

12.111.1 Overview
-----------------

Lispy editing keeps delimiters balanced and Lispy navigators reliably
place point on either the opening or closing delimiter of the current
s-expression.  Emacspeak leverages this fact in the type of spoken
feedback that is produced.  All navigation commands produce the
following:
   • Speak the current s-expression when at the front of a sexp.
   • Speak the current line with option ‘emacspeak-show-point’ turned on
     when at the end of an s-expression.
   • Produce auditory icon ‘left’ or ‘right’ to indicate point being at
     the beginning or end of current line.
   • Indicate with an auditory icon if point did not move.


File: emacspeak.info,  Node: emacspeak-lua,  Next: emacspeak-m-player,  Prev: emacspeak-lispy,  Up: Emacspeak Commands And Options

12.112 emacspeak-lua
====================

LUA == lua-mode Speech-enable lua-mode.


File: emacspeak.info,  Node: emacspeak-m-player,  Next: emacspeak-magit,  Prev: emacspeak-lua,  Up: Emacspeak Commands And Options

12.113 emacspeak-m-player
=========================

Defines an Emacspeak front-end for interacting with ‘mplayer’.  Program
‘mplayer’ is a versatile media player capable of playing many streaming
media formats.  This module provides complete access to all ‘mplayer’
functionality from a convenient Emacs interface.

12.113.1 Usage
--------------

The main entry-point is command ‘emacspeak-multimedia’ bound to ‘C-e ;’.
This prompts for and launches the desired media stream.  Once a stream
is playing, you can control it with single-letter keystrokes in the
‘*M-Player*’ buffer.  Alternatively, you can switch away from that
buffer to do real work, And invoke ‘m-player’ commands by first pressing
‘C-e ;’.  As an example, pressing ‘v’ in the ‘*M-Player*’ buffer prompts
for and sets the volume; When not in the ‘*M-Player*’ buffer, you can
achieve the same by pressing ‘C-e ; v’.  Press ‘C-h b’ in the
‘*M-Player*’ buffer to list ‘m-player’ keybindings.

12.113.2 emacspeak-m-player Commands
------------------------------------

12.113.2.1 emacspeak-m-player
.............................

 -- Command: emacspeak-m-player (resource &optional play-list)

     Play specified resource using m-player.  Optional prefix argument
     play-list interprets resource as a play-list.  Second interactive
     prefix arg adds option -allow-dangerous-playlist-parsing to mplayer.
     Resource is a media resource or playlist containing media resources.
     The player is placed in a buffer in emacspeak-m-player-mode.

     (fn RESOURCE &optional PLAY-LIST)

12.113.2.2 emacspeak-m-player-add-autopan
.........................................

 -- Command: emacspeak-m-player-add-autopan

     Add predefined autopan effect.

12.113.2.3 emacspeak-m-player-add-equalizer
...........................................

 -- Command: emacspeak-m-player-add-equalizer (&optional reset)

     Add equalizer to playing stream.  Equalizer is updated as each change
     is made, and the final effect set by pressing RET.  Interactive prefix
     arg ‘reset’ starts with all filters set to 0.

     (fn &optional RESET)

12.113.2.4 emacspeak-m-player-add-filter
........................................

 -- Command: emacspeak-m-player-add-filter (filter-name &optional edit)

     Adds specified filter. Prompts with one of several pre-defined
     filters. Optional interactive prefix arg ‘edit’ enables editing the
     selected filter before it is applied.

     (fn FILTER-NAME &optional EDIT)

12.113.2.5 emacspeak-m-player-add-ladspa
........................................

 -- Command: emacspeak-m-player-add-ladspa

     Apply plugin to running MPlayer.

12.113.2.6 emacspeak-m-player-alt-src-step
..........................................

 -- Command: emacspeak-m-player-alt-src-step (step)

     Move within an ASF playlist.

     (fn STEP)

12.113.2.7 emacspeak-m-player-amark-add
.......................................

 -- Command: emacspeak-m-player-amark-add (name &optional
          prompt-position)

     Set AMark ‘name’ at current position in current audio stream.
     Interactive prefix arg prompts for position.
     As the default, use current position.

     (fn NAME &optional PROMPT-POSITION)

12.113.2.8 emacspeak-m-player-amark-jump
........................................

 -- Command: emacspeak-m-player-amark-jump

     Jump to specified AMark.

12.113.2.9 emacspeak-m-player-apply-reverb-preset
.................................................

 -- Command: emacspeak-m-player-apply-reverb-preset (preset)

     Prompt for a predefined reverb preset and apply it.
     You need to use mplayer built with ladspa support, and have package
     tap-reverb already installed.

     (fn PRESET)

12.113.2.10 emacspeak-m-player-backward-10min
.............................................

 -- Command: emacspeak-m-player-backward-10min

     Move backward by ten minutes.

12.113.2.11 emacspeak-m-player-backward-10s
...........................................

 -- Command: emacspeak-m-player-backward-10s

     Move back by 10 seconds.

12.113.2.12 emacspeak-m-player-backward-1min
............................................

 -- Command: emacspeak-m-player-backward-1min

     Move back by 1 minute.

12.113.2.13 emacspeak-m-player-balance
......................................

 -- Command: emacspeak-m-player-balance

     Set left/right balance.

12.113.2.14 emacspeak-m-player-beginning-of-track
.................................................

 -- Command: emacspeak-m-player-beginning-of-track

     Move to beginning of track.

12.113.2.15 emacspeak-m-player-bind-accelerator
...............................................

 -- Command: emacspeak-m-player-bind-accelerator (directory key)

     Binds key to invoke m-player  on specified directory.

     (fn DIRECTORY KEY)

12.113.2.16 emacspeak-m-player-clear-filters
............................................

 -- Command: emacspeak-m-player-clear-filters

     Clear all active filters

12.113.2.17 emacspeak-m-player-command
......................................

 -- Command: emacspeak-m-player-command (key)

     Invoke MPlayer commands.

     (fn KEY)

12.113.2.18 emacspeak-m-player-customize-options
................................................

 -- Command: emacspeak-m-player-customize-options

     Use Customize to manipulate MPlayer options.

12.113.2.19 emacspeak-m-player-delete-filter
............................................

 -- Command: emacspeak-m-player-delete-filter (filter)

     Delete filter.

     (fn FILTER)

12.113.2.20 emacspeak-m-player-delete-ladspa
............................................

 -- Command: emacspeak-m-player-delete-ladspa

     Delete plugin from  running MPlayer.

12.113.2.21 emacspeak-m-player-display-metadata
...............................................

 -- Command: emacspeak-m-player-display-metadata

     Display metadata after refreshing it if needed.

12.113.2.22 emacspeak-m-player-display-percent
..............................................

 -- Command: emacspeak-m-player-display-percent

     Display current percentage.

12.113.2.23 emacspeak-m-player-display-position
...............................................

 -- Command: emacspeak-m-player-display-position

     Display current position in track and its length.

12.113.2.24 emacspeak-m-player-double-speed
...........................................

 -- Command: emacspeak-m-player-double-speed

     Scale speed by 2.0

12.113.2.25 emacspeak-m-player-edit-reverb
..........................................

 -- Command: emacspeak-m-player-edit-reverb

     Edit  current ladspa reverb filter.
     See option emacspeak-m-player-reverb-filter to customize reverb filter values.
     You need to use mplayer built with ladspa support, and have package
     tap-reverb already installed.

12.113.2.26 emacspeak-m-player-end-of-track
...........................................

 -- Command: emacspeak-m-player-end-of-track

     Move to beginning of track.

12.113.2.27 emacspeak-m-player-equalizer-control
................................................

 -- Command: emacspeak-m-player-equalizer-control (v)

     Manipulate values in specified vector using minibuffer.
     Applies  the resulting value at each step.

     (fn V)

12.113.2.28 emacspeak-m-player-equalizer-preset
...............................................

 -- Command: emacspeak-m-player-equalizer-preset (name)

     Prompts for  equalizer preset and applies it to current stream.

     The following presets are available:

     flat classical club dance full-bass full-bass-and-treble
      full-treble headphones large-hall live party pop reggae rock
      ska soft soft-rock techno

     (fn NAME)

12.113.2.29 emacspeak-m-player-faster
.....................................

 -- Command: emacspeak-m-player-faster

     Speed up  playback.
     This affects pitch.

12.113.2.30 emacspeak-m-player-forward-10min
............................................

 -- Command: emacspeak-m-player-forward-10min

     Move forward by ten minutes.

12.113.2.31 emacspeak-m-player-forward-10s
..........................................

 -- Command: emacspeak-m-player-forward-10s

     Move forward by 10 seconds.

12.113.2.32 emacspeak-m-player-forward-1min
...........................................

 -- Command: emacspeak-m-player-forward-1min

     Move forward by 1 minute.

12.113.2.33 emacspeak-m-player-from-media-history
.................................................

 -- Command: emacspeak-m-player-from-media-history (posn)
     ‘C-. h’
     ‘C-' h’
     ‘C-x @ s h’

     Play media from media-history.
     Numeric arg ‘posn’ specifies position in history.

     (fn POSN)

12.113.2.34 emacspeak-m-player-get-length
.........................................

 -- Command: emacspeak-m-player-get-length

     Display length of track in seconds.

12.113.2.35 emacspeak-m-player-half-speed
.........................................

 -- Command: emacspeak-m-player-half-speed

     Scale speed by 0.5.

12.113.2.36 emacspeak-m-player-left-channel
...........................................

 -- Command: emacspeak-m-player-left-channel

     Play both channels on left channel.

12.113.2.37 emacspeak-m-player-load
...................................

 -- Command: emacspeak-m-player-load (resource &optional append)

     Load specified resource into a running  m-player.
     Interactive prefix arg appends the new resource to what is playing.

     (fn RESOURCE &optional APPEND)

12.113.2.38 emacspeak-m-player-load-file
........................................

 -- Command: emacspeak-m-player-load-file (f)

     Load specified file.

     (fn F)

12.113.2.39 emacspeak-m-player-load-playlist
............................................

 -- Command: emacspeak-m-player-load-playlist (f)

     Load specified playlist file.

     (fn F)

12.113.2.40 emacspeak-m-player-locate-media
...........................................

 -- Command: emacspeak-m-player-locate-media (pattern)
     ‘C-. l’
     ‘C-' l’
     ‘C-x @ s l’

     Locate media matching specified pattern.  The results can be
     played as a play-list by pressing [RET] on the first line.
     Pattern is first converted to a regexp that accepts common
     punctuation separators (-,._’") in place of white-space.
     Results are placed in a Locate buffer and can be played using
     M-Player — use M-x emacspeak-dired-open-this-file locally bound to C-RET
     to play individual tracks.

     (fn PATTERN)

12.113.2.41 emacspeak-m-player-mode
...................................

 -- Command: emacspeak-m-player-mode

     Major mode for m-player interaction.

     key             binding
     —             ——-

     C-l		ladspa
     RET		emacspeak-m-player-load
     ESC		Prefix Command
     SPC		emacspeak-m-player-pause
     %		emacspeak-m-player-display-percent
     (		emacspeak-m-player-left-channel
     )		emacspeak-m-player-right-channel
     +		emacspeak-m-player-volume-up
     ,		emacspeak-m-player-backward-10s
     -		emacspeak-m-player-volume-down
     .		emacspeak-m-player-forward-10s
     /		emacspeak-m-player-restore-process
     1 .. 9		emacspeak-m-player-volume-set
     ;		emacspeak-m-player-pop-to-player
     <		emacspeak-m-player-backward-1min
     =		emacspeak-m-player-volume-up
     >		emacspeak-m-player-forward-1min
     ?		emacspeak-m-player-display-position
     A		emacspeak-m-player-amark-add
     C		emacspeak-m-player-clear-filters
     E		emacspeak-m-player-add-equalizer
     G		emacspeak-m-player-seek-percentage
     L		emacspeak-m-player-locate-media
     M		emacspeak-m-player-display-metadata
     O		emacspeak-m-player-reset-options
     P		emacspeak-m-player-apply-reverb-preset
     Q		emacspeak-m-player-quit
     R		emacspeak-m-player-edit-reverb
     S		emacspeak-amark-save
     [		emacspeak-m-player-slower
     \		emacspeak-m-player-persist-process
     ]		emacspeak-m-player-faster
     a		emacspeak-m-player-add-autopan
     b		emacspeak-wizards-view-buffers-filtered-by-m-player-mode
     c		emacspeak-m-player-slave-command
     d		emacspeak-m-player-delete-filter
     e		emacspeak-m-player-equalizer-preset
     f		emacspeak-m-player-add-filter
     g		emacspeak-m-player-seek-absolute
     i		emacspeak-m-player-stream-info
     j		emacspeak-m-player-amark-jump
     k		emacspeak-m-player-quit
     l		emacspeak-m-player-get-length
     m		emacspeak-m-player-speak-mode-line
     n		emacspeak-m-player-next-track
     o		emacspeak-m-player-customize-options
     p		emacspeak-m-player-previous-track
     q		bury-buffer
     r		emacspeak-m-player-seek-relative
     s		emacspeak-m-player-scale-speed
     t		emacspeak-m-player-play-tracks-jump
     u		emacspeak-m-player-url
     v		emacspeak-m-player-volume-change
     w		emacspeak-m-player-write-clip
     x		emacspeak-m-player-pan
     {		emacspeak-m-player-half-speed
     }		emacspeak-m-player-double-speed
     DEL		emacspeak-m-player-reset-speed
     <down>		emacspeak-m-player-forward-1min
     <end>		emacspeak-m-player-end-of-track
     <home>		emacspeak-m-player-beginning-of-track
     <left>		emacspeak-m-player-backward-10s
     <next>		emacspeak-m-player-forward-10min
     <prior>		emacspeak-m-player-backward-10min
     <right>		emacspeak-m-player-forward-10s
     <up>		emacspeak-m-player-backward-1min

     M-,		emacspeak-m-player-set-clip-start
     M-.		emacspeak-m-player-set-clip-end
     M-l		emacspeak-m-player-load-playlist

     In addition to any hooks its parent mode ‘comint-mode’ might have run,
     this mode runs the hook ‘emacspeak-m-player-mode-hook’, as the final or penultimate step
     during initialization.

12.113.2.42 emacspeak-m-player-next-track
.........................................

 -- Command: emacspeak-m-player-next-track

     Move to next track.

12.113.2.43 emacspeak-m-player-pan
..................................

 -- Command: emacspeak-m-player-pan

     Pan from left to right   and back from right to left one step at a time.

12.113.2.44 emacspeak-m-player-pause
....................................

 -- Command: emacspeak-m-player-pause

     Pause or unpause media player.

12.113.2.45 emacspeak-m-player-persist-process
..............................................

 -- Command: emacspeak-m-player-persist-process (&optional name)

     Persists current m-player process instance by renaming its buffer.
     Optional interactive prefix arg prompts for name to use for  player.

     (fn &optional NAME)

12.113.2.46 emacspeak-m-player-play-rss
.......................................

 -- Command: emacspeak-m-player-play-rss (rss-url)

     Play an RSS stream by converting to  an M3U playlist.

     (fn RSS-URL)

12.113.2.47 emacspeak-m-player-play-tracks-jump
...............................................

 -- Command: emacspeak-m-player-play-tracks-jump (step)

     Move within the play tree.

     (fn STEP)

12.113.2.48 emacspeak-m-player-play-tree-up
...........................................

 -- Command: emacspeak-m-player-play-tree-up (step)

     Move within the play tree.

     (fn STEP)

12.113.2.49 emacspeak-m-player-pop-to-player
............................................

 -- Command: emacspeak-m-player-pop-to-player

     Pop to m-player buffer.

12.113.2.50 emacspeak-m-player-previous-track
.............................................

 -- Command: emacspeak-m-player-previous-track

     Move to previous track.

12.113.2.51 emacspeak-m-player-quit
...................................

 -- Command: emacspeak-m-player-quit

     Quit media player.

12.113.2.52 emacspeak-m-player-reset-options
............................................

 -- Command: emacspeak-m-player-reset-options

     Reset MPlayer options to initial defaults.

12.113.2.53 emacspeak-m-player-reset-speed
..........................................

 -- Command: emacspeak-m-player-reset-speed

     Reset playing speed to normal.

12.113.2.54 emacspeak-m-player-restore-process
..............................................

 -- Command: emacspeak-m-player-restore-process

     Restore emacspeak-m-player-process from current buffer.
     Check first if current buffer is in emacspeak-m-player-mode.

12.113.2.55 emacspeak-m-player-right-channel
............................................

 -- Command: emacspeak-m-player-right-channel

     Play on right channel.

12.113.2.56 emacspeak-m-player-scale-speed
..........................................

 -- Command: emacspeak-m-player-scale-speed (factor)

     Scale speed by specified factor.

     (fn FACTOR)

12.113.2.57 emacspeak-m-player-seek-absolute
............................................

 -- Command: emacspeak-m-player-seek-absolute (pos)

     Seek  to absolute specified pos in seconds.

     (fn POS)

12.113.2.58 emacspeak-m-player-seek-percentage
..............................................

 -- Command: emacspeak-m-player-seek-percentage (pos)

     Seek  to absolute specified pos in percent.

     (fn POS)

12.113.2.59 emacspeak-m-player-seek-relative
............................................

 -- Command: emacspeak-m-player-seek-relative (offset)

     Seek  by offset into stream from current position.

     (fn OFFSET)

12.113.2.60 emacspeak-m-player-set-clip-end
...........................................

 -- Command: emacspeak-m-player-set-clip-end

     Set end of clip marker.

12.113.2.61 emacspeak-m-player-set-clip-start
.............................................

 -- Command: emacspeak-m-player-set-clip-start

     Set start of clip marker.

12.113.2.62 emacspeak-m-player-shuffle
......................................

 -- Command: emacspeak-m-player-shuffle
     ‘C-e :’
     ‘<fn> :’

     Launch M-Player with shuffle turned on.

12.113.2.63 emacspeak-m-player-slave-command
............................................

 -- Command: emacspeak-m-player-slave-command (command)

     Dispatch slave command read from minibuffer.

     (fn COMMAND)

12.113.2.64 emacspeak-m-player-slower
.....................................

 -- Command: emacspeak-m-player-slower

     Slow down playback.
     This affects pitch.

12.113.2.65 emacspeak-m-player-speak-mode-line
..............................................

 -- Command: emacspeak-m-player-speak-mode-line

     Speak mode line

12.113.2.66 emacspeak-m-player-stream-info
..........................................

 -- Command: emacspeak-m-player-stream-info (&optional toggle-cue)

     Speak and display metadata if available.
     Interactive prefix arg toggles automatic cueing of ICY info updates.

     (fn &optional TOGGLE-CUE)

12.113.2.67 emacspeak-m-player-url
..................................

 -- Command: emacspeak-m-player-url (url &optional playlist-p)
     ‘C-, u’
     ‘C-x @ a u’

     Call emacspeak-m-player with specified URL.

     (fn URL &optional PLAYLIST-P)

12.113.2.68 emacspeak-m-player-using-hrtf
.........................................

 -- Command: emacspeak-m-player-using-hrtf
     ‘C-; '’
     ‘C-x @ h '’

     Add af resample=48000,hrtf to startup options.
     This will work if the soundcard is set to 48000.

12.113.2.69 emacspeak-m-player-using-openal
...........................................

 -- Command: emacspeak-m-player-using-openal (resource &optional
          play-list)
     ‘C-; ;’
     ‘C-x @ h ;’

     Use openal as the audio output driver. Adding hrtf=true to
     ~/.alsoftrc gives HRTF. You need to have openal installed and have an
     mplayer that has been compiled with openal support to use this
     feature. Calling spec is like ‘emacspeak-m-player’.

     (fn RESOURCE &optional PLAY-LIST)

12.113.2.70 emacspeak-m-player-volume-change
............................................

 -- Command: emacspeak-m-player-volume-change (value)

     Change volume to specified absolute value.

     (fn VALUE)

12.113.2.71 emacspeak-m-player-volume-down
..........................................

 -- Command: emacspeak-m-player-volume-down

     Decrease volume.

12.113.2.72 emacspeak-m-player-volume-set
.........................................

 -- Command: emacspeak-m-player-volume-set (&optional arg)

     Set Volume in steps from 1 to 9.

     (fn &optional ARG)

12.113.2.73 emacspeak-m-player-volume-up
........................................

 -- Command: emacspeak-m-player-volume-up

     Increase volume.

12.113.2.74 emacspeak-m-player-write-clip
.........................................

 -- Command: emacspeak-m-player-write-clip

     Invoke mp3splt to clip selected range in current file.

12.113.2.75 emacspeak-m-player-youtube-player
.............................................

 -- Command: emacspeak-m-player-youtube-player (url)

     Use youtube-dl and mplayer to stream the audio for YouTube content.

     (fn URL)

12.113.2.76 emacspeak-multimedia
................................

 -- Command: emacspeak-multimedia
     ‘C-e ;’
     ‘<fn> ;’

     Start or control Emacspeak multimedia player.

     Uses current context to prompt for media to play.
     Controls media playback when already playing a stream.

     key             binding
     —             ——-

     C-l		ladspa
     RET		emacspeak-m-player-load
     ESC		Prefix Command
     SPC		emacspeak-m-player-pause
     %		emacspeak-m-player-display-percent
     (		emacspeak-m-player-left-channel
     )		emacspeak-m-player-right-channel
     +		emacspeak-m-player-volume-up
     ,		emacspeak-m-player-backward-10s
     -		emacspeak-m-player-volume-down
     .		emacspeak-m-player-forward-10s
     /		emacspeak-m-player-restore-process
     1 .. 9		emacspeak-m-player-volume-set
     ;		emacspeak-m-player-pop-to-player
     <		emacspeak-m-player-backward-1min
     =		emacspeak-m-player-volume-up
     >		emacspeak-m-player-forward-1min
     ?		emacspeak-m-player-display-position
     A		emacspeak-m-player-amark-add
     C		emacspeak-m-player-clear-filters
     E		emacspeak-m-player-add-equalizer
     G		emacspeak-m-player-seek-percentage
     L		emacspeak-m-player-locate-media
     M		emacspeak-m-player-display-metadata
     O		emacspeak-m-player-reset-options
     P		emacspeak-m-player-apply-reverb-preset
     Q		emacspeak-m-player-quit
     R		emacspeak-m-player-edit-reverb
     S		emacspeak-amark-save
     [		emacspeak-m-player-slower
     \		emacspeak-m-player-persist-process
     ]		emacspeak-m-player-faster
     a		emacspeak-m-player-add-autopan
     b		emacspeak-wizards-view-buffers-filtered-by-m-player-mode
     c		emacspeak-m-player-slave-command
     d		emacspeak-m-player-delete-filter
     e		emacspeak-m-player-equalizer-preset
     f		emacspeak-m-player-add-filter
     g		emacspeak-m-player-seek-absolute
     i		emacspeak-m-player-stream-info
     j		emacspeak-m-player-amark-jump
     k		emacspeak-m-player-quit
     l		emacspeak-m-player-get-length
     m		emacspeak-m-player-speak-mode-line
     n		emacspeak-m-player-next-track
     o		emacspeak-m-player-customize-options
     p		emacspeak-m-player-previous-track
     q		bury-buffer
     r		emacspeak-m-player-seek-relative
     s		emacspeak-m-player-scale-speed
     t		emacspeak-m-player-play-tracks-jump
     u		emacspeak-m-player-url
     v		emacspeak-m-player-volume-change
     w		emacspeak-m-player-write-clip
     x		emacspeak-m-player-pan
     {		emacspeak-m-player-half-speed
     }		emacspeak-m-player-double-speed
     DEL		emacspeak-m-player-reset-speed
     <down>		emacspeak-m-player-forward-1min
     <end>		emacspeak-m-player-end-of-track
     <home>		emacspeak-m-player-beginning-of-track
     <left>		emacspeak-m-player-backward-10s
     <next>		emacspeak-m-player-forward-10min
     <prior>		emacspeak-m-player-backward-10min
     <right>		emacspeak-m-player-forward-10s
     <up>		emacspeak-m-player-backward-1min

     M-,		emacspeak-m-player-set-clip-start
     M-.		emacspeak-m-player-set-clip-end
     M-l		emacspeak-m-player-load-playlist

     .

12.113.3 emacspeak-m-player Options
-----------------------------------

 -- Variable: User Option emacspeak-m-player-options
     Options passed to mplayer.

 -- Variable: User Option emacspeak-m-player-program
     Media player program.

 -- Variable: User Option emacspeak-m-player-recent-amark-name
     Name used to mark position where we quit a stream.

 -- Variable: User Option emacspeak-m-player-reverb-filter
     Tap Reverb Settings.

 -- Variable: User Option emacspeak-m-player-youtube-dl
     YouTube download tool

 -- Variable: User Option emacspeak-media-location-bindings
     *Map specific key sequences to launching MPlayer accelerators on a
     specific directory.


File: emacspeak.info,  Node: emacspeak-magit,  Next: emacspeak-make-mode,  Prev: emacspeak-m-player,  Up: Emacspeak Commands And Options

12.114 emacspeak-magit
======================

MAGIT == Git interface in Emacs git clone
git://github.com/magit/magit.git


File: emacspeak.info,  Node: emacspeak-make-mode,  Next: emacspeak-man,  Prev: emacspeak-magit,  Up: Emacspeak Commands And Options

12.115 emacspeak-make-mode
==========================

This module speech enables make-mode


File: emacspeak.info,  Node: emacspeak-man,  Next: emacspeak-markdown,  Prev: emacspeak-make-mode,  Up: Emacspeak Commands And Options

12.116 emacspeak-man
====================

Provide additional advice to man-mode

12.116.1 emacspeak-man Commands
-------------------------------

12.116.1.1 emacspeak-man-browse-man-page
........................................

 -- Command: emacspeak-man-browse-man-page

     Browse the man page –read it a paragraph at a time

12.116.1.2 emacspeak-man-speak-this-section
...........................................

 -- Command: emacspeak-man-speak-this-section

     Speak current section


File: emacspeak.info,  Node: emacspeak-markdown,  Next: emacspeak-maths,  Prev: emacspeak-man,  Up: Emacspeak Commands And Options

12.117 emacspeak-markdown
=========================

MARKDOWN == Light-weight markup.  This module speech-enables markdown.el


File: emacspeak.info,  Node: emacspeak-maths,  Next: emacspeak-message,  Prev: emacspeak-markdown,  Up: Emacspeak Commands And Options

12.118 emacspeak-maths
======================

12.118.1 Setup
--------------

Do not try what follows until you have read js/node/README.org and
successfully set up nvm (Node Version Manager) as described there.

12.118.2 Technical Overview
---------------------------

Spoken mathematics on the emacspeak audio desktop.  Use a NodeJS based
speech-rule-engine for Mathematics as the backend for processing
mathematical markup.  The result of this processing is an annotated
S-expression that is rendered via Emacspeak’s speech facilities.
Annotations follow Aural CSS as implemented in Emacspeak, This allows us
to map these expressions to aural properties supported by specific TTS
engines.

12.118.3 Basic Usage:
---------------------

Start the server/client: M-x emacspeak-maths-start.  Once the server and
client are started, you can browse any number of math expressions using
the emacspeak-maths-navigator described below.  Note: In general, once
everything is configured correctly, using the maths navigator
automatically starts the server and client.  Invoke the Navigator using
s-spc — this is the <windows> key on Linux.  Now you can use these keys:
   • Show Output <o> Switch to output buffer and quit Maths Navigator
   • Enter: <SPC> Enter a LaTeX expression.
   • Smart-Enter: <enter> Enter the guessed expression with no
     prompting.
   • Alt-Text <a> Process alt-text under point as LaTeX.
   • Down <down> Move down a level.
   • Up <up> Move up a level.
   • Left <left> Move left.
   • Right <right> Move right.
   • Exit <any other key> Exit navigator.

   The current expression is spoken after each of the above commands.
It is also displayed in a special buffer *Spoken Math*.  That buffer
holds all previously generated output, And Emacs commands forward-page
and backward-page can be used to move through each chunk of output.

12.118.4 emacspeak-maths Commands
---------------------------------

12.118.4.1 emacspeak-maths-depth
................................

 -- Command: emacspeak-maths-depth

     Move depth in current Math expression.

12.118.4.2 emacspeak-maths-down
...............................

 -- Command: emacspeak-maths-down

     Move down in current Math expression.

12.118.4.3 emacspeak-maths-enter
................................

 -- Command: emacspeak-maths-enter (latex)

     Send a LaTeX expression to Maths server.
     Tries to guess default based on context.
     Uses guessed default if user enters an empty string.

     (fn LATEX)

12.118.4.4 emacspeak-maths-enter-guess
......................................

 -- Command: emacspeak-maths-enter-guess

     Send the guessed  LaTeX expression to Maths server.
     Guess is based on context.

12.118.4.5 emacspeak-maths-left
...............................

 -- Command: emacspeak-maths-left

     Move left in current Math expression.

12.118.4.6 emacspeak-maths-restart
..................................

 -- Command: emacspeak-maths-restart

     Restart Node math-server if running. Otherwise starts a new one.

12.118.4.7 emacspeak-maths-right
................................

 -- Command: emacspeak-maths-right

     Move right in current Math expression.

12.118.4.8 emacspeak-maths-root
...............................

 -- Command: emacspeak-maths-root

     Move root in current Math expression.

12.118.4.9 emacspeak-maths-shutdown
...................................

 -- Command: emacspeak-maths-shutdown

     Shutdown client and server processes.

12.118.4.10 emacspeak-maths-speak-alt
.....................................

 -- Command: emacspeak-maths-speak-alt

     Speak alt text as Maths.
     For use on Wikipedia pages  for example.

12.118.4.11 emacspeak-maths-spoken-mode
.......................................

 -- Command: emacspeak-maths-spoken-mode

     Special mode for interacting with Spoken Math.

     This mode is used by the special buffer that displays spoken math
     returned from the Node server.
     This mode is similar to Emacs’ ‘view-mode’.
     see the key-binding list at the end of this description.
     Emacs online help facility to look up help on these commands.

     key             binding
     —             ——-

     [		backward-page
     ]		forward-page
     h		emacspeak-maths-left
     j		emacspeak-maths-down
     k		emacspeak-maths-up
     l		emacspeak-maths-right

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘emacspeak-maths-spoken-mode-hook’, as the final or penultimate step
     during initialization.

12.118.4.12 emacspeak-maths-start
.................................

 -- Command: emacspeak-maths-start

     Start Maths server bridge.

12.118.4.13 emacspeak-maths-switch-to-output
............................................

 -- Command: emacspeak-maths-switch-to-output

     Switch to output buffer.

12.118.4.14 emacspeak-maths-up
..............................

 -- Command: emacspeak-maths-up

     Move up in current Math expression.

12.118.5 emacspeak-maths Options
--------------------------------

 -- Variable: User Option emacspeak-maths-inferior-program
     Location of ‘node’ executable.  Make sure the environment in which
     Emacs is launched finds the right installation of node.  M-x
     package-install nvm makes it easier to have Emacs find the right
     node install.


File: emacspeak.info,  Node: emacspeak-message,  Next: emacspeak-metapost,  Prev: emacspeak-maths,  Up: Emacspeak Commands And Options

12.119 emacspeak-message
========================

advice for posting message commands

12.119.1 emacspeak-message Options
----------------------------------

 -- Variable: User Option emacspeak-message-punctuation-mode
     Pronunciation mode to use for message buffers.


File: emacspeak.info,  Node: emacspeak-metapost,  Next: emacspeak-midge,  Prev: emacspeak-message,  Up: Emacspeak Commands And Options

12.120 emacspeak-metapost
=========================

Speech-enables metapost mode.  metapost is a powerful drawing package
typically installed as mpost by modern TeX installations.


File: emacspeak.info,  Node: emacspeak-midge,  Next: emacspeak-mines,  Prev: emacspeak-metapost,  Up: Emacspeak Commands And Options

12.121 emacspeak-midge
======================

This module speech enables midge.  Midge is a MIDI composer/editor tool.
From the package README file: ; Midge, for midi generator, is a text to
midi translator.  ; It creates type 1 (ie multitrack) midi files from
text ; descriptions of music.  It is a single perl script, which ; does
not require any additional modules.  The package also provides a
convenient emacs mode for editing and playing midge files.  Midge’s
homepage is at: http://www.dmriley.demon.co.uk/code/midge/


File: emacspeak.info,  Node: emacspeak-mines,  Next: emacspeak-mspools,  Prev: emacspeak-midge,  Up: Emacspeak Commands And Options

12.122 emacspeak-mines
======================

MINES == Minesweeper game in emacs.  The game itself provides a fully
keyboard driven interface.  In addition, Emacspeak provides these
additional interactive commands:
   • ‘SPC’ Speak current cell.
   • ‘.’ Speak neighbors of current cell.
   • ‘,’ Speak number of marks
   • ‘a’ Move to beginning of row.
   • ‘e’ Move to end of row.
   • ‘g’ Move to specified cell
   • ‘s’ Move to next uncovered cell.
   • ‘/’ Speak number of remaining uncovered cells.
   • ‘'’ Speaks entire board.

   Speaking cell neighbors uses appropriate clause boundaries to group
related cells — neighbors are read left-to-right, top-to-bottom.  Moving
to the left/right edge of the board produces an appropriate auditory
icon.

12.122.1 emacspeak-mines Commands
---------------------------------

12.122.1.1 emacspeak-mines-beginning-of-row
...........................................

 -- Command: emacspeak-mines-beginning-of-row

     Move to beginning of row

12.122.1.2 emacspeak-mines-end-of-row
.....................................

 -- Command: emacspeak-mines-end-of-row

     Move to end of row

12.122.1.3 emacspeak-mines-goto
...............................

 -- Command: emacspeak-mines-goto (index)

     Move to specified cell.

     (fn INDEX)

12.122.1.4 emacspeak-mines-jump-to-uncovered-cell
.................................................

 -- Command: emacspeak-mines-jump-to-uncovered-cell (from-beginning)

     Jump to next uncovered cell. With interactive prefix-arg, jump
     to beginning of board before searching.

     (fn FROM-BEGINNING)

12.122.1.5 emacspeak-mines-speak-board
......................................

 -- Command: emacspeak-mines-speak-board

     Speak the board.

12.122.1.6 emacspeak-mines-speak-cell
.....................................

 -- Command: emacspeak-mines-speak-cell

     Speak current cell.

12.122.1.7 emacspeak-mines-speak-mark-count
...........................................

 -- Command: emacspeak-mines-speak-mark-count

     Count and speak number of marks.

12.122.1.8 emacspeak-mines-speak-neighbors
..........................................

 -- Command: emacspeak-mines-speak-neighbors

     Speak neighboring cells in sorted order.

12.122.1.9 emacspeak-mines-speak-uncovered-count
................................................

 -- Command: emacspeak-mines-speak-uncovered-count

     Speak number of uncovered cells.


File: emacspeak.info,  Node: emacspeak-mspools,  Next: emacspeak-muggles,  Prev: emacspeak-mines,  Up: Emacspeak Commands And Options

12.123 emacspeak-mspools
========================

Speech-enable mspools –a package that lets you monitor multiple
maildrops


File: emacspeak.info,  Node: emacspeak-muggles,  Next: emacspeak-muse,  Prev: emacspeak-mspools,  Up: Emacspeak Commands And Options

12.124 emacspeak-muggles
========================

MUGGLES == Emacspeak spells for power-users.

   This module implements no new functionality — contrast with
emacspeak-wizards.  Instead, it uses package hydra to provide
convenience key-bindings that access existing Emacspeak functionality.
You need to install package Hydra first: ‘M-x package-install hydra’.

   Note that on newer versions of Emacs, loading this module will
attempt to automatically install package hydra if it is not found.

12.124.1 Implemented Muggles
----------------------------

   • Brightness: <print> Control display brightness using xbacklight.
   • View-Mode: <C-c v> Temporarily behave like view-mode.
   • Navigate: <s-n> Navigate with ease.
   • org-mode structure nav: <C-c C-SPC> Structure navigation for
     org-mode.
   • org-mode tables: <C-c t> Table UI for org-mode tables.
   • m-player: <s-m> Emacspeak-M-Player Commands
   • m-player: <s-;> Emacspeak-M-Player muggle
   • pianobar: <s-’> Emacspeak-M-pianobar Commands
   • hideshow: C-c h Provide HideShow bindings.
   • origami: C-c / Origami bindings.
   • toggle-option: <C-c o> Single binding for toggling options.
   • outliner: <C-c .> Bindings from outline-minor-mode.
   • Info-Summary: <?> in Info Info Summary Muggle
   • Repeatable-Yank: <C-y> Smart yank
   • SmartParens: <C-c ,> Smart Parens

   Emacspeak automatically speaks Hydra hints when displayed.  To
silence all Hydra hints, set hydra-is-helpful to nil.  To temporarily
silence speaking of Hydra hints, Muggles can bind command
‘emacspeak-hydra-toggle-talkative’.  As an example, Muggle ‘ViewMode’
binds ‘s’ to this command.

12.124.2 emacspeak-muggles Commands
-----------------------------------

12.124.2.1 emacspeak-muggles-brightness/body
............................................

 -- Command: emacspeak-muggles-brightness/body
     ‘<print>’

     Call the body in the "emacspeak-muggles-brightness" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-brightness")’,
     "s":    ‘xbacklight-set’,
     "g":    ‘xbacklight-get’,
     "<print>":    ‘xbacklight-black’,
     "0":    ‘xbacklight-black’,
     "1":    ‘xbacklight-white’,
     "d":    ‘xbacklight-decrement’,
     "i":    ‘xbacklight-increment’,
     "SPC":    ‘xbacklight-increment’

     The body can be accessed via ‘emacspeak-muggles-brightness/body’.

12.124.2.2 emacspeak-muggles-emacspeak-m-player-mode-map-cmd
............................................................

 -- Command: emacspeak-muggles-emacspeak-m-player-mode-map-cmd
     ‘s-m’

     Temporarily use keymap emacspeak-m-player-mode-map

12.124.2.3 emacspeak-muggles-hideshow/body
..........................................

 -- Command: emacspeak-muggles-hideshow/body
     ‘C-c h’

     Call the body in the "emacspeak-muggles-hideshow" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-hideshow")’,
     "h":    ‘hs-hide-block’,
     "s":    ‘hs-show-block’,
     "H":    ‘hs-hide-all’,
     "S":    ‘hs-show-all’,
     "l":    ‘hs-hide-level’,
     "i":    ‘hs-hide-initial-comment-block’

     The body can be accessed via ‘emacspeak-muggles-hideshow/body’.

12.124.2.4 emacspeak-muggles-ido-yank
.....................................

 -- Command: emacspeak-muggles-ido-yank
     ‘C-M-y’

     Pick what to yank using ido completion.

12.124.2.5 emacspeak-muggles-info-summary/body
..............................................

 -- Command: emacspeak-muggles-info-summary/body

     Call the body in the "emacspeak-muggles-info-summary" hydra.

     The heads for the associated hydra are:

     "]":    ‘Info-forward-node’,
     "[":    ‘Info-backward-node’,
     "n":    ‘Info-next’,
     "p":    ‘Info-prev’,
     "s":    ‘Info-search’,
     "S":    ‘Info-search-case-sensitively’,
     "l":    ‘Info-history-back’,
     "r":    ‘Info-history-forward’,
     "H":    ‘Info-history’,
     "t":    ‘Info-top-node’,
     "<":    ‘Info-top-node’,
     ">":    ‘Info-final-node’,
     "u":    ‘Info-up’,
     "^":    ‘Info-up’,
     "m":    ‘Info-menu’,
     "g":    ‘Info-goto-node’,
     "b":    ‘beginning-of-buffer’,
     "e":    ‘end-of-buffer’,
     "f":    ‘Info-follow-reference’,
     "i":    ‘Info-index’,
     ",":    ‘Info-index-next’,
     "I":    ‘Info-virtual-index’,
     "T":    ‘Info-toc’,
     "d":    ‘Info-directory’,
     "c":    ‘Info-copy-current-node-name’,
     "C":    ‘clone-buffer’,
     "a":    ‘info-apropos’,
     "1":    ‘Info-nth-menu-item’,
     "2":    ‘Info-nth-menu-item’,
     "3":    ‘Info-nth-menu-item’,
     "4":    ‘Info-nth-menu-item’,
     "5":    ‘Info-nth-menu-item’,
     "6":    ‘Info-nth-menu-item’,
     "7":    ‘Info-nth-menu-item’,
     "8":    ‘Info-nth-menu-item’,
     "9":    ‘Info-nth-menu-item’,
     "?":    ‘Info-summary’,
     "h":    ‘Info-help’,
     "q":    ‘Info-exit’,
     "C-g":    ‘nil’

     The body can be accessed via ‘emacspeak-muggles-info-summary/body’.

12.124.2.6 emacspeak-muggles-lispy-or-sp
........................................

 -- Command: emacspeak-muggles-lispy-or-sp

     Toggle between lispy and smartparens.

12.124.2.7 emacspeak-muggles-m-player/body
..........................................

 -- Command: emacspeak-muggles-m-player/body
     ‘s-;’

     Call the body in the "emacspeak-muggles-m-player" hydra.

     The heads for the associated hydra are:

     ";":    ‘emacspeak-m-player’,
     "+":    ‘emacspeak-m-player-volume-up’,
     ",":    ‘emacspeak-m-player-backward-10s’,
     "%":    ‘emacspeak-m-player-display-percent’,
     "-":    ‘emacspeak-m-player-volume-down’,
     ".":    ‘emacspeak-m-player-forward-10s’,
     "<":    ‘emacspeak-m-player-backward-1min’,
     "<down>":    ‘emacspeak-m-player-forward-1min’,
     "<end>":    ‘emacspeak-m-player-end-of-track’,
     "<home>":    ‘emacspeak-m-player-beginning-of-track’,
     "<left>":    ‘emacspeak-m-player-backward-10s’,
     "<next>":    ‘emacspeak-m-player-forward-10min’,
     "<prior>":    ‘emacspeak-m-player-backward-10min’,
     "<right>":    ‘emacspeak-m-player-forward-10s’,
     "<up>":    ‘emacspeak-m-player-backward-1min’,
     "=":    ‘emacspeak-m-player-volume-up’,
     ">":    ‘emacspeak-m-player-forward-1min’,
     "?":    ‘emacspeak-m-player-display-position’,
     "C":    ‘emacspeak-m-player-clear-filters’,
     "C-m":    ‘emacspeak-m-player-load’,
     "DEL":    ‘emacspeak-m-player-reset-speed’,
     "L":    ‘emacspeak-m-player-load-file’,
     "M-l":    ‘emacspeak-m-player-load-playlist’,
     "O":    ‘emacspeak-m-player-reset-options’,
     "P":    ‘emacspeak-m-player-apply-reverb-preset’,
     "Q":    ‘emacspeak-m-player-quit’,
     "R":    ‘emacspeak-m-player-edit-reverb’,
     "S":    ‘emacspeak-amark-save’,
     "SPC":    ‘emacspeak-m-player-pause’,
     "[":    ‘emacspeak-m-player-slower’,
     "]":    ‘emacspeak-m-player-faster’,
     "a":    ‘emacspeak-m-player-amark-add’,
     "b":    ‘emacspeak-m-player-balance’,
     "c":    ‘emacspeak-m-player-slave-command’,
     "d":    ‘emacspeak-m-player-delete-filter’,
     "e":    ‘emacspeak-m-player-add-equalizer’,
     "f":    ‘emacspeak-m-player-add-filter’,
     "g":    ‘emacspeak-m-player-seek-absolute’,
     "j":    ‘emacspeak-m-player-amark-jump’,
     "l":    ‘emacspeak-m-player-get-length’,
     "m":    ‘emacspeak-m-player-speak-mode-line’,
     "n":    ‘emacspeak-m-player-next-track’,
     "o":    ‘emacspeak-m-player-customize-options’,
     "p":    ‘emacspeak-m-player-previous-track’,
     "q":    ‘bury-buffer’,
     "r":    ‘emacspeak-m-player-seek-relative’,
     "s":    ‘emacspeak-m-player-scale-speed’,
     "t":    ‘emacspeak-m-player-play-tracks-jump’,
     "u":    ‘emacspeak-m-player-url’,
     "v":    ‘emacspeak-m-player-volume-change’,
     "(":    ‘emacspeak-m-player-left-channel’,
     ")":    ‘emacspeak-m-player-right-channel’,
     "{":    ‘emacspeak-m-player-half-speed’,
     "}":    ‘emacspeak-m-player-double-speed’

     The body can be accessed via ‘emacspeak-muggles-m-player/body’.

12.124.2.8 emacspeak-muggles-maths-navigator/body
.................................................

 -- Command: emacspeak-muggles-maths-navigator/body
     ‘s-SPC’

     Call the body in the "emacspeak-muggles-maths-navigator" hydra.

     The heads for the associated hydra are:

     "o":    ‘emacspeak-maths-switch-to-output’,
     "RET":    ‘emacspeak-maths-enter-guess’,
     "SPC":    ‘emacspeak-maths-enter’,
     "a":    ‘emacspeak-maths-speak-alt’,
     "d":    ‘emacspeak-maths-depth’,
     "<up>":    ‘emacspeak-maths-up’,
     "<down>":    ‘emacspeak-maths-down’,
     "<left>":    ‘emacspeak-maths-left’,
     "<right>":    ‘emacspeak-maths-right’

     The body can be accessed via ‘emacspeak-muggles-maths-navigator/body’.

12.124.2.9 emacspeak-muggles-navigate/body
..........................................

 -- Command: emacspeak-muggles-navigate/body
     ‘s-n’

     Call the body in the "emacspeak-muggles-navigate" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-navigate")’,
     "s":    ‘emacspeak-hydra-toggle-talkative’,
     "n":    ‘next-line’,
     "p":    ‘previous-line’,
     "f":    ‘forward-char’,
     "b":    ‘backward-char’,
     "a":    ‘beginning-of-line’,
     "e":    ‘move-end-of-line’,
     "j":    ‘next-line’,
     "k":    ‘previous-line’,
     "v":    ‘scroll-up-command’,
     "V":    ‘scroll-down-command’,
     "l":    ‘recenter-top-bottom’,
     "<":    ‘beginning-of-buffer’,
     ">":    ‘end-of-buffer’

     The body can be accessed via ‘emacspeak-muggles-navigate/body’.

12.124.2.10 emacspeak-muggles-org-nav/body
..........................................

 -- Command: emacspeak-muggles-org-nav/body

     Call the body in the "emacspeak-muggles-org-nav" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-org-nav")’,
     "SPC":    ‘emacspeak-outline-speak-this-heading’,
     "n":    ‘emacspeak-outline-speak-next-heading’,
     "p":    ‘emacspeak-outline-speak-previous-heading’,
     "N":    ‘org-forward-heading-same-level’,
     "P":    ‘org-backward-heading-same-level’,
     "u":    ‘outline-up-heading’,
     "g":    ‘org-goto’

     The body can be accessed via ‘emacspeak-muggles-org-nav/body’.

12.124.2.11 emacspeak-muggles-org-table/body
............................................

 -- Command: emacspeak-muggles-org-table/body

     Call the body in the "emacspeak-muggles-org-table" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-org-table")’,
     "j":    ‘org-table-next-row’,
     "k":    ‘org-table-previous-row’,
     "h":    ‘org-table-previous-field’,
     "l":    ‘org-table-next-field’,
     "SPC":    ‘emacspeak-org-table-speak-current-element’,
     ".":    ‘emacspeak-org-table-speak-coordinates’,
     "b":    ‘emacspeak-org-table-speak-both-headers-and-element’,
     "r":    ‘emacspeak-org-table-speak-row-header-and-element’,
     "c":    ‘emacspeak-org-table-speak-column-header-and-element’

     The body can be accessed via ‘emacspeak-muggles-org-table/body’.

12.124.2.12 emacspeak-muggles-outliner/body
...........................................

 -- Command: emacspeak-muggles-outliner/body

     Call the body in the "emacspeak-muggles-outliner" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-outliner")’,
     "q":    ‘outline-hide-sublevels’,
     "t":    ‘outline-hide-body’,
     "o":    ‘outline-hide-other’,
     "c":    ‘outline-hide-entry’,
     "l":    ‘outline-hide-leaves’,
     "d":    ‘outline-hide-subtree’,
     "a":    ‘outline-show-all’,
     "e":    ‘outline-show-entry’,
     "i":    ‘outline-show-children’,
     "k":    ‘outline-show-branches’,
     "s":    ‘outline-show-subtree’,
     "u":    ‘outline-up-heading’,
     "n":    ‘outline-next-visible-heading’,
     "p":    ‘outline-previous-visible-heading’,
     "f":    ‘outline-forward-same-level’,
     "b":    ‘outline-backward-same-level’,
     "z":    ‘nil’

     The body can be accessed via ‘emacspeak-muggles-outliner/body’.

12.124.2.13 emacspeak-muggles-smartparens/body
..............................................

 -- Command: emacspeak-muggles-smartparens/body
     ‘C-c ,’

     Call the body in the "emacspeak-muggles-smartparens" hydra.

     The heads for the associated hydra are:

     "’":    ‘(lambda (_) (interactive "P") (sp-wrap-with-pair "’"))’,
     "(":    ‘(lambda (_) (interactive "P") (sp-wrap-with-pair "("))’,
     "<down>":    ‘sp-splice-sexp-killing-forward’,
     "<left>":    ‘sp-forward-barf-sexp’,
     "<right>":    ‘sp-forward-slurp-sexp’,
     "<up>":    ‘sp-splice-sexp-killing-backward’,
     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-smartparens")’,
     "C-<left>":    ‘sp-backward-barf-sexp’,
     "C-<right>":    ‘sp-backward-slurp-sexp’,
     "R":    ‘sp-splice-sexp’,
     """:    ‘(lambda (_) (interactive "P") (sp-wrap-with-pair "\""))’,
     "a":    ‘beginning-of-defun’,
     "b":    ‘sp-backward-sexp’,
     "c":    ‘sp-convolute-sexp’,
     "d":    ‘sp-down-sexp’,
     "e":    ‘end-of-defun’,
     "f":    ‘sp-forward-sexp’,
     "i":    ‘sp-indent-defun’,
     "j":    ‘sp-join-sexp’,
     "k":    ‘sp-kill-sexp’,
     "n":    ‘sp-next-sexp’,
     "p":    ‘sp-previous-sexp’,
     "r":    ‘sp-splice-sexp-killing-around’,
     "s":    ‘sp-split-sexp’,
     "t":    ‘sp-transpose-sexp’,
     "u":    ‘sp-backward-up-sexp’,
     "w":    ‘sp-copy-sexp’,
     "{":    ‘(lambda (_) (interactive "P") (sp-wrap-with-pair "{"))’

     The body can be accessed via ‘emacspeak-muggles-smartparens/body’.

12.124.2.14 emacspeak-muggles-toggle-option/body
................................................

 -- Command: emacspeak-muggles-toggle-option/body
     ‘C-c o’

     Call the body in the "emacspeak-muggles-toggle-option" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-toggle-option")’,
     "C-f":    ‘turn-on-folding-mode’,
     "F":    ‘(call-interactively #’flyspell-mode)’,
     "a":    ‘(call-interactively #’abbrev-mode)’,
     "d":    ‘(call-interactively #’toggle-debug-on-error)’,
     "f":    ‘(call-interactively #’auto-fill-mode)’,
     "g":    ‘(call-interactively #’toggle-debug-on-quit)’,
     "h":    ‘(setq hydra-is-helpful (not hydra-is-helpful))’,
     "i":    ‘(call-interactively #’ido-everywhere)’,
     "I":    ‘(call-interactively #’flx-ido-mode)’,
     "p":    ‘emacspeak-muggles-lispy-or-sp’,
     "t":    ‘(call-interactively #’toggle-truncate-lines)’,
     "u":    ‘(call-interactively #’ido-ubiquitous-mode)’,
     "q":    ‘nil’

     The body can be accessed via ‘emacspeak-muggles-toggle-option/body’.

12.124.2.15 emacspeak-muggles-view/body
.......................................

 -- Command: emacspeak-muggles-view/body
     ‘C-c v’

     Call the body in the "emacspeak-muggles-view" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-view")’,
     "$":    ‘set-selective-display’,
     "%":    ‘View-goto-percent’,
     "’":    ‘register-to-point’,
     "(":    ‘backward-sexp’,
     ")":    ‘forward-sexp’,
     ".":    ‘set-mark-command’,
     "/":    ‘View-search-regexp-forward’,
     "<":    ‘beginning-of-buffer’,
     "<return>":    ‘nil’,
     "=":    ‘what-line’,
     ">":    ‘end-of-buffer’,
     "@":    ‘View-back-to-mark’,
     "A":    ‘beginning-of-defun’,
     "DEL":    ‘View-scroll-page-backward’,
     "E":    ‘end-of-defun’,
     "J":    ‘(emacspeak-hide-or-expose-block ’all)’,
     "SPC":    ‘View-scroll-page-forward’,
     "[":    ‘backward-page’,
     "\":    ‘View-search-regexp-backward’,
     "]":    ‘forward-page’,
     "a":    ‘move-beginning-of-line’,
     "b":    ‘backward-word’,
     "c":    ‘emacspeak-speak-char’,
     "d":    ‘View-scroll-half-page-forward’,
     "e":    ‘move-end-of-line’,
     "f":    ‘forward-word’,
     "g":    ‘goto-line’,
     "h":    ‘backward-char’,
     "i":    ‘emacspeak-speak-mode-line’,
     "j":    ‘next-line’,
     "k":    ‘previous-line’,
     "l":    ‘forward-char’,
     "m":    ‘point-to-register’,
     "n":    ‘View-search-last-regexp-forward’,
     "p":    ‘View-search-last-regexp-backward’,
     "q":    ‘nil’,
     "r":    ‘copy-to-register’,
     "s":    ‘emacspeak-hydra-toggle-talkative’,
     "t":    ‘(recenter 0)’,
     "u":    ‘View-scroll-half-page-backward’,
     "w":    ‘emacspeak-speak-word’,
     "x":    ‘exchange-point-and-mark’,
     "y":    ‘kill-ring-save’,
     "{":    ‘backward-paragraph’,
     "}":    ‘forward-paragraph’

     The body can be accessed via ‘emacspeak-muggles-view/body’.

12.124.2.16 emacspeak-muggles-yank-pop/body
...........................................

 -- Command: emacspeak-muggles-yank-pop/body

     Call the body in the "emacspeak-muggles-yank-pop" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-yank-pop")’,
     "C-y":    ‘yank’,
     "M-y":    ‘yank-pop’,
     "y":    ‘(funcall-interactively #’yank-pop 1)’,
     "Y":    ‘(funcall-interactively #’yank-pop -1)’,
     "i":    ‘emacspeak-muggles-ido-yank’,
     "l":    ‘browse-kill-ring’

     The body can be accessed via ‘emacspeak-muggles-yank-pop/body’.

12.124.2.17 emacspeak-origami/body
..................................

 -- Command: emacspeak-origami/body
     ‘C-c /’

     Call the body in the "emacspeak-origami" hydra.

     The heads for the associated hydra are:

     "o":    ‘origami-open-node’,
     "c":    ‘origami-close-node’,
     "n":    ‘origami-next-fold’,
     "p":    ‘origami-previous-fold’,
     "f":    ‘origami-forward-toggle-node’,
     "a":    ‘origami-toggle-all-nodes’

     The body can be accessed via ‘emacspeak-origami/body’.


File: emacspeak.info,  Node: emacspeak-muse,  Next: emacspeak-net-utils,  Prev: emacspeak-muggles,  Up: Emacspeak Commands And Options

12.125 emacspeak-muse
=====================

Speech enable Muse


File: emacspeak.info,  Node: emacspeak-net-utils,  Next: emacspeak-newsticker,  Prev: emacspeak-muse,  Up: Emacspeak Commands And Options

12.126 emacspeak-net-utils
==========================

This module speech enables net-utils


File: emacspeak.info,  Node: emacspeak-newsticker,  Next: emacspeak-npr,  Prev: emacspeak-net-utils,  Up: Emacspeak Commands And Options

12.127 emacspeak-newsticker
===========================

Newsticker provides a continuously updating newsticker using RSS
Provides functionality similar to amphetadesk –but in pure elisp


File: emacspeak.info,  Node: emacspeak-npr,  Next: emacspeak-nxml,  Prev: emacspeak-newsticker,  Up: Emacspeak Commands And Options

12.128 emacspeak-npr
====================

NPR == http://www.npr.org National Public Radio in the US. It provides a
simple Web API documented at http://www.npr.org/api/index.  This module
implements an Emacspeak Npr client.  Users will need to get their own
API key.

12.128.1 Usage
--------------

Command: ‘emacspeak-npr-play-program’ ‘C-; n’ — Play current or past
program with completion for program name.

   ‘emacspeak-npr-listing’ ‘C-; N’ — List NPR programs, blogs, etc with
completion.  Streams can be played from within the displayed listing.

   In all cases, streams are played using module ‘emacspeak-m-player’.

12.128.2 emacspeak-npr Commands
-------------------------------

12.128.2.1 emacspeak-npr-listing
................................

 -- Command: emacspeak-npr-listing (&optional search)
     ‘C-; N’
     ‘C-x @ h N’

     Display specified listing.
     Interactive prefix arg prompts for search.

     (fn &optional SEARCH)

12.128.2.2 emacspeak-npr-listing-url-executor
.............................................

 -- Command: emacspeak-npr-listing-url-executor (url &optional get-date)

     Special executor for use in NPR  listings.
     Optional prefix arg prompts for date.

     (fn URL &optional GET-DATE)

12.128.2.3 emacspeak-npr-play-program
.....................................

 -- Command: emacspeak-npr-play-program (pid &optional get-date)
     ‘C-; n’
     ‘C-x @ h n’

     Play specified NPR program.
     Optional interactive prefix arg prompts for a date.

     (fn PID &optional GET-DATE)

12.128.2.4 emacspeak-npr-refresh-program-table
..............................................

 -- Command: emacspeak-npr-refresh-program-table (&optional force)

     Refresh program table cache if needed.

     (fn &optional FORCE)

12.128.2.5 emacspeak-npr-search
...............................

 -- Command: emacspeak-npr-search (query)

     Search NPR

     (fn QUERY)

12.128.3 emacspeak-npr Options
------------------------------

 -- Variable: User Option emacspeak-npr-api-key
     Web API key for this application.

 -- Variable: User Option emacspeak-npr-local-cache
     Location where we cache NPR playlists.


File: emacspeak.info,  Node: emacspeak-nxml,  Next: emacspeak-ocr,  Prev: emacspeak-npr,  Up: Emacspeak Commands And Options

12.129 emacspeak-nxml
=====================

nxml-mode is a new XML mode for emacs by James Clark.
http://www.thaiopensource.com/download/

12.129.1 emacspeak-nxml Commands
--------------------------------

12.129.1.1 emacspeak-nxml-summarize-outline
...........................................

 -- Command: emacspeak-nxml-summarize-outline

     Intelligent spoken display of current outline entry.


File: emacspeak.info,  Node: emacspeak-ocr,  Next: emacspeak-org,  Prev: emacspeak-nxml,  Up: Emacspeak Commands And Options

12.130 emacspeak-ocr
====================

This module defines Emacspeak front-end to OCR. This module assumes that
sane is installed and working for image acquisition, and that there is
an OCR engine that can take acquired images and produce text.
Prerequisites: Sane installed and working.  scanimage to generate tiff
files from scanner.  tiffcp to compress the tiff file.  working ocr
executable by default this module assumes that the OCR executable is
named "ocr"

12.130.1 emacspeak-ocr Commands
-------------------------------

12.130.1.1 emacspeak-ocr
........................

 -- Command: emacspeak-ocr
     ‘C-e C-o’
     ‘<fn> C-o’

     An OCR front-end for the Emacspeak desktop.

     Page image is acquired using tools from the SANE package.
     The acquired image is run through the OCR engine if one is
     available, and the results placed in a buffer that is
     suitable for browsing the results.

     For detailed help, invoke command emacspeak-ocr bound to
     C-e C-o to launch emacspeak-ocr-mode, and press
     ‘?’ to display mode-specific help for emacspeak-ocr-mode.

12.130.1.2 emacspeak-ocr-backward-page
......................................

 -- Command: emacspeak-ocr-backward-page (&optional count-ignored)

     Like backward page, but tracks page number of current document.

     (fn &optional COUNT-IGNORED)

12.130.1.3 emacspeak-ocr-customize
..................................

 -- Command: emacspeak-ocr-customize

     Customize OCR settings.

12.130.1.4 emacspeak-ocr-flipflop-and-recognize-image
.....................................................

 -- Command: emacspeak-ocr-flipflop-and-recognize-image

     Run OCR engine on current image after flip-flopping it.
     Useful if you’ve scanned a page upside down and are using an engine that does not automatically flip the image for you.
     You need the imagemagik family of tools — we use mogrify to transform the image.
     Prompts for image file if file corresponding to the expected
     ‘current page’ is not found.

12.130.1.5 emacspeak-ocr-forward-page
.....................................

 -- Command: emacspeak-ocr-forward-page (&optional count-ignored)

     Like forward page, but tracks page number of current document.

     (fn &optional COUNT-IGNORED)

12.130.1.6 emacspeak-ocr-mode
.............................

 -- Command: emacspeak-ocr-mode

      An OCR front-end for the Emacspeak desktop.

     Pre-requisites:

     1) A working scanner back-end like SANE on Linux.

     2) An OCR engine.

     1: Make sure your scanner back-end works, and that you have
     the utilities to scan a document and acquire an image as a
     tiff file.  Then set variable
     emacspeak-ocr-scan-image-program to point at this utility.
     By default, this is set to ‘scanimage’ which is the image
     scanning utility provided by SANE.

     By default, this front-end attempts to compress the acquired
     tiff image; make sure you have a utility like tiffcp.
     Variable emacspeak-ocr-compress-image is set to ‘tiffcp’ by
     default; if you use something else, you should customize
     this variable.

     2: Next, make sure you have an OCR engine installed and
     working.  By default this front-end assumes that OCR is
     available as /usr/bin/ocr.

     Once you have ensured that acquiring an image and applying
     OCR to it work independently of Emacs, you can use this
     Emacspeak front-end to enable easy OCR access from within
     Emacspeak.

     The Emacspeak OCR front-end is launched by command
     emacspeak-ocr bound to C-e C-o.

     This command switches to a special buffer that has OCR
     commands bounds to single keystrokes– see the key-binding
     list at the end of this description.  Use Emacs online help
     facility to look up help on these commands.

     emacspeak-ocr-mode provides the necessary functionality to
     scan, OCR, read and save documents.  By default, scanned
     images and the resulting text are saved under directory
     ~/ocr; see variable emacspeak-ocr-working-directory.
     Invoking command emacspeak-ocr-open-working-directory bound
     to M-x emacspeak-ocr-open-working-directory will open this directory.

     By default, the document being scanned is named ‘untitled’.
     You can name the document by using command
     emacspeak-ocr-name-document bound to
     M-x emacspeak-ocr-name-document.  The document name is used
     in constructing the name of the image and text files.

     Key Bindings:

     See key             binding
     —             ——-

     RET		emacspeak-ocr-scan-and-recognize
     SPC		emacspeak-ocr-read-current-page
     1 .. 9		emacspeak-ocr-page
     ?		describe-mode
     C		emacspeak-ocr-set-compress-image-options
     I		emacspeak-ocr-set-scan-image-options
     [		emacspeak-ocr-backward-page
     ]		emacspeak-ocr-forward-page
     c		emacspeak-ocr-customize
     d		emacspeak-ocr-open-working-directory
     f		emacspeak-ocr-flipflop-and-recognize-image
     i		emacspeak-ocr-scan-image
     j		emacspeak-ocr-scan-photo
     n		emacspeak-ocr-name-document
     o		emacspeak-ocr-recognize-image
     p		emacspeak-ocr-page
     q		bury-buffer
     s		emacspeak-ocr-save-current-page
     w		emacspeak-ocr-write-document

     .

     In addition to any hooks its parent mode ‘text-mode’ might have run,
     this mode runs the hook ‘emacspeak-ocr-mode-hook’, as the final or penultimate step
     during initialization.

12.130.1.7 emacspeak-ocr-name-document
......................................

 -- Command: emacspeak-ocr-name-document (name)

     Name document being scanned in the current OCR buffer.
     Pick a short but meaningful name.

     (fn NAME)

12.130.1.8 emacspeak-ocr-open-working-directory
...............................................

 -- Command: emacspeak-ocr-open-working-directory

     Launch dired on OCR working directory.

12.130.1.9 emacspeak-ocr-page
.............................

 -- Command: emacspeak-ocr-page

     Move to specified page.

12.130.1.10 emacspeak-ocr-read-current-page
...........................................

 -- Command: emacspeak-ocr-read-current-page

     Speaks current page.

12.130.1.11 emacspeak-ocr-recognize-image
.........................................

 -- Command: emacspeak-ocr-recognize-image

     Run OCR engine on current image.
     Prompts for image file if file corresponding to the expected
     ‘current page’ is not found.

12.130.1.12 emacspeak-ocr-save-current-page
...........................................

 -- Command: emacspeak-ocr-save-current-page

     Writes out recognized text from current page
     to an appropriately named file.

12.130.1.13 emacspeak-ocr-scan-and-recognize
............................................

 -- Command: emacspeak-ocr-scan-and-recognize

     Scan in a page and run OCR engine on it.
     Use this command once you’ve verified that the separate
     steps of acquiring an image and running the OCR engine work
     correctly by themselves.

12.130.1.14 emacspeak-ocr-scan-image
....................................

 -- Command: emacspeak-ocr-scan-image

     Acquire page image.

12.130.1.15 emacspeak-ocr-scan-photo
....................................

 -- Command: emacspeak-ocr-scan-photo (&optional metadata)

     Scan in a photograph.
     The scanned image is converted to JPEG.

     (fn &optional METADATA)

12.130.1.16 emacspeak-ocr-set-compress-image-options
....................................................

 -- Command: emacspeak-ocr-set-compress-image-options (setting)

     Interactively update  image compression options.
     Prompts with current setting in the minibuffer.
     Setting persists for current Emacs session.

     (fn SETTING)

12.130.1.17 emacspeak-ocr-set-scan-image-options
................................................

 -- Command: emacspeak-ocr-set-scan-image-options (setting)

     Interactively update scan image options.
     Prompts with current setting in the minibuffer.
     Setting persists for current Emacs session.

     (fn SETTING)

12.130.1.18 emacspeak-ocr-write-document
........................................

 -- Command: emacspeak-ocr-write-document

     Writes out recognized text from all pages in current document.

12.130.2 emacspeak-ocr Options
------------------------------

 -- Variable: User Option emacspeak-ocr-compress-image
     Command used to compress the scanned tiff file.

 -- Variable: User Option emacspeak-ocr-compress-image-options
     Options used for compressing tiff image.

 -- Variable: User Option emacspeak-ocr-compress-photo-options
     Options used when created JPEG from scanned photographs.

 -- Variable: User Option emacspeak-ocr-engine
     OCR engine to process acquired image.

 -- Variable: User Option emacspeak-ocr-engine-options
     Command line options to pass to OCR engine.

 -- Variable: User Option emacspeak-ocr-image-extension
     Filename extension used for acquired image.

 -- Variable: User Option emacspeak-ocr-jpeg-metadata-writer
     Program to add metadata to JPEG files.

 -- Variable: User Option emacspeak-ocr-keep-uncompressed-image
     If set to T, uncompressed image is not removed.

 -- Variable: User Option emacspeak-ocr-photo-compress
     Program to create JPEG compressed images.

 -- Variable: User Option emacspeak-ocr-scan-image
     Name of image acquisition program.

 -- Variable: User Option emacspeak-ocr-scan-image-options
     Command line options to pass to image acquisition program.

 -- Variable: User Option emacspeak-ocr-scan-photo-options
     Options used when scanning in photographs.

 -- Variable: User Option emacspeak-ocr-working-directory
     Directory where images and OCR results will be placed.


File: emacspeak.info,  Node: emacspeak-org,  Next: emacspeak-origami,  Prev: emacspeak-ocr,  Up: Emacspeak Commands And Options

12.131 emacspeak-org
====================

Speech-enable org — Org allows you to keep organized notes and todo
lists.  Homepage: http://www.astro.uva.nl/~dominik/Tools/org/ or
http://orgmode.org/

12.131.1 emacspeak-org Commands
-------------------------------

12.131.1.1 emacspeak-org-bookmark
.................................

 -- Command: emacspeak-org-bookmark (&optional goto)

     Bookmark from org.

     (fn &optional GOTO)

12.131.1.2 emacspeak-org-capture-link
.....................................

 -- Command: emacspeak-org-capture-link
     ‘C-; h’
     ‘C-x @ h h’

     Capture hyperlink to current context.
     To use this command, first  do ‘customize-variable’ ‘org-capture-template’
     and assign  letter ‘h’ to a template that creates the hyperlink on capture.

12.131.1.3 emacspeak-org-popup-input
....................................

 -- Command: emacspeak-org-popup-input

     Pops up an org input area.

12.131.1.4 emacspeak-org-table-speak-both-headers-and-element
.............................................................

 -- Command: emacspeak-org-table-speak-both-headers-and-element

     echoes both row and col headers.

12.131.1.5 emacspeak-org-table-speak-column-header
..................................................

 -- Command: emacspeak-org-table-speak-column-header

     echoes column header

12.131.1.6 emacspeak-org-table-speak-column-header-and-element
..............................................................

 -- Command: emacspeak-org-table-speak-column-header-and-element

     echoes col header and element

12.131.1.7 emacspeak-org-table-speak-coordinates
................................................

 -- Command: emacspeak-org-table-speak-coordinates

     echoes coordinates

12.131.1.8 emacspeak-org-table-speak-current-element
....................................................

 -- Command: emacspeak-org-table-speak-current-element

     echoes current table element

12.131.1.9 emacspeak-org-table-speak-row-header
...............................................

 -- Command: emacspeak-org-table-speak-row-header

     echoes row header

12.131.1.10 emacspeak-org-table-speak-row-header-and-element
............................................................

 -- Command: emacspeak-org-table-speak-row-header-and-element

     echoes row header and element

12.131.2 emacspeak-org Options
------------------------------

 -- Variable: User Option emacspeak-org-bookmark-key
     Key of template used for capturing hot list.


File: emacspeak.info,  Node: emacspeak-origami,  Next: emacspeak-outline,  Prev: emacspeak-org,  Up: Emacspeak Commands And Options

12.132 emacspeak-origami
========================

ORIGAMI == One More Flexible Folding Mechanism This module
speech-enables origami-mode.


File: emacspeak.info,  Node: emacspeak-outline,  Next: emacspeak-package,  Prev: emacspeak-origami,  Up: Emacspeak Commands And Options

12.133 emacspeak-outline
========================

Provide additional advice to outline-mode

12.133.1 emacspeak-outline Commands
-----------------------------------

12.133.1.1 emacspeak-outline-speak-backward-heading
...................................................

 -- Command: emacspeak-outline-speak-backward-heading

     Analogous to outline-backward-same-level
     except that the outline section is  spoken

12.133.1.2 emacspeak-outline-speak-forward-heading
..................................................

 -- Command: emacspeak-outline-speak-forward-heading

     Analogous to outline-forward-same-level,
     except that the outline section is  spoken

12.133.1.3 emacspeak-outline-speak-next-heading
...............................................

 -- Command: emacspeak-outline-speak-next-heading

     Analogous to outline-next-visible-heading,
     except that the outline section is  spoken

12.133.1.4 emacspeak-outline-speak-previous-heading
...................................................

 -- Command: emacspeak-outline-speak-previous-heading

     Analogous to outline-previous-visible-heading,
     except that the outline section is  spoken

12.133.1.5 emacspeak-outline-speak-this-heading
...............................................

 -- Command: emacspeak-outline-speak-this-heading

     Speak current outline section starting from point

12.133.2 emacspeak-outline Options
----------------------------------

 -- Variable: User Option emacspeak-outline-dont-query-before-speaking
     *Option to control prompts when speaking outline sections.


File: emacspeak.info,  Node: emacspeak-package,  Next: emacspeak-paradox,  Prev: emacspeak-outline,  Up: Emacspeak Commands And Options

12.134 emacspeak-package
========================

PACKAGE == package.el Manage Emacs packages.  This module speech-enables
package.el with a few convenience commands.

12.134.1 emacspeak-package Commands
-----------------------------------

12.134.1.1 emacspeak-package-next-line
......................................

 -- Command: emacspeak-package-next-line

     Move to next line and speak it.

12.134.1.2 emacspeak-package-previous-line
..........................................

 -- Command: emacspeak-package-previous-line

     Move to next line and speak it.

12.134.1.3 emacspeak-package-summarize-line
...........................................

 -- Command: emacspeak-package-summarize-line

     Succinct Summary.


File: emacspeak.info,  Node: emacspeak-paradox,  Next: emacspeak-perl,  Prev: emacspeak-package,  Up: Emacspeak Commands And Options

12.135 emacspeak-paradox
========================

PARADOX == paradox.el Improved package management interface Manage Emacs
packages.  This module speech-enables paradox.el with a few convenience
commands.

12.135.1 emacspeak-paradox Commands
-----------------------------------

12.135.1.1 emacspeak-paradox-summarize-line
...........................................

 -- Command: emacspeak-paradox-summarize-line

     Succinct Summary.


File: emacspeak.info,  Node: emacspeak-perl,  Next: emacspeak-personality,  Prev: emacspeak-paradox,  Up: Emacspeak Commands And Options

12.136 emacspeak-perl
=====================

Provide additional advice to perl-mode


File: emacspeak.info,  Node: emacspeak-personality,  Next: emacspeak-php-mode,  Prev: emacspeak-perl,  Up: Emacspeak Commands And Options

12.137 emacspeak-personality
============================

Implementation Notes From2018:

   After 3 years, variable emacspeak-personality-voiceify-faces has been
removed, and the advice on put-text-property and friends removed.  This
module nowlimits itself to mapping face/font-lock properties from
overlays to the associated text-property (personality).

   Implementation Notes From 2015:

   Setting emacspeak-personality-voiceify-faces to nil now results in
dtk-speak falling back to the face->voice mapping defined via
voice-setup for the face at point.  What this means:

   1.  You always get voice-locking except when you set voice-lock-mode
to nil.

   2.  The advice on put-text-property and friends become a no-op and we
still get voice-locking.

   3.  Eventually this will become the default behavior for
voice-locking.

   Implementation Notes from 2002.

   This module defines a personality interface for implementing voice
lock via font lock.

12.137.1 emacspeak-personality Options
--------------------------------------

 -- Variable: User Option emacspeak-personality-voiceify-overlays
     Determines how and if we voiceify overlays.

     None means that overlay faces are not mapped to voices.  Prepend
     means that the corresponding personality is prepended to the
     existing personalities on the text under overlay.

     Append means place corresponding personality at the end.


File: emacspeak.info,  Node: emacspeak-php-mode,  Next: emacspeak-pianobar,  Prev: emacspeak-personality,  Up: Emacspeak Commands And Options

12.138 emacspeak-php-mode
=========================

speech-enable php-mode.el (available from sourceforge project php-mode)


File: emacspeak.info,  Node: emacspeak-pianobar,  Next: emacspeak-popup,  Prev: emacspeak-php-mode,  Up: Emacspeak Commands And Options

12.139 emacspeak-pianobar
=========================

12.139.1 PIANOBAR == Pandora Client for Emacs
---------------------------------------------

pianobar git://github.com/PromyLOPh/pianobar.git Ubuntu/Debian: sudo
apt-get install pianobar

   Pianobar Is a stand-alone client for Pandora Radio.  pianobar.el
available on the Emacs Wiki at
http://www.emacswiki.org/emacs/pianobar.el Provides access to Pandora
Radio via pianobar from the comfort of Emacs.  This module
speech-enables Pianobar and enhances it for the Complete Audio Desktop.

12.139.2 Emacspeak Usage:
-------------------------

Emacspeak implements command emacspeak-pianobar, a light-weight wrapper
on top of pianobar.  Emacspeak binds this command to ‘C-e '’.  In my
personal ‘.emacs’, I bind this to ‘f5’.  Command emacspeak-pianobar is
designed to let you launch Pandora channels and switch tracks/channels
without moving away from your primary tasks such as editting code or
reading/composing email.  Toward this end, launching command
emacspeak-pianobar the first time initializes the ‘*pianobar*’ buffer
and launches command ‘pianobar’; Focus is placed in the ‘*pianobar*’
buffer.  Pianobar can be controlled with single keystrokes while in this
buffer.  The most useful keys are ‘right’ for skipping tracks, ‘up’ and
‘down’ for switching channels etc.; see the keys bound in
‘pianobar-key-map’ for a complete list.  Pressing ‘C-e '’ in the
‘*pianobar*’ buffer buries the ‘*pianobar*’.  From here on, Pianobar can
be controlled by pressing the Pianobar prefix key (‘C-e '’) followed by
keys from ‘pianobar-key-map’.

12.139.3 emacspeak-pianobar Commands
------------------------------------

12.139.3.1 emacspeak-pianobar
.............................

 -- Command: emacspeak-pianobar
     ‘C-e "’
     ‘<fn> "’

     Start or control Emacspeak Pianobar player.

12.139.3.2 emacspeak-pianobar-command
.....................................

 -- Command: emacspeak-pianobar-command (key)

     Invoke Pianobar  commands.

     (fn KEY)

12.139.3.3 emacspeak-pianobar-electric-mode-toggle
..................................................

 -- Command: emacspeak-pianobar-electric-mode-toggle

     Toggle electric mode in pianobar buffer.
     If electric mode is on, keystrokes invoke pianobar commands directly.

12.139.3.4 emacspeak-pianobar-next-preset
.........................................

 -- Command: emacspeak-pianobar-next-preset

     Switch to next preset.

12.139.3.5 emacspeak-pianobar-previous-preset
.............................................

 -- Command: emacspeak-pianobar-previous-preset

     Switch to previous preset.

12.139.3.6 emacspeak-pianobar-switch-to-preset
..............................................

 -- Command: emacspeak-pianobar-switch-to-preset

     Switch to one of the  presets.

12.139.3.7 emacspeak-pianobar-volume-down
.........................................

 -- Command: emacspeak-pianobar-volume-down

     Decrease volume

12.139.3.8 emacspeak-pianobar-volume-up
.......................................

 -- Command: emacspeak-pianobar-volume-up

     Increase volume

12.139.4 emacspeak-pianobar Options
-----------------------------------

 -- Variable: User Option emacspeak-pianobar-max-preset
     Number of presets.


File: emacspeak.info,  Node: emacspeak-popup,  Next: emacspeak-proced,  Prev: emacspeak-pianobar,  Up: Emacspeak Commands And Options

12.140 emacspeak-popup
======================

POPUP == popup.el from MELPA


File: emacspeak.info,  Node: emacspeak-proced,  Next: emacspeak-projectile,  Prev: emacspeak-popup,  Up: Emacspeak Commands And Options

12.141 emacspeak-proced
=======================

PROCED == Process Editor A new Task Manager for Emacs.  Proced is part
of emacs 23.

12.141.1 emacspeak-proced Commands
----------------------------------

12.141.1.1 emacspeak-proced-jump-to-process
...........................................

 -- Command: emacspeak-proced-jump-to-process (name)

     Jump to process by name.

     (fn NAME)

12.141.1.2 emacspeak-proced-next-field
......................................

 -- Command: emacspeak-proced-next-field

     Navigate to next field.

12.141.1.3 emacspeak-proced-next-line
.....................................

 -- Command: emacspeak-proced-next-line

     Move to next line and speak a summary.

12.141.1.4 emacspeak-proced-previous-field
..........................................

 -- Command: emacspeak-proced-previous-field

     Navigate to previous field.

12.141.1.5 emacspeak-proced-previous-line
.........................................

 -- Command: emacspeak-proced-previous-line

     Move to next line and speak a summary.

12.141.1.6 emacspeak-proced-speak-args
......................................

 -- Command: emacspeak-proced-speak-args

     Speak command  invocation  for this process.

12.141.1.7 emacspeak-proced-speak-field
.......................................

 -- Command: emacspeak-proced-speak-field (field-name)

     Speak value of specified field in current line.

     (fn FIELD-NAME)

12.141.1.8 emacspeak-proced-speak-that-field
............................................

 -- Command: emacspeak-proced-speak-that-field

     Speak desired field via single keystroke.

12.141.1.9 emacspeak-proced-speak-this-field
............................................

 -- Command: emacspeak-proced-speak-this-field (&optional position)

     Speak field at specified column — defaults to current column.

     (fn &optional POSITION)


File: emacspeak.info,  Node: emacspeak-projectile,  Next: emacspeak-prompts,  Prev: emacspeak-proced,  Up: Emacspeak Commands And Options

12.142 emacspeak-projectile
===========================

PROJECTILE == ‘M-x package-install projectile’.  Project management in
Emacs.


File: emacspeak.info,  Node: emacspeak-prompts,  Next: emacspeak-pronounce,  Prev: emacspeak-projectile,  Up: Emacspeak Commands And Options

12.143 emacspeak-prompts
========================

This module provides a set of pre-defined speech prompts, And a
light-weight player for generating these prompts.


File: emacspeak.info,  Node: emacspeak-pronounce,  Next: emacspeak-py,  Prev: emacspeak-prompts,  Up: Emacspeak Commands And Options

12.144 emacspeak-pronounce
==========================

This module implements user customizable pronunciation dictionaries for
emacspeak.  Custom pronunciations can be defined per file, per directory
and/or per major mode.  Emacspeak maintains a persistent user dictionary
upon request and loads these in new emacspeak sessions.  This module
implements the user interface to the custom dictionary as well as
providing the internal API used by the rest of emacspeak in using the
dictionary.  Algorithm:

   The persistent dictionary is a hash table where the hash keys are
filenames, directory names, or major-mode names.  The hash values are
association lists defining the dictionary.  Users of this module can
retrieve a dictionary made up of all applicable association lists for a
given file.

12.144.1 emacspeak-pronounce Commands
-------------------------------------

12.144.1.1 emacspeak-pronounce-clear-dictionaries
.................................................

 -- Command: emacspeak-pronounce-clear-dictionaries

     Clear all current pronunciation dictionaries.

12.144.1.2 emacspeak-pronounce-define-local-pronunciation
.........................................................

 -- Command: emacspeak-pronounce-define-local-pronunciation (word
          pronunciation)

     Define buffer local pronunciation.
     Argument WORD specifies the word which should be pronounced as specified by PRONUNCIATION.

     (fn WORD PRONUNCIATION)

12.144.1.3 emacspeak-pronounce-define-pronunciation
...................................................

 -- Command: emacspeak-pronounce-define-pronunciation

     Interactively define entries in the pronunciation dictionaries.
     Default term to define is delimited by region.
     First loads any persistent dictionaries if not already loaded.

12.144.1.4 emacspeak-pronounce-define-template-pronunciation
............................................................

 -- Command: emacspeak-pronounce-define-template-pronunciation

     Interactively define template entries in the pronunciation dictionaries.
     Default term to define is delimited by region.
     First loads any persistent dictionaries if not already loaded.

12.144.1.5 emacspeak-pronounce-dispatch
.......................................

 -- Command: emacspeak-pronounce-dispatch
     ‘C-e M-d’
     ‘<fn> M-d’

     Provides the user interface front-end to Emacspeak’s pronunciation dictionaries.

12.144.1.6 emacspeak-pronounce-edit-pronunciations
..................................................

 -- Command: emacspeak-pronounce-edit-pronunciations (key)

     Prompt for and launch a pronunciation editor on the
     specified pronunciation dictionary key.

     (fn KEY)

12.144.1.7 emacspeak-pronounce-load-dictionaries
................................................

 -- Command: emacspeak-pronounce-load-dictionaries (&optional filename)

     Load pronunciation dictionaries.
     Optional argument FILENAME specifies the dictionary file.

     (fn &optional FILENAME)

12.144.1.8 emacspeak-pronounce-refresh-pronunciations
.....................................................

 -- Command: emacspeak-pronounce-refresh-pronunciations

     Refresh pronunciation table for current buffer.
     Activates pronunciation dictionaries if not already active.

12.144.1.9 emacspeak-pronounce-save-dictionaries
................................................

 -- Command: emacspeak-pronounce-save-dictionaries

     Writes out the persistent emacspeak pronunciation dictionaries.

12.144.1.10 emacspeak-pronounce-toggle-use-of-dictionaries
..........................................................

 -- Command: emacspeak-pronounce-toggle-use-of-dictionaries (&optional
          state)

     Toggle use of pronunciation dictionaries in current buffer.
     Pronunciations can be defined on a per file, per directory and/or per
     mode basis.
     Pronunciations are activated on a per buffer basis.
     Turning on the use of pronunciation dictionaries results in emacspeak
     composing a pronunciation table based on the currently defined
     pronunciation dictionaries.
     After this, the pronunciations will be applied whenever text in the
     buffer is spoken.
     Optional argument state can be used from Lisp programs to
     explicitly turn pronunciations on or off.

     (fn &optional STATE)

12.144.1.11 emacspeak-pronounce-yank-word
.........................................

 -- Command: emacspeak-pronounce-yank-word

     Yank word at point into minibuffer.

12.144.2 emacspeak-pronounce Options
------------------------------------

 -- Variable: User Option
          emacspeak-pronounce-common-xml-namespace-uri-pronunciations
     Pronunciations for well known namespace URIs.

 -- Variable: User Option emacspeak-pronounce-dictionaries-file
     File that holds the persistent emacspeak pronunciation
     dictionaries.

 -- Variable: User Option
          emacspeak-pronounce-internet-smileys-pronunciations
     Pronunciation dictionary used in all instant messenger and IRC chat
     modes.  See http://www.charm.net/~kmarsh/smiley.html.

 -- Variable: User Option
          emacspeak-pronounce-load-pronunciations-on-startup
     Says if user dictionaries loaded on emacspeak startup.

 -- Variable: User Option emacspeak-pronounce-pronunciation-personality
     *Pronunciation personality.  This is the personality used when
     speaking things that have a pronunciation applied.


File: emacspeak.info,  Node: emacspeak-py,  Next: emacspeak-pydoc,  Prev: emacspeak-pronounce,  Up: Emacspeak Commands And Options

12.145 emacspeak-py
===================

This speech-enables python-mode available on sourceforge and ELPA


File: emacspeak.info,  Node: emacspeak-pydoc,  Next: emacspeak-python,  Prev: emacspeak-py,  Up: Emacspeak Commands And Options

12.146 emacspeak-pydoc
======================

PYDOC == Python Documentation Viewer


File: emacspeak.info,  Node: emacspeak-python,  Next: emacspeak-racket,  Prev: emacspeak-pydoc,  Up: Emacspeak Commands And Options

12.147 emacspeak-python
=======================

This speech-enables python-mode bundled with Emacs


File: emacspeak.info,  Node: emacspeak-racket,  Next: emacspeak-re-builder,  Prev: emacspeak-python,  Up: Emacspeak Commands And Options

12.148 emacspeak-racket
=======================

racket-mode implements an IDE for racket, a dialect of scheme.


File: emacspeak.info,  Node: emacspeak-re-builder,  Next: emacspeak-redefine,  Prev: emacspeak-racket,  Up: Emacspeak Commands And Options

12.149 emacspeak-re-builder
===========================

Speech-enable re-builder.  Will be used to advantage in efficiently
setting up outline regexp wizards


File: emacspeak.info,  Node: emacspeak-redefine,  Next: emacspeak-reftex,  Prev: emacspeak-re-builder,  Up: Emacspeak Commands And Options

12.150 emacspeak-redefine
=========================

This module redefines a few vital functions, since advising them won’t
help.  Convention used: To redefine function fn: The original function
will be renamed to Orig-fn.  A new function called emacspeak-fn will be
defined.  Finally, we will fset fn to emacspeak-fn In the case of
backward-char, forward-char, and self-insert-command mere redefinition
of the function will not do: We will need to bind the new functions
explicitly to the keys.

12.150.1 emacspeak-redefine Commands
------------------------------------

12.150.1.1 emacspeak-backward-char
..................................

 -- Command: emacspeak-backward-char (&optional arg)

     Backward-char redefined to speak char moved to.

     (fn &optional ARG)

12.150.1.2 emacspeak-forward-char
.................................

 -- Command: emacspeak-forward-char (&optional arg)

     Forward-char redefined to speak char moved to.

     (fn &optional ARG)

12.150.1.3 emacspeak-self-insert-command
........................................

 -- Command: emacspeak-self-insert-command (&optional arg)

     Insert a character.
     Speaks the character if emacspeak-character-echo is true.
     See  command emacspeak-toggle-word-echo bound to
     C-e d w.
     Speech flushes as you type.

     (fn &optional ARG)


File: emacspeak.info,  Node: emacspeak-reftex,  Next: emacspeak-related,  Prev: emacspeak-redefine,  Up: Emacspeak Commands And Options

12.151 emacspeak-reftex
=======================

This module speech-enables refteex – reftex is a minor mode that makes
navigation of TeX documents possible via a table of contents buffer.


File: emacspeak.info,  Node: emacspeak-related,  Next: emacspeak-remote,  Prev: emacspeak-reftex,  Up: Emacspeak Commands And Options

12.152 emacspeak-related
========================

RELATED == Switch among related buffers (melpa).  Speech-enable
interactive commands.


File: emacspeak.info,  Node: emacspeak-remote,  Next: emacspeak-rg,  Prev: emacspeak-related,  Up: Emacspeak Commands And Options

12.153 emacspeak-remote
=======================

In a running emacspeak session, nuke the running server and start
talking to a remote speech server, after prompting for host and port

12.153.1 emacspeak-remote Commands
----------------------------------

12.153.1.1 emacspeak-remote-connect-to-server
.............................................

 -- Command: emacspeak-remote-connect-to-server (host port)
     ‘C-e M-r’
     ‘<fn> M-r’

     Connect to and start using remote speech server running on
     host host and listening on port port. Host is the hostname of the
     remote server, typically the desktop machine. Port is the tcp
     port that that host is listening on for speech requests.

     (fn HOST PORT)

12.153.1.2 emacspeak-remote-edit-current-remote-hostname
........................................................

 -- Command: emacspeak-remote-edit-current-remote-hostname

     Interactively set up where we came from.
     Value is persisted for use with ssh servers.

12.153.1.3 emacspeak-remote-home
................................

 -- Command: emacspeak-remote-home

     Open ssh session to where we came from.
     Uses value returned by ‘emacspeak-remote-get-current-remote-hostname’.

12.153.1.4 emacspeak-remote-quick-connect-to-server
...................................................

 -- Command: emacspeak-remote-quick-connect-to-server

     Connect to remote server.
     Does not prompt for host or port, but quietly uses the guesses
     that appear as defaults when prompting. Use this once you are
     sure the guesses are usually correct.

12.153.1.5 emacspeak-remote-quick-connect-via-ssh
.................................................

 -- Command: emacspeak-remote-quick-connect-via-ssh

     Connect via ssh to remote Emacspeak server.
     Server is specified via custom option ‘emacspeak-remote-default-ssh-server’.

12.153.1.6 emacspeak-remote-ssh-to-server
.........................................

 -- Command: emacspeak-remote-ssh-to-server (login host port)

     Open ssh session to where we came from.

     (fn LOGIN HOST PORT)

12.153.2 emacspeak-remote Options
---------------------------------

 -- Variable: User Option emacspeak-remote-default-ssh-server
     Default ssh server to use for remote speech server.

 -- Variable: User Option emacspeak-remote-hooks
     List of hook functions that are run after emacspeak is set to run
     as a remote application.  Use this to add actions you typically
     perform after you enter remote mode.


File: emacspeak.info,  Node: emacspeak-rg,  Next: emacspeak-rmail,  Prev: emacspeak-remote,  Up: Emacspeak Commands And Options

12.154 emacspeak-rg
===================

RG == Emacs front-end to ripgrep (rg).


File: emacspeak.info,  Node: emacspeak-rmail,  Next: emacspeak-rpm,  Prev: emacspeak-rg,  Up: Emacspeak Commands And Options

12.155 emacspeak-rmail
======================

emacspeak extensions to rmail

12.155.1 emacspeak-rmail Commands
---------------------------------

12.155.1.1 emacspeak-rmail-speak-current-message-labels
.......................................................

 -- Command: emacspeak-rmail-speak-current-message-labels

     Speak labels of current message

12.155.1.2 emacspeak-rmail-summarize-current-message
....................................................

 -- Command: emacspeak-rmail-summarize-current-message

     Summarize current message


File: emacspeak.info,  Node: emacspeak-rpm,  Next: emacspeak-rpm-spec,  Prev: emacspeak-rmail,  Up: Emacspeak Commands And Options

12.156 emacspeak-rpm
====================

This module speech-enables rpm.el rpm.el can be downloaded from
http://www.uni-karlsruhe.de/~Detlev.Zundel/download/rpm.el and provides
a nice interface to managing and browsing rpm.


File: emacspeak.info,  Node: emacspeak-rpm-spec,  Next: emacspeak-rst,  Prev: emacspeak-rpm,  Up: Emacspeak Commands And Options

12.157 emacspeak-rpm-spec
=========================

speech-enable rpm-spec-mode –part of Emacs 21 on RH 7.3


File: emacspeak.info,  Node: emacspeak-rst,  Next: emacspeak-ruby,  Prev: emacspeak-rpm-spec,  Up: Emacspeak Commands And Options

12.158 emacspeak-rst
====================

RST == rst-mode for editing rst text files.  This module speech-enables
rst-mode.


File: emacspeak.info,  Node: emacspeak-ruby,  Next: emacspeak-sage,  Prev: emacspeak-rst,  Up: Emacspeak Commands And Options

12.159 emacspeak-ruby
=====================

Provide additional advice to Ruby mode


File: emacspeak.info,  Node: emacspeak-sage,  Next: emacspeak-ses,  Prev: emacspeak-ruby,  Up: Emacspeak Commands And Options

12.160 emacspeak-sage
=====================

Speech-enable ‘sage-shell-mode’.  This is a major mode for interacting
with ‘sage’, <http://www.sagemath.org/> An Open-source Mathematical
Software System.


File: emacspeak.info,  Node: emacspeak-ses,  Next: emacspeak-setup,  Prev: emacspeak-sage,  Up: Emacspeak Commands And Options

12.161 emacspeak-ses
====================

ses implements a simple spread sheet and is part of Emacs This module
speech-enables ses

12.161.1 emacspeak-ses Commands
-------------------------------

12.161.1.1 emacspeak-ses-backward-column-and-summarize
......................................................

 -- Command: emacspeak-ses-backward-column-and-summarize

     Move to previous column and summarize.

12.161.1.2 emacspeak-ses-backward-row-and-summarize
...................................................

 -- Command: emacspeak-ses-backward-row-and-summarize

     Move to previous row  and summarize.

12.161.1.3 emacspeak-ses-forward-column-and-summarize
.....................................................

 -- Command: emacspeak-ses-forward-column-and-summarize

     Move to next column and summarize.

12.161.1.4 emacspeak-ses-forward-row-and-summarize
..................................................

 -- Command: emacspeak-ses-forward-row-and-summarize

     Move to next row and summarize.

12.161.1.5 emacspeak-ses-summarize-cell
.......................................

 -- Command: emacspeak-ses-summarize-cell (cell-name)

     Summarize specified  cell.

     (fn CELL-NAME)

12.161.1.6 emacspeak-ses-summarize-current-cell
...............................................

 -- Command: emacspeak-ses-summarize-current-cell (&rest ignore)

     Summarize current cell.

     (fn &rest IGNORE)


File: emacspeak.info,  Node: emacspeak-setup,  Next: emacspeak-sgml-mode,  Prev: emacspeak-ses,  Up: Emacspeak Commands And Options

12.162 emacspeak-setup
======================

Entry point for Emacspeak.  The simplest and most basic way to start
emacspeak is: emacs -q -l <emacspeak-dir>/lisp/emacspeak-setup.el The
above starts a vanilla Emacs with just Emacspeak loaded.  Once the above
has been verified to work, You can add (load-library "emacspeak-setup")
To your .emacs file.  See tvr/emacs-startup.el in the Emacspeak Git
repository for my setup.

12.162.1 emacspeak-setup Options
--------------------------------

 -- Variable: User Option dtk-startup-hook
     List of hooks to be run after starting up the speech server.  Set
     things like speech rate, punctuation mode etc in this hook.

 -- Variable: User Option emacspeak-startup-hook
     Hook run after Emacspeak is started.

 -- Variable: User Option emacspeak-tts-use-notify-stream
     Set to true to use a separate TTS stream for notifications.

 -- Variable: User Option tts-notification-device
     Virtual ALSA device to use for notifications stream.


File: emacspeak.info,  Node: emacspeak-sgml-mode,  Next: emacspeak-sh-script,  Prev: emacspeak-setup,  Up: Emacspeak Commands And Options

12.163 emacspeak-sgml-mode
==========================

emacspeak extensions to sgml mode


File: emacspeak.info,  Node: emacspeak-sh-script,  Next: emacspeak-shx,  Prev: emacspeak-sgml-mode,  Up: Emacspeak Commands And Options

12.164 emacspeak-sh-script
==========================

This module speech-enables sh-script.el


File: emacspeak.info,  Node: emacspeak-shx,  Next: emacspeak-sigbegone,  Prev: emacspeak-sh-script,  Up: Emacspeak Commands And Options

12.165 emacspeak-shx
====================

SHX == Shell Extras For emacs


File: emacspeak.info,  Node: emacspeak-sigbegone,  Next: emacspeak-slime,  Prev: emacspeak-shx,  Up: Emacspeak Commands And Options

12.166 emacspeak-sigbegone
==========================

Speech-enables package sigbegone –voiceify sigs in email and news


File: emacspeak.info,  Node: emacspeak-slime,  Next: emacspeak-smart-window,  Prev: emacspeak-sigbegone,  Up: Emacspeak Commands And Options

12.167 emacspeak-slime
======================

;;; SLIME == Superior Lisp Interaction Mode For Emacs

   Slime is a powerful IDE for developing in Common Lisp and Clojure.
It’s similar but more modern than package ILisp that I used as a
graduate student when developing AsTeR.


File: emacspeak.info,  Node: emacspeak-smart-window,  Next: emacspeak-smartparens,  Prev: emacspeak-slime,  Up: Emacspeak Commands And Options

12.168 emacspeak-smart-window
=============================

SMART-WINDOW == Smart Window switching for Emacs


File: emacspeak.info,  Node: emacspeak-smartparens,  Next: emacspeak-solitaire,  Prev: emacspeak-smart-window,  Up: Emacspeak Commands And Options

12.169 emacspeak-smartparens
============================

SMARTPARENS == Automatic insertion, wrapping and paredit-like navigation
with user defined pairs this module speech-enables smartparens.
Insertion of a matching delimiter is indicated by a short auditory icon.
Structured navigation speaks the current line with the position of point
aurally highlighted.


File: emacspeak.info,  Node: emacspeak-solitaire,  Next: emacspeak-sounds,  Prev: emacspeak-smartparens,  Up: Emacspeak Commands And Options

12.170 emacspeak-solitaire
==========================

Auditory interface to solitaire

12.170.1 emacspeak-solitaire Commands
-------------------------------------

12.170.1.1 emacspeak-solitaire-show-column
..........................................

 -- Command: emacspeak-solitaire-show-column

     Audio format current column.

12.170.1.2 emacspeak-solitaire-show-row
.......................................

 -- Command: emacspeak-solitaire-show-row

     Audio format current row.

12.170.1.3 emacspeak-solitaire-speak-coordinates
................................................

 -- Command: emacspeak-solitaire-speak-coordinates

     Speak coordinates of current position

12.170.1.4 emacspeak-solitaire-speak-row
........................................

 -- Command: emacspeak-solitaire-speak-row

     Speak current row.

12.170.1.5 emacspeak-solitaire-speak-stones
...........................................

 -- Command: emacspeak-solitaire-speak-stones

     Speak number of stones remaining.


File: emacspeak.info,  Node: emacspeak-sounds,  Next: emacspeak-speak,  Prev: emacspeak-solitaire,  Up: Emacspeak Commands And Options

12.171 emacspeak-sounds
=======================

This module provides the interface for generating auditory icons in
emacspeak.  Design goal: 1) Auditory icons should be used to provide
additional feedback, not as a gimmick.  2) The interface should be
usable at all times without the icons: e.g.  when on a machine without a
sound card.  3) General principle for when to use an icon: Convey
information about events taking place in parallel.  For instance, if
making a selection automatically moves the current focus to the next
choice, We speak the next choice, while indicating the fact that
something was selected with a sound cue.  This interface will assume the
availability of a shell command "play" that can take one or more sound
files and play them.  This module will also provide a mapping between
names in the elisp world and actual sound files.  Modules that wish to
use auditory icons should use these names, instead of actual file names.
As of Emacspeak 13.0, this module defines a themes architecture for
auditory icons.  Sound files corresponding to a given theme are found in
appropriate subdirectories of emacspeak-sounds-directory

12.171.1 emacspeak-sounds Commands
----------------------------------

12.171.1.1 emacspeak-audio-setup
................................

 -- Command: emacspeak-audio-setup (&optional prefix)
     ‘C-e (’
     ‘<fn> (’

     Call appropriate audio environment set command.

     (fn &optional PREFIX)

12.171.1.2 emacspeak-set-auditory-icon-player
.............................................

 -- Command: emacspeak-set-auditory-icon-player (player)
     ‘C-e M-a’
     ‘<fn> M-a’

     Select  player used for producing auditory icons.
     Recommended choices:

     emacspeak-serve-auditory-icon for  the wave device.
     emacspeak-queue-auditory-icon when using software TTS.

     (fn PLAYER)

12.171.1.3 emacspeak-sounds-reset-local-player
..............................................

 -- Command: emacspeak-sounds-reset-local-player

     Ask Emacspeak to use a local audio player.
     This lets me have Emacspeak switch to using audioplay on
     solaris after I’ve used it for a while from a remote session
     where it would use the more primitive speech-server based
     audio player.

12.171.1.4 emacspeak-sounds-reset-sound
.......................................

 -- Command: emacspeak-sounds-reset-sound

     Reload sound drivers.

12.171.1.5 emacspeak-sounds-select-theme
........................................

 -- Command: emacspeak-sounds-select-theme (theme)
     ‘C-e )’
     ‘<fn> )’

     Select theme for auditory icons.

     (fn THEME)

12.171.1.6 emacspeak-toggle-auditory-icons
..........................................

 -- Command: emacspeak-toggle-auditory-icons (&optional prefix)
     ‘C-e C-a’
     ‘<fn> C-a’

     Toggle use of auditory icons.
     Optional interactive PREFIX arg toggles global value.

     (fn &optional PREFIX)

12.171.2 emacspeak-sounds Options
---------------------------------

 -- Variable: User Option emacspeak-auditory-icon-function
     *Function that plays auditory icons.  play : Launches play-program
     to play.  Serve: Send a command to the speech-server to play.
     Queue : Add auditory icon to speech queue.  soxplay: Use sox to
     apply effect earwax for headphones.  Native : Use Emacs’ builtin
     sound support.  Use Serve when working with remote speech servers.

 -- Variable: User Option emacspeak-play-args
     Set this to nil if using paplay from pulseaudio.

 -- Variable: User Option emacspeak-play-program
     Name of executable that plays sound files.

 -- Variable: User Option emacspeak-sounds-default-theme
     Default theme for auditory icons.

 -- Variable: User Option emacspeak-sounds-reset-snd-module-command
     Command to reset sound module.

 -- Variable: User Option emacspeak-soxplay-command
     Name of play executable from SoX


File: emacspeak.info,  Node: emacspeak-speak,  Next: emacspeak-speedbar,  Prev: emacspeak-sounds,  Up: Emacspeak Commands And Options

12.172 emacspeak-speak
======================

This module defines the core speech services used by emacspeak.  It
depends on the speech server interface modules It protects other parts
of emacspeak from becoming dependent on the speech server modules

12.172.1 emacspeak-speak Commands
---------------------------------

12.172.1.1 emacspeak–choose-completion
......................................

 -- Command: emacspeak--choose-completion

     Choose the completion at point.

12.172.1.2 emacspeak-blink-matching-open
........................................

 -- Command: emacspeak-blink-matching-open

     Move cursor momentarily to the beginning of the sexp before point.
     Also display match context in minibuffer.

12.172.1.3 emacspeak-completion-pick-completion
...............................................

 -- Command: emacspeak-completion-pick-completion

     Pick completion and return safely where we came from.

12.172.1.4 emacspeak-completions-move-to-completion-group
.........................................................

 -- Command: emacspeak-completions-move-to-completion-group

     Move to group of choices beginning with character last
     typed. If no such group exists, then we try to search for that
     char, or dont move.

12.172.1.5 emacspeak-dial-dtk
.............................

 -- Command: emacspeak-dial-dtk (number)

     Prompt for and dial a phone NUMBER with the Dectalk.

     (fn NUMBER)

12.172.1.6 emacspeak-execute-repeatedly
.......................................

 -- Command: emacspeak-execute-repeatedly (command)

     Execute COMMAND repeatedly.

     (fn COMMAND)

12.172.1.7 emacspeak-goto-percent
.................................

 -- Command: emacspeak-goto-percent (percent)
     ‘C-e M-%’
     ‘<fn> M-%’

     Move to end  PERCENT of buffer like in View mode.
     Display is centered at point.
     Also set the mark at the position where point was.

     (fn PERCENT)

12.172.1.8 emacspeak-launch-application
.......................................

 -- Command: emacspeak-launch-application (command)
     ‘C-&’

     Launch an application.
     This command  is designed for use in a windowing environment like X.

     (fn COMMAND)

12.172.1.9 emacspeak-mark-backward-mark
.......................................

 -- Command: emacspeak-mark-backward-mark
     ‘<C-up>’

     Cycle backward through the mark ring.

12.172.1.10 emacspeak-minibuffer-choose-completion
..................................................

 -- Command: emacspeak-minibuffer-choose-completion

     Choose current completion.

12.172.1.11 emacspeak-minibuffer-next-completion
................................................

 -- Command: emacspeak-minibuffer-next-completion

     Move to next available minibuffer completion.

12.172.1.12 emacspeak-minibuffer-previous-completion
....................................................

 -- Command: emacspeak-minibuffer-previous-completion

     Move to previous available minibuffer completion.

12.172.1.13 emacspeak-open-info
...............................

 -- Command: emacspeak-open-info
     ‘C-e TAB’
     ‘<fn> TAB’

     Open Emacspeak Info Manual.

12.172.1.14 emacspeak-owindow-next-line
.......................................

 -- Command: emacspeak-owindow-next-line (count)
     ‘ESC <down>’

     Move to the next line in the other window and speak it.
     Numeric prefix arg COUNT can specify number of lines to move.

     (fn COUNT)

12.172.1.15 emacspeak-owindow-previous-line
...........................................

 -- Command: emacspeak-owindow-previous-line (count)
     ‘ESC <up>’

     Move to the next line in the other window and speak it.
     Numeric prefix arg COUNT specifies number of lines to move.

     (fn COUNT)

12.172.1.16 emacspeak-owindow-scroll-down
.........................................

 -- Command: emacspeak-owindow-scroll-down
     ‘ESC <prior>’

     Scroll down  the window that command ‘other-window’ would move to.
     Speak the window contents after scrolling.

12.172.1.17 emacspeak-owindow-scroll-up
.......................................

 -- Command: emacspeak-owindow-scroll-up
     ‘ESC <next>’

     Scroll up the window that command ‘other-window’ would move to.
     Speak the window contents after scrolling.

12.172.1.18 emacspeak-owindow-speak-line
........................................

 -- Command: emacspeak-owindow-speak-line
     ‘ESC <select>’

     Speak the current line in the other window.

12.172.1.19 emacspeak-read-next-line
....................................

 -- Command: emacspeak-read-next-line (&optional arg)
     ‘C-e <down>’
     ‘<fn> <down>’

     Read next line, specified by an offset, without moving.
     Default is to read the next line.

     (fn &optional ARG)

12.172.1.20 emacspeak-read-next-word
....................................

 -- Command: emacspeak-read-next-word (&optional arg)

     Read next word, specified as a numeric  arg, without moving.
     Default is to read the next word.

     (fn &optional ARG)

12.172.1.21 emacspeak-read-previous-line
........................................

 -- Command: emacspeak-read-previous-line (&optional arg)
     ‘C-e <up>’
     ‘<fn> <up>’

     Read previous line, specified by an offset, without moving.
     Default is to read the previous line.

     (fn &optional ARG)

12.172.1.22 emacspeak-read-previous-word
........................................

 -- Command: emacspeak-read-previous-word (&optional arg)

     Read previous word, specified as a prefix arg, without moving.
     Default is to read the previous word.

     (fn &optional ARG)

12.172.1.23 emacspeak-search
............................

 -- Command: emacspeak-search
     ‘<search>’

     Call search defined in <search>.

12.172.1.24 emacspeak-shell-command
...................................

 -- Command: emacspeak-shell-command (command)
     ‘C-e $’
     ‘<fn> $’

     Run shell command and speak its output.

     (fn COMMAND)

12.172.1.25 emacspeak-silence
.............................

 -- Command: emacspeak-silence
     ‘<silence>’

     Silence is golden. Stop speech, and pause/resume any media
     streams. Runs ‘emacspeak-silence-hook’ which can be used to
     configure which media players get silenced or paused/resumed.

12.172.1.26 emacspeak-speak-and-skip-extent-upto-char
.....................................................

 -- Command: emacspeak-speak-and-skip-extent-upto-char (char)

     Search forward from point until we hit char.
     Speak text between point and the char we hit.

     (fn CHAR)

12.172.1.27 emacspeak-speak-and-skip-extent-upto-this-char
..........................................................

 -- Command: emacspeak-speak-and-skip-extent-upto-this-char

     Speak extent delimited by point and last character typed.

12.172.1.28 emacspeak-speak-browse-buffer
.........................................

 -- Command: emacspeak-speak-browse-buffer (&optional browse)
     ‘C-e ,’
     ‘<fn> ,’

     Browse current buffer.
     Default is to speak chunk having current personality.
     Interactive prefix arg ‘browse’  repeatedly browses  through
       chunks having same personality as the current text chunk.

     (fn &optional BROWSE)

12.172.1.29 emacspeak-speak-buffer
..................................

 -- Command: emacspeak-speak-buffer (&optional arg)
     ‘C-e b’
     ‘<fn> b’

     Speak current buffer  contents.
     With prefix ARG, speaks the rest of the buffer from point.
     Negative prefix arg speaks from start of buffer to point.
      If voice lock mode is on, the paragraphs in the buffer are
     voice annotated first,  see command ‘emacspeak-speak-voice-annotate-paragraphs’.

     (fn &optional ARG)

12.172.1.30 emacspeak-speak-buffer-filename
...........................................

 -- Command: emacspeak-speak-buffer-filename (&optional filename)
     ‘C-e f’
     ‘<fn> f’

     Speak name of file being visited in current buffer.
     Speak default directory if invoked in a dired buffer,
     or when the buffer is not visiting any file.
     Interactive prefix arg ‘filename’ speaks only the final path
     component.
     The result is put in the kill ring for convenience.

     (fn &optional FILENAME)

12.172.1.31 emacspeak-speak-buffer-interactively
................................................

 -- Command: emacspeak-speak-buffer-interactively
     ‘C-e B’
     ‘<fn> B’

     Speak the start of, rest of, or the entire buffer.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire buffer.

12.172.1.32 emacspeak-speak-char
................................

 -- Command: emacspeak-speak-char (&optional prefix)
     ‘C-e c’
     ‘<fn> c’

     Speak character under point.
     Pronounces character phonetically unless  called with a PREFIX arg.

     (fn &optional PREFIX)

12.172.1.33 emacspeak-speak-char-name
.....................................

 -- Command: emacspeak-speak-char-name (char)

     tell me what this is

     (fn CHAR)

12.172.1.34 emacspeak-speak-completions-if-available
....................................................

 -- Command: emacspeak-speak-completions-if-available

     Speak completions if available.

12.172.1.35 emacspeak-speak-continuously
........................................

 -- Command: emacspeak-speak-continuously
     ‘C-e RET’
     ‘<fn> RET’

     Speak a buffer continuously.
     First prompts using the minibuffer for the kind of action to
     perform after speaking each chunk.  E.G.  speak a line at a time
     etc.  Speaking commences at current buffer position.  Pressing
     C-g breaks out, leaving point on last chunk that
     was spoken.  Any other key continues to speak the buffer.

12.172.1.36 emacspeak-speak-current-column
..........................................

 -- Command: emacspeak-speak-current-column
     ‘C-e =’
     ‘<fn> =’

     Speak the current column.

12.172.1.37 emacspeak-speak-current-field
.........................................

 -- Command: emacspeak-speak-current-field

     Speak current field.

12.172.1.38 emacspeak-speak-current-kill
........................................

 -- Command: emacspeak-speak-current-kill (&optional count)
     ‘C-e k’
     ‘<fn> k’

     Speak the current kill entry.
     This is the text that will be yanked in
     by the next <S-insertchar>. Prefix numeric arg, COUNT, specifies that the
     text that will be yanked as a result of a <S-insertchar> followed by count-1
     M-x yank-pop be spoken. The kill number that is spoken says what
     numeric prefix arg to give to command yank.

     (fn &optional COUNT)

12.172.1.39 emacspeak-speak-current-mark
........................................

 -- Command: emacspeak-speak-current-mark (count)
     ‘C-e C-SPC’
     ‘C-e C-@’
     ‘<fn> C-SPC’
     ‘<fn> C-@’

     Speak the line containing the mark.
     With no argument, speaks the line containing the mark–this is
     where ‘exchange-point-and-mark’ C-x C-x would
     jump.  Numeric prefix arg ’COUNT’ speaks line containing mark ’n’
     where ’n’ is one less than the number of times one has to jump
     using ‘set-mark-command’ to get to this marked position.  The
     location of the mark is indicated by an aural highlight achieved
     by a change in voice personality.

     (fn COUNT)

12.172.1.40 emacspeak-speak-current-percentage
..............................................

 -- Command: emacspeak-speak-current-percentage
     ‘C-e %’
     ‘<fn> %’

     Announce the percentage into the current buffer.

12.172.1.41 emacspeak-speak-current-window
..........................................

 -- Command: emacspeak-speak-current-window

     Speak contents of current window.
     Speaks entire window irrespective of point.

12.172.1.42 emacspeak-speak-date-as-seconds
...........................................

 -- Command: emacspeak-speak-date-as-seconds (time)

     Read time value as a human-readable string, return seconds.
     Seconds value is also placed in the kill-ring.

     (fn TIME)

12.172.1.43 emacspeak-speak-display-char
........................................

 -- Command: emacspeak-speak-display-char (&optional prefix)

     Display char under point using current speech display table.
     Behavior is the same as command ‘emacspeak-speak-char’
     bound to C-e c
     for characters in the range 0–127.
     Optional argument PREFIX  specifies that the character should be spoken phonetically.

     (fn &optional PREFIX)

12.172.1.44 emacspeak-speak-face-interval-and-move
..................................................

 -- Command: emacspeak-speak-face-interval-and-move

     Speaks region delimited by text in current face, and moves past the chunk.

12.172.1.45 emacspeak-speak-front-of-buffer
...........................................

 -- Command: emacspeak-speak-front-of-buffer

     Speak   the buffer from start to   point

12.172.1.46 emacspeak-speak-header-line
.......................................

 -- Command: emacspeak-speak-header-line
     ‘C-e SPC’
     ‘<fn> SPC’

     Speak header line if set.

12.172.1.47 emacspeak-speak-help
................................

 -- Command: emacspeak-speak-help (&optional arg)
     ‘C-e h’
     ‘<fn> h’

     Speak help buffer if one present.
     With prefix arg, speaks the rest of the buffer from point.
     Negative prefix arg speaks from start of buffer to point.

     (fn &optional ARG)

12.172.1.48 emacspeak-speak-help-interactively
..............................................

 -- Command: emacspeak-speak-help-interactively

     Speak the start of, rest of, or the entire help.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire help.

12.172.1.49 emacspeak-speak-hostname
....................................

 -- Command: emacspeak-speak-hostname
     ‘C-e M-h’
     ‘<fn> M-h’

     Speak host name.

12.172.1.50 emacspeak-speak-line
................................

 -- Command: emacspeak-speak-line (&optional arg)
     ‘C-e l’
     ‘<fn> l’

     Speaks current line.  With prefix ARG, speaks the rest of the line
     from point.  Negative prefix optional arg speaks from start of line to
     point.  Voicifies if option ‘voice-lock-mode’ is on.  Indicates
     indentation with a tone or a spoken message if audio indentation is in
     use see ‘emacspeak-toggle-audio-indentation’ bound to
     C-e d i.  Indicates position of point
     with an aural highlight if option ‘emacspeak-show-point’ is turned on
     –see command ‘emacspeak-toggle-show-point’ bound to
     C-e C-d.  Lines that start hidden blocks of text,
     e.g.  outline header lines, or header lines of blocks created by
     command ‘emacspeak-hide-or-expose-block’ are indicated with auditory
     icon ellipses. Presence of additional presentational overlays (created
     via property display, before-string, or after-string) is indicated
     with auditory icon ‘more’.  These can then be spoken using command
     C-e C-M-l.

     (fn &optional ARG)

12.172.1.51 emacspeak-speak-line-interactively
..............................................

 -- Command: emacspeak-speak-line-interactively
     ‘C-e L’
     ‘<fn> L’

     Speak the start of, rest of, or the entire line.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire line.

12.172.1.52 emacspeak-speak-line-number
.......................................

 -- Command: emacspeak-speak-line-number
     ‘C-e C-l’
     ‘<fn> C-l’

     Print the current buffer line number and narrowed line number of point.

12.172.1.53 emacspeak-speak-line-set-column-filter
..................................................

 -- Command: emacspeak-speak-line-set-column-filter (filter)
     ‘C-e |’
     ‘<fn> |’

     Set up filter for selectively speaking or ignoring portions of lines.
     The filter is specified as a list of pairs.
     For example, to filter  columns 1 – 10 and 20 – 25,
     specify filter as
     ((0 9) (20 25)). Filter settings are persisted across sessions.  A
     persisted filter is used as the default when prompting for a filter.
     This allows one to accumulate a set of filters for specific files like
     /var/adm/messages and /var/adm/maillog over time.
     Option emacspeak-speak-line-invert-filter determines
     the sense of the filter.

     (fn FILTER)

12.172.1.54 emacspeak-speak-load-directory-settings
...................................................

 -- Command: emacspeak-speak-load-directory-settings (&optional
          directory)

     Load a directory specific Emacspeak settings file.
     This is typically used to load up settings that are specific to
     an electronic book consisting of many files in the same
     directory.

     (fn &optional DIRECTORY)

12.172.1.55 emacspeak-speak-message-again
.........................................

 -- Command: emacspeak-speak-message-again (&optional
          from-message-cache)
     ‘C-e a’
     ‘<fn> a’

     Speak the last message from Emacs once again.
     The message is also placed in the kill ring for convenient yanking
     if ‘emacspeak-speak-message-again-should-copy-to-kill-ring’ is set.

     (fn &optional FROM-MESSAGE-CACHE)

12.172.1.56 emacspeak-speak-message-at-time
...........................................

 -- Command: emacspeak-speak-message-at-time (time message)
     ‘C-e @’
     ‘<fn> @’

     Set up ring-at-time to speak message at specified time.
     Provides simple stop watch functionality in addition to other things.
     See documentation for command run-at-time for details on time-spec.

     (fn TIME MESSAGE)

12.172.1.57 emacspeak-speak-microseconds-since-epoch
....................................................

 -- Command: emacspeak-speak-microseconds-since-epoch (ms)

     Speaks time value specified as microseconds  since epoch, e.g. as from float-time.

     (fn MS)

12.172.1.58 emacspeak-speak-milliseconds-since-epoch
....................................................

 -- Command: emacspeak-speak-milliseconds-since-epoch (ms)

     Speaks time value specified as milliseconds  since epoch, e.g. as from float-time.

     (fn MS)

12.172.1.59 emacspeak-speak-minibuffer
......................................

 -- Command: emacspeak-speak-minibuffer (&optional arg)

     Speak the minibuffer contents
      With prefix arg, speaks the rest of the buffer from point.
     Negative prefix arg speaks from start of buffer to point.

     (fn &optional ARG)

12.172.1.60 emacspeak-speak-minor-mode-line
...........................................

 -- Command: emacspeak-speak-minor-mode-line (&optional copy-as-kill)
     ‘C-e M’
     ‘<fn> M’

     Speak the minor mode-information.
     Optional  interactive prefix arg ‘copy-as-kill’ copies spoken info to kill ring.

     (fn &optional COPY-AS-KILL)

12.172.1.61 emacspeak-speak-mode-line
.....................................

 -- Command: emacspeak-speak-mode-line (&optional buffer-info)
     ‘C-e m’
     ‘<fn> m’

     Speak the mode-line.
     Speaks header-line if that is set when called non-interactively.
     Interactive prefix arg speaks buffer info.

     (fn &optional BUFFER-INFO)

12.172.1.62 emacspeak-speak-next-face-chunk
...........................................

 -- Command: emacspeak-speak-next-face-chunk

     Moves to the front of next chunk having current face.
     Speak that chunk after moving.

12.172.1.63 emacspeak-speak-next-field
......................................

 -- Command: emacspeak-speak-next-field
     ‘C-e >’
     ‘<fn> >’

     Move to and speak next field.

12.172.1.64 emacspeak-speak-next-personality-chunk
..................................................

 -- Command: emacspeak-speak-next-personality-chunk

     Moves to the front of next chunk having current personality.
     Speak that chunk after moving.

12.172.1.65 emacspeak-speak-next-window
.......................................

 -- Command: emacspeak-speak-next-window
     ‘C-e C-n’
     ‘<fn> C-n’

     Speak the next window.

12.172.1.66 emacspeak-speak-other-buffer
........................................

 -- Command: emacspeak-speak-other-buffer (buffer)
     ‘C-e M-b’
     ‘<fn> M-b’

     Speak specified buffer.
     Useful to listen to a buffer without switching  contexts.

     (fn BUFFER)

12.172.1.67 emacspeak-speak-other-window
........................................

 -- Command: emacspeak-speak-other-window (&optional arg)

     Speak contents of ‘other’ window.
     Speaks entire window irrespective of point.
     Semantics  of ‘other’ is the same as for the builtin Emacs command
     ‘other-window’.
     Optional argument ARG  specifies ‘other’ window to speak.

     (fn &optional ARG)

12.172.1.68 emacspeak-speak-overlay-properties
..............................................

 -- Command: emacspeak-speak-overlay-properties
     ‘C-e C-M-l’
     ‘<fn> C-M-l’

     Speak display, before-string or after-string property if any.

12.172.1.69 emacspeak-speak-page
................................

 -- Command: emacspeak-speak-page (&optional arg)
     ‘C-e [’
     ‘<fn> [’

     Speak a page.
     With prefix ARG, speaks rest of current page.
     Negative prefix arg will read from start of current page to point.
     If option  ‘voice-lock-mode’ is on, then it will use any defined personality.

     (fn &optional ARG)

12.172.1.70 emacspeak-speak-page-interactively
..............................................

 -- Command: emacspeak-speak-page-interactively
     ‘C-e ]’
     ‘<fn> ]’

     Speak the start of, rest of, or the entire page.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire page.

12.172.1.71 emacspeak-speak-paragraph
.....................................

 -- Command: emacspeak-speak-paragraph (&optional arg)
     ‘C-e {’
     ‘C-e p’
     ‘<fn> {’
     ‘<fn> p’

     Speak paragraph.
     With prefix arg, speaks rest of current paragraph.
     Negative prefix arg will read from start of current paragraph to point.
     If voice-lock-mode is on, then it will use any defined personality.

     (fn &optional ARG)

12.172.1.72 emacspeak-speak-paragraph-interactively
...................................................

 -- Command: emacspeak-speak-paragraph-interactively
     ‘C-e P’
     ‘<fn> P’

     Speak the start of, rest of, or the entire paragraph.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire paragraph.

12.172.1.73 emacspeak-speak-preceding-char
..........................................

 -- Command: emacspeak-speak-preceding-char

     Speak character before point.

12.172.1.74 emacspeak-speak-predefined-window
.............................................

 -- Command: emacspeak-speak-predefined-window (&optional arg)
     ‘C-e 9’
     ‘C-e 8’
     ‘C-e 7’
     ‘C-e 6’
     ‘C-e 5’
     ‘C-e 4’
     ‘C-e 3’
     ‘C-e 2’
     ‘C-e 1’
     ‘C-e 0’
     ‘<fn> 9’
     ‘<fn> 8’
     ‘<fn> 7’
     ‘<fn> 6’
     ‘<fn> 5’
     ‘<fn> 4’
     ‘<fn> 3’
     ‘<fn> 2’
     ‘<fn> 1’
     ‘<fn> 0’

     Speak one of the first 10 windows on the screen.
     Speaks entire window irrespective of point.
     In general, you’ll never have Emacs split the screen into more than
     two or three.
     Argument ARG determines the ’other’ window to speak.
     Semantics  of ‘other’ is the same as for the builtin Emacs command
     ‘other-window’.

     (fn &optional ARG)

12.172.1.75 emacspeak-speak-previous-face-chunk
...............................................

 -- Command: emacspeak-speak-previous-face-chunk

     Moves to the front of previous chunk having current face.
     Speak that chunk after moving.

12.172.1.76 emacspeak-speak-previous-field
..........................................

 -- Command: emacspeak-speak-previous-field
     ‘C-e <’
     ‘<fn> <’

     Move to previous field and speak it.

12.172.1.77 emacspeak-speak-previous-personality-chunk
......................................................

 -- Command: emacspeak-speak-previous-personality-chunk

     Moves to the front of previous chunk having current personality.
     Speak that chunk after moving.

12.172.1.78 emacspeak-speak-previous-window
...........................................

 -- Command: emacspeak-speak-previous-window
     ‘C-e C-p’
     ‘<fn> C-p’

     Speak the previous window.

12.172.1.79 emacspeak-speak-rectangle
.....................................

 -- Command: emacspeak-speak-rectangle (start end)
     ‘C-e R’
     ‘<fn> R’

     Speak a rectangle of text.
     Rectangle is delimited by point and mark.  When call from a
     program, arguments specify the START and END of the rectangle.

     (fn START END)

12.172.1.80 emacspeak-speak-region
..................................

 -- Command: emacspeak-speak-region (start end)
     ‘C-e r’
     ‘<fn> r’

     Speak region.
     Argument START  and END specify region to speak.

     (fn START END)

12.172.1.81 emacspeak-speak-rest-of-buffer
..........................................

 -- Command: emacspeak-speak-rest-of-buffer
     ‘C-e n’
     ‘<fn> n’

     Speak remainder of the buffer starting at point

12.172.1.82 emacspeak-speak-run-shell-command
.............................................

 -- Command: emacspeak-speak-run-shell-command (command &optional
          read-as-csv)
     ‘C-e !’
     ‘<fn> !’

     Invoke shell COMMAND and display its output as a table. The
     results are placed in a buffer in Emacspeak’s table browsing
     mode. Optional interactive prefix arg read-as-csv interprets the
     result as csv. . Use this for running shell commands that produce
     tabulated output. This command should be used for shell commands
     that produce tabulated output that works with Emacspeak’s table
     recognizer. Verify this first by running the command in a shell
     and executing command ‘emacspeak-table-display-table-in-region’
     normally bound to C-e M-i.

     (fn COMMAND &optional READ-AS-CSV)

12.172.1.83 emacspeak-speak-seconds-since-epoch
...............................................

 -- Command: emacspeak-speak-seconds-since-epoch (seconds)

     Speaks time value specified as seconds  since epoch, e.g. as from float-time.

     (fn SECONDS)

12.172.1.84 emacspeak-speak-sentence
....................................

 -- Command: emacspeak-speak-sentence (&optional arg)

     Speak current sentence.
     With prefix ARG, speaks the rest of the sentence  from point.
     Negative prefix arg speaks from start of sentence to point.

     (fn &optional ARG)

12.172.1.85 emacspeak-speak-set-display-table
.............................................

 -- Command: emacspeak-speak-set-display-table (&optional prefix)

     Sets up buffer specific speech display table that controls how
     special characters are spoken. Interactive prefix argument causes
     setting to be global.

     (fn &optional PREFIX)

12.172.1.86 emacspeak-speak-set-mode-punctuations
.................................................

 -- Command: emacspeak-speak-set-mode-punctuations (setting)
     ‘C-e d m’
     ‘<fn> d m’

     Set punctuation mode for all buffers in current mode.

     (fn SETTING)

12.172.1.87 emacspeak-speak-sexp
................................

 -- Command: emacspeak-speak-sexp (&optional arg)
     ‘C-e '’
     ‘<fn> '’

     Speak current sexp.
     With prefix ARG, speaks the rest of the sexp  from point.
     Negative prefix arg speaks from start of sexp to point.

     (fn &optional ARG)

12.172.1.88 emacspeak-speak-sexp-interactively
..............................................

 -- Command: emacspeak-speak-sexp-interactively

     Speak the start of, rest of, or the entire sexp.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire sexp.

12.172.1.89 emacspeak-speak-show-active-network-interfaces
..........................................................

 -- Command: emacspeak-speak-show-active-network-interfaces (&optional
          address)
     ‘C-e I’
     ‘<fn> I’

     Shows all active network interfaces in the echo area.
     With interactive prefix argument ADDRESS it prompts for a
     specific interface and shows its address. The address is
     also copied to the kill ring for convenient yanking.

     (fn &optional ADDRESS)

12.172.1.90 emacspeak-speak-skim-buffer
.......................................

 -- Command: emacspeak-speak-skim-buffer

     Skim the current buffer  a paragraph at a time.

12.172.1.91 emacspeak-speak-skim-next-paragraph
...............................................

 -- Command: emacspeak-speak-skim-next-paragraph

     Skim next paragraph.

12.172.1.92 emacspeak-speak-skim-paragraph
..........................................

 -- Command: emacspeak-speak-skim-paragraph

     Skim paragraph.
     Skimming a paragraph results in the speech speeding up after
     the first clause.
     Speech is scaled by the value of dtk-speak-skim-scale

12.172.1.93 emacspeak-speak-spaces-at-point
...........................................

 -- Command: emacspeak-speak-spaces-at-point
     ‘C-e C-M-SPC’
     ‘C-e C-M-@’
     ‘<fn> C-M-SPC’
     ‘<fn> C-M-@’

     Speak the white space at point.

12.172.1.94 emacspeak-speak-spell-current-word
..............................................

 -- Command: emacspeak-speak-spell-current-word

     Spell word at  point.

12.172.1.95 emacspeak-speak-text-range
......................................

 -- Command: emacspeak-speak-text-range (property)

     Speak text range identified by this PROPERTY.

     (fn PROPERTY)

12.172.1.96 emacspeak-speak-this-face-chunk
...........................................

 -- Command: emacspeak-speak-this-face-chunk

     Speak chunk of text around point that has current face.

12.172.1.97 emacspeak-speak-this-personality-chunk
..................................................

 -- Command: emacspeak-speak-this-personality-chunk

     Speak chunk of text around point that has current
     personality.

12.172.1.98 emacspeak-speak-time
................................

 -- Command: emacspeak-speak-time (&optional world)
     ‘C-e t’
     ‘<fn> t’

     Speak the time.
     Optional interactive prefix arg ‘C-u’invokes world clock.
     Timezone is specified using minibuffer completion.
     Second interactive prefix sets clock to new timezone.

     (fn &optional WORLD)

12.172.1.99 emacspeak-speak-version
...................................

 -- Command: emacspeak-speak-version (&optional speak-rev)
     ‘C-e V’
     ‘<fn> V’

     Announce version information for running emacspeak.
     Optional interactive prefix arg ‘speak-rev’ speaks only the Git revision number.

     (fn &optional SPEAK-REV)

12.172.1.100 emacspeak-speak-visual-line
........................................

 -- Command: emacspeak-speak-visual-line

     Speaks current visual line.
     Cues the start of a physical line with auditory icon ‘left’.

12.172.1.101 emacspeak-speak-voice-annotate-paragraphs
......................................................

 -- Command: emacspeak-speak-voice-annotate-paragraphs

     Locate paragraphs and voice annotate the first word.
     Here, paragraph is taken to mean a chunk of text preceded by a blank line.
     Useful to do this before you listen to an entire buffer.

12.172.1.102 emacspeak-speak-which-function
...........................................

 -- Command: emacspeak-speak-which-function
     ‘C-e M-w’
     ‘<fn> M-w’

     Speak which function we are on.  Uses which-function from
     which-func without turning that mode on.  We actually use
     semantic to do the work.

12.172.1.103 emacspeak-speak-window-information
...............................................

 -- Command: emacspeak-speak-window-information
     ‘C-e C-w’
     ‘<fn> C-w’

     Speaks information about current window.

12.172.1.104 emacspeak-speak-word
.................................

 -- Command: emacspeak-speak-word (&optional arg)
     ‘C-e w’
     ‘<fn> w’

     Speak current word.
     With prefix ARG, speaks the rest of the word from point.
     Negative prefix arg speaks from start of word to point.
     If executed  on the same buffer position a second time, the word is
     spelled out  instead of being spoken.

     (fn &optional ARG)

12.172.1.105 emacspeak-speak-word-interactively
...............................................

 -- Command: emacspeak-speak-word-interactively

     Speak the start of, rest of, or the entire word.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire word.

12.172.1.106 emacspeak-speak-world-clock
........................................

 -- Command: emacspeak-speak-world-clock (zone &optional set)

     Display current date and time  for specified zone.
     Optional second arg ‘set’ sets the TZ environment variable as well.

     (fn ZONE &optional SET)

12.172.1.107 emacspeak-switch-to-reference-buffer
.................................................

 -- Command: emacspeak-switch-to-reference-buffer

     Switch back to buffer that generated completions.

12.172.1.108 emacspeak-toggle-action-mode
.........................................

 -- Command: emacspeak-toggle-action-mode (&optional prefix)

     Toggle state of  Emacspeak  action mode.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.109 emacspeak-toggle-audio-indentation
...............................................

 -- Command: emacspeak-toggle-audio-indentation (&optional prefix)
     ‘C-e d i’
     ‘<fn> d i’

     Toggle state of  Emacspeak  audio indentation.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.
     Specifying the method of indentation as ‘tones’
     results in the Dectalk producing a tone whose length is a function of the
     line’s indentation.  Specifying ‘speak’
     results in the number of initial spaces being spoken.

12.172.1.110 emacspeak-toggle-character-echo
............................................

 -- Command: emacspeak-toggle-character-echo (&optional prefix)
     ‘C-e d k’
     ‘<fn> d k’

     Toggle state of  Emacspeak  character echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.111 emacspeak-toggle-comint-autospeak
..............................................

 -- Command: emacspeak-toggle-comint-autospeak (&optional prefix)

     Toggle state of Emacspeak comint autospeak.
     When turned on, comint output is automatically spoken.  Turn this on if
     you want your shell to speak its results.  Interactive
     PREFIX arg means toggle the global default value, and then
     set the current local value to the result.

12.172.1.112 emacspeak-toggle-comint-output-monitor
...................................................

 -- Command: emacspeak-toggle-comint-output-monitor (&optional prefix)
     ‘C-e o’
     ‘<fn> o’

     Toggle state of Emacspeak comint monitor.
     When turned on, comint output is automatically spoken.  Turn this on if
     you want your shell to speak its results.  Interactive
     PREFIX arg means toggle the global default value, and then
     set the current local value to the result.

12.172.1.113 emacspeak-toggle-header-line
.........................................

 -- Command: emacspeak-toggle-header-line

     Toggle Emacspeak’s default header line.

12.172.1.114 emacspeak-toggle-inaudible-or-comint-autospeak
...........................................................

 -- Command: emacspeak-toggle-inaudible-or-comint-autospeak
     ‘C-e C-q’
     ‘<fn> C-q’

     Toggle comint-autospeak when in a comint buffer.
     Otherwise call voice-setup-toggle-silence-personality which toggles the
     personality under point.

12.172.1.115 emacspeak-toggle-line-echo
.......................................

 -- Command: emacspeak-toggle-line-echo (&optional prefix)
     ‘C-e d l’
     ‘<fn> d l’

     Toggle state of  Emacspeak  line echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.116 emacspeak-toggle-mail-alert
........................................

 -- Command: emacspeak-toggle-mail-alert (&optional prefix)
     ‘C-e M-m’
     ‘<fn> M-m’

     Toggle state of  Emacspeak  mail alert.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.
     Turning on this option results in Emacspeak producing an auditory icon
     indicating the arrival  of new mail when displaying the mode line.

12.172.1.117 emacspeak-toggle-show-point
........................................

 -- Command: emacspeak-toggle-show-point (&optional prefix)
     ‘C-e C-d’
     ‘<fn> C-d’

     Toggle state of  Emacspeak-show-point.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.118 emacspeak-toggle-speak-line-invert-filter
......................................................

 -- Command: emacspeak-toggle-speak-line-invert-filter (&optional
          prefix)
     ‘C-e \’
     ‘<fn> \’

     Toggle state of   how column filter is interpreted.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.119 emacspeak-toggle-speak-messages
............................................

 -- Command: emacspeak-toggle-speak-messages (&optional prefix)
     ‘C-e q’
     ‘<fn> q’

     Toggle the state of whether emacspeak echoes messages.

12.172.1.120 emacspeak-toggle-word-echo
.......................................

 -- Command: emacspeak-toggle-word-echo (&optional prefix)
     ‘C-e d w’
     ‘<fn> d w’

     Toggle state of  Emacspeak  word echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.121 emacspeak-use-customized-blink-paren
.................................................

 -- Command: emacspeak-use-customized-blink-paren

     A customized blink-paren to speak  matching opening paren.
     We need to call this in case Emacs is anal and loads its own
     builtin blink-paren function which does not talk.

12.172.1.122 emacspeak-view-notifications
.........................................

 -- Command: emacspeak-view-notifications
     ‘C-h T’
     ‘<f1> T’
     ‘<help> T’

     Display notifications.

12.172.1.123 emacspeak-voiceify-rectangle
.........................................

 -- Command: emacspeak-voiceify-rectangle (start end &optional
          personality)

     Voicify the current rectangle.
     When calling from a program,arguments are
     START END personality
     Prompts for PERSONALITY  with completion when called interactively.

     (fn START END &optional PERSONALITY)

12.172.1.124 emacspeak-voiceify-region
......................................

 -- Command: emacspeak-voiceify-region (start end &optional personality)

     Voicify the current region.
     When calling from a program,arguments are
     START END personality.
     Prompts for PERSONALITY  with completion when called interactively.

     (fn START END &optional PERSONALITY)

12.172.1.125 emacspeak-zap-tts
..............................

 -- Command: emacspeak-zap-tts
     ‘C-e d z’
     ‘<fn> d z’

     Send this command to the TTS directly.

12.172.2 emacspeak-speak Options
--------------------------------

 -- Variable: User Option emacspeak-audio-indentation
     Option indicating if line indentation is cued.  If non-nil , then
     speaking a line indicates its indentation.  You can use command
     ‘emacspeak-toggle-audio-indentation’ bound to C-e d i to toggle
     this setting..

 -- Variable: User Option emacspeak-audio-indentation-method
     Current technique used to cue indentation.  Default is ‘speak’.
     You can specify ‘tone’ for producing a beep indicating the
     indentation.  Automatically becomes local in any buffer where it is
     set.

 -- Variable: User Option emacspeak-character-echo
     If t, then emacspeak echoes characters as you type.  You can use
     C-e d k to toggle this setting.

 -- Variable: User Option emacspeak-comint-autospeak
     Says if comint output is automatically spoken.  You can use
     ‘emacspeak-toggle-comint-autospeak‘ bound to M-x
     emacspeak-toggle-comint-autospeak to toggle this setting.

 -- Variable: User Option emacspeak-line-echo
     If t, then emacspeak echoes lines as you type.  You can use C-e d l
     to set this option.

 -- Variable: User Option emacspeak-mail-alert
     Option to indicate cueing of new mail.  If t, emacspeak will alert
     you about newly arrived mail with an auditory icon when displaying
     the mode line.  You can use command ‘emacspeak-toggle-mail-alert’
     bound to C-e M-m to set this option.  If you have online access to
     a voicemail drop, you can have a voice-mail alert set up by
     specifying the location of the voice-mail drop via custom option
     emacspeak-voicemail-spool-file.

 -- Variable: User Option emacspeak-mail-alert-interval
     Interval in seconds between mail alerts for the same pending
     message.

 -- Variable: User Option emacspeak-mail-spool-file
     Mail spool file examined to alert you about newly arrived mail.

 -- Variable: User Option emacspeak-search
     Default search engine.

 -- Variable: User Option emacspeak-silence-hook
     Functions run after emacspeak-silence is called.

 -- Variable: User Option emacspeak-speak-default-os-coding-system
     List of coding systems on this platform.

 -- Variable: User Option emacspeak-speak-directory-settings
     Name of file that holds directory specific settings.

 -- Variable: User Option emacspeak-speak-embedded-url-pattern
     Pattern to recognize embedded URLs.

 -- Variable: User Option emacspeak-speak-filter-persistent-store
     File where emacspeak filters are persisted.

 -- Variable: User Option emacspeak-speak-line-column-filter
     List that specifies columns to be filtered.  The list when set
     holds pairs of start-col.end-col pairs that specifies the columns
     that should not be spoken.  Each column contains a single character
     –this is inspired by cut -c on UNIX.

 -- Variable: User Option
          emacspeak-speak-load-directory-settings-quietly
     User option that affects loading of directory specific settings.
     If set to T,Emacspeak will not prompt before loading directory
     specific settings.

 -- Variable: User Option emacspeak-speak-maximum-line-length
     Threshold for determining ‘long’ lines.  Emacspeak will ask for
     confirmation before speaking lines that are longer than this
     length.  This is to avoid accidentally opening a binary file and
     torturing the speech synthesizer with a long string of gibberish.

 -- Variable: User Option emacspeak-speak-messages
     Option indicating if messages are spoken.  If nil, emacspeak will
     not speak messages as they are echoed to the message area.  You can
     use command ‘emacspeak-toggle-speak-messages’ bound to C-e q.

 -- Variable: User Option emacspeak-speak-paragraph-personality
     Personality used to mark start of paragraph.

 -- Variable: User Option emacspeak-speak-time-format-string
     Format string that specifies how the time should be spoken.  See
     the documentation for function ‘format-time-string’

 -- Variable: User Option emacspeak-speak-zoneinfo-directory
     Directory containing timezone data.

 -- Variable: User Option emacspeak-use-header-line
     Use default header line defined by Emacspeak for buffers that dont
     customize the header.

 -- Variable: User Option emacspeak-voicemail-spool-file
     Mail spool file examined to alert you about newly arrived
     voicemail.

 -- Variable: User Option emacspeak-word-echo
     If t, then emacspeak echoes words as you type.  You can use C-e d w
     to toggle this option.


File: emacspeak.info,  Node: emacspeak-speedbar,  Next: emacspeak-sql,  Prev: emacspeak-speak,  Up: Emacspeak Commands And Options

12.173 emacspeak-speedbar
=========================

This module advises speedbar.el for use with Emacs.  The latest speedbar
can be obtained from ftp://ftp.ultranet.com/pub/zappo/ This module
ensures that speedbar works smoothly outside a windowing system in
addition to speech enabling all interactive commands.  Emacspeak also
adds an Emacspeak environment specific entry point to speedbar
–emacspeak-speedbar-goto-speedbar– and binds this

12.173.1 emacspeak-speedbar Commands
------------------------------------

12.173.1.1 emacspeak-speedbar-click
...................................

 -- Command: emacspeak-speedbar-click

     Does the equivalent of the mouse click from the keyboard

12.173.1.2 emacspeak-speedbar-goto-speedbar
...........................................

 -- Command: emacspeak-speedbar-goto-speedbar

     Switch to the speedbar

12.173.2 emacspeak-speedbar Options
-----------------------------------

 -- Variable: User Option emacspeak-speedbar-button-personality
     personality used for speedbar buttons

 -- Variable: User Option emacspeak-speedbar-default-personality
     Default personality used in speedbar buffers

 -- Variable: User Option emacspeak-speedbar-directory-personality
     Speedbar personality for directory buttons

 -- Variable: User Option emacspeak-speedbar-file-personality
     Personality used for file buttons

 -- Variable: User Option emacspeak-speedbar-highlight-personality
     Personality used for for speedbar highlight.

 -- Variable: User Option emacspeak-speedbar-selected-personality
     Personality used to indicate speedbar selection

 -- Variable: User Option emacspeak-speedbar-tag-personality
     Personality used for speedbar tags


File: emacspeak.info,  Node: emacspeak-sql,  Next: emacspeak-sudoku,  Prev: emacspeak-speedbar,  Up: Emacspeak Commands And Options

12.174 emacspeak-sql
====================

This module speech enables sql-mode– available from
http://paddington.ic.uva.nl/public/sql-modes.zip sql-mode.el implemented
by the above package sets up an Emacs to SQL interface where you can
interactively evaluate SQL expressions.


File: emacspeak.info,  Node: emacspeak-sudoku,  Next: emacspeak-supercite,  Prev: emacspeak-sql,  Up: Emacspeak Commands And Options

12.175 emacspeak-sudoku
=======================

Playing SuDoku using speech output.  Written to discover what type of
feedback one needs for this task.  See
http://emacspeak.blogspot.com/2006/02/playing-sudoku-using-auditory-feedback.html

12.175.1 emacspeak-sudoku Commands
----------------------------------

12.175.1.1 emacspeak-sudoku-board-columns-summarize
...................................................

 -- Command: emacspeak-sudoku-board-columns-summarize

     Summarize columns — speaks number of remaining cells.

12.175.1.2 emacspeak-sudoku-board-distribution-summarize
........................................................

 -- Command: emacspeak-sudoku-board-distribution-summarize

     Shows distribution of filled numbers.

12.175.1.3 emacspeak-sudoku-board-rows-summarize
................................................

 -- Command: emacspeak-sudoku-board-rows-summarize

     Summarize rows — speaks number of remaining cells.

12.175.1.4 emacspeak-sudoku-board-sub-squares-summarize
.......................................................

 -- Command: emacspeak-sudoku-board-sub-squares-summarize

     Summarize sub-squares — speaks number of remaining cells.

12.175.1.5 emacspeak-sudoku-board-summarizer
............................................

 -- Command: emacspeak-sudoku-board-summarizer

     Dispatch to  appropriate summarizer.

     d   Number Distribution
     r   Row Distribution
     c   Column Distribution
     s   Sub-square Distribution.


12.175.1.6 emacspeak-sudoku-down-sub-square
...........................................

 -- Command: emacspeak-sudoku-down-sub-square

     Move to top-left corner of  sub-square below current one.

12.175.1.7 emacspeak-sudoku-erase-current-column
................................................

 -- Command: emacspeak-sudoku-erase-current-column

     Erase current column.

12.175.1.8 emacspeak-sudoku-erase-current-row
.............................................

 -- Command: emacspeak-sudoku-erase-current-row

     Erase current row.

12.175.1.9 emacspeak-sudoku-erase-current-sub-square
....................................................

 -- Command: emacspeak-sudoku-erase-current-sub-square

     Erase current sub-square.

12.175.1.10 emacspeak-sudoku-hint
.................................

 -- Command: emacspeak-sudoku-hint

     Provide hint for current cell.

12.175.1.11 emacspeak-sudoku-history-pop
........................................

 -- Command: emacspeak-sudoku-history-pop

     Pop saved state off stack and redraw board.

12.175.1.12 emacspeak-sudoku-history-push
.........................................

 -- Command: emacspeak-sudoku-history-push

     Push current state on to history stack.

12.175.1.13 emacspeak-sudoku-how-many-remaining
...............................................

 -- Command: emacspeak-sudoku-how-many-remaining

     Speak number of remaining squares to fill.

12.175.1.14 emacspeak-sudoku-next-sub-square
............................................

 -- Command: emacspeak-sudoku-next-sub-square

     Move to top-left corner of next sub-square.

12.175.1.15 emacspeak-sudoku-previous-sub-square
................................................

 -- Command: emacspeak-sudoku-previous-sub-square

     Move to top-left corner of previous sub-square.

12.175.1.16 emacspeak-sudoku-speak-current-cell-coordinates
...........................................................

 -- Command: emacspeak-sudoku-speak-current-cell-coordinates

     speak current cell coordinates.

12.175.1.17 emacspeak-sudoku-speak-current-cell-value
.....................................................

 -- Command: emacspeak-sudoku-speak-current-cell-value

     Speak value in current cell.

12.175.1.18 emacspeak-sudoku-speak-current-column
.................................................

 -- Command: emacspeak-sudoku-speak-current-column

     Speak current column.

12.175.1.19 emacspeak-sudoku-speak-current-row
..............................................

 -- Command: emacspeak-sudoku-speak-current-row

     Speak current row.

12.175.1.20 emacspeak-sudoku-speak-current-sub-square
.....................................................

 -- Command: emacspeak-sudoku-speak-current-sub-square

     Speak current sub-square.

12.175.1.21 emacspeak-sudoku-speak-remaining-in-column
......................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-column

     Speaks number of remaining cells in current column.

12.175.1.22 emacspeak-sudoku-speak-remaining-in-row
...................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-row

     Speaks number of remaining cells in current row.

12.175.1.23 emacspeak-sudoku-speak-remaining-in-sub-square
..........................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-sub-square

     Speaks number of remaining cells in current sub-square.

12.175.1.24 emacspeak-sudoku-up-sub-square
..........................................

 -- Command: emacspeak-sudoku-up-sub-square

     Move to top-left corner of  sub-square above current one.


File: emacspeak.info,  Node: emacspeak-supercite,  Next: emacspeak-table,  Prev: emacspeak-sudoku,  Up: Emacspeak Commands And Options

12.176 emacspeak-supercite
==========================

Speech-enable supercite.


File: emacspeak.info,  Node: emacspeak-table,  Next: emacspeak-table-ui,  Prev: emacspeak-supercite,  Up: Emacspeak Commands And Options

12.177 emacspeak-table
======================

Implements a module that provides a high level interface to tabulated
information.


File: emacspeak.info,  Node: emacspeak-table-ui,  Next: emacspeak-tabulate,  Prev: emacspeak-table,  Up: Emacspeak Commands And Options

12.178 emacspeak-table-ui
=========================

User interface to tables

12.178.1 emacspeak-table-ui Commands
------------------------------------

12.178.1.1 emacspeak-table-copy-current-element-to-kill-ring
............................................................

 -- Command: emacspeak-table-copy-current-element-to-kill-ring
     ‘C-e C-t w’
     ‘<fn> C-t w’

     Copy current table element to kill ring.

12.178.1.2 emacspeak-table-copy-current-element-to-register
...........................................................

 -- Command: emacspeak-table-copy-current-element-to-register (register)
     ‘C-e C-t x’
     ‘<fn> C-t x’

     Copy current table element to specified register.

     (fn REGISTER)

12.178.1.3 emacspeak-table-copy-to-clipboard
............................................

 -- Command: emacspeak-table-copy-to-clipboard
     ‘C-e C-t k’
     ‘<fn> C-t k’

     Copy table in current buffer to the table clipboard.
     Current buffer must be in emacspeak-table mode.

12.178.1.4 emacspeak-table-display-table-in-region
..................................................

 -- Command: emacspeak-table-display-table-in-region (start end)
     ‘C-e M-i’
     ‘<fn> M-i’

     Recognize tabular data in current region and display it in table
     browsing mode in a a separate buffer.
     emacspeak table mode is designed to let you browse tabular data using
     all the power of the two-dimensional spatial layout while giving you
     sufficient contextual information.  The tables subdirectory of the
     emacspeak distribution contains some sample tables –these are the
     CalTrain schedules.  Execute command ‘describe-mode’ bound to
     C-h m in a buffer that is in emacspeak table mode to read
     the documentation on the table browser.

     (fn START END)

12.178.1.5 emacspeak-table-find-csv-file
........................................

 -- Command: emacspeak-table-find-csv-file (filename)
     ‘C-e C-t ,’
     ‘<fn> C-t ,’

     Process a csv (comma separated values) file.
     The processed  data is presented using emacspeak table navigation.

     (fn FILENAME)

12.178.1.6 emacspeak-table-find-file
....................................

 -- Command: emacspeak-table-find-file (filename)

     Open a file containing table data and display it in table mode.
     emacspeak table mode is designed to let you browse tabular data using
     all the power of the two-dimensional spatial layout while giving you
     sufficient contextual information.  The etc/tables subdirectory of the
     emacspeak distribution contains some sample tables –these are the
     CalTrain schedules.  Execute command ‘describe-mode’ bound to
     C-h m in a buffer that is in emacspeak table mode to read
     the documentation on the table browser.

     (fn FILENAME)

12.178.1.7 emacspeak-table-goto
...............................

 -- Command: emacspeak-table-goto (row column)
     ‘C-e C-t j’
     ‘<fn> C-t j’

     Prompt for a table cell coordinates and jump to it.

     (fn ROW COLUMN)

12.178.1.8 emacspeak-table-goto-bottom
......................................

 -- Command: emacspeak-table-goto-bottom
     ‘C-e C-t B’
     ‘<fn> C-t B’
     ‘C-e C-t M->’
     ‘<fn> C-t M->’

     Goes to the bottom of the current column.

12.178.1.9 emacspeak-table-goto-left
....................................

 -- Command: emacspeak-table-goto-left
     ‘C-e C-t A’
     ‘C-e C-t <’
     ‘<fn> C-t A’
     ‘<fn> C-t <’

     Goes to the left of the current row.

12.178.1.10 emacspeak-table-goto-right
......................................

 -- Command: emacspeak-table-goto-right
     ‘C-e C-t E’
     ‘C-e C-t >’
     ‘<fn> C-t E’
     ‘<fn> C-t >’

     Goes to the right of the current row.

12.178.1.11 emacspeak-table-goto-top
....................................

 -- Command: emacspeak-table-goto-top
     ‘C-e C-t T’
     ‘<fn> C-t T’
     ‘C-e C-t M-<’
     ‘<fn> C-t M-<’

     Goes to the top of the current column.

12.178.1.12 emacspeak-table-mode
................................

 -- Command: emacspeak-table-mode

     Major mode for browsing tables.
     Table mode is designed to allow speech users to browse tabular data
     with full contextual feedback while retaining all the power of the
     two-dimensional spatial layout of tables.

     In table mode, the arrow keys move between cells of the table.
     Emacspeak speaks the cell contents in a user-customizable way.  The
     visual display is kept in sync with the speech you hear; however
     Emacspeak is examining the entire table in order to speak the current
     cell content intelligently.

     You can interactively specify that emacspeak should speak either the row or
     column header (or both) while speaking each cell.  You can also specify a row
     or column filter that should be applied when speaking entire rows or columns
     –this lets you view slices of a table.  You can move to a specific row or
     column by searching the cell contents or by searching the row or column
     headers to locate items of interest.

     Here is a short description of the special commands provided in this mode.

     The next four commands help you move to the edges of the table:

     E               emacspeak-table-goto-right
     A               emacspeak-table-goto-left
     B               emacspeak-table-goto-bottom
     T               emacspeak-table-goto-top

     The next two commands let you search the table.
     The commands ask you if you want to search rows or columns.
     When searching headers remember that row 0 is the column header, and that column 0 is the row header.

     h               emacspeak-table-search-headers
     s               emacspeak-table-search

     The next command lets you specify how cell contents should be spoken.  Specify
     one of: ‘b’ for both, ‘c’ for column, ‘r’ for row, ‘f’ for row filtering and
     ‘g’ for column filtering. –table cells with then be spoken with both (or
     either)row and column headers, or with the filter applied.

     a               emacspeak-table-select-automatic-speaking-method

     The next set of commands speak the current table cell:

     .               emacspeak-table-speak-coordinates
     b               emacspeak-table-speak-both-headers-and-element
     SPC             emacspeak-table-speak-current-element
     c               emacspeak-table-speak-column-header-and-element
     r               e macspeak-table-speak-row-header-and-element

     The next set of commands navigate the table:

     right               emacspeak-table-next-column
     left               emacspeak-table-previous-column
     down               emacspeak-table-next-row
     up               emacspeak-table-previous-row
     j               emacspeak-table-goto
     S-tab               emacspeak-table-previous-column
     TAB               emacspeak-table-next-column

     Row and Column Filtering

     Filtering is designed to let you view slices of a table.
     They are specified as lists of numbers and strings.
     The concept is best explained with an example.

     A row filter specifies which of the entries in the current row should be
     spoken.Entries are numbered starting with 0.  Thus, when working with a table
     having 8 columns, a row filter of (1 2 3) will speak only entries 1 2 and 3.
     Use the sample tables in etc/tables   to familiarize yourself with this
     feature. Note that you can intersperse meaningful strings in the list that
     specifies the filter.

     Full List Of Keybindings:
     key             binding
     —             ——-

     C-b		emacspeak-table-previous-column
     C-f		emacspeak-table-next-column
     TAB		emacspeak-table-next-column
     C-n		emacspeak-table-next-row
     C-p		emacspeak-table-previous-row
     ESC		Prefix Command
     SPC		emacspeak-table-speak-current-element
     #		emacspeak-table-sort-on-current-column
     ,		emacspeak-table-find-csv-file
     .		emacspeak-table-speak-coordinates
     <		emacspeak-table-goto-left
     =		emacspeak-table-speak-dimensions
     >		emacspeak-table-goto-right
     A		emacspeak-table-goto-left
     B		emacspeak-table-goto-bottom
     C		emacspeak-table-search-column
     E		emacspeak-table-goto-right
     Q		emacspeak-kill-buffer-quietly
     R		emacspeak-table-search-row
     T		emacspeak-table-goto-top
     a		emacspeak-table-select-automatic-speaking-method
     b		emacspeak-table-speak-both-headers-and-element
     c		emacspeak-table-speak-column-header-and-element
     f		emacspeak-table-speak-row-filtered
     g		emacspeak-table-speak-column-filtered
     h		emacspeak-table-search-headers
     j		emacspeak-table-goto
     k		emacspeak-table-copy-to-clipboard
     n		emacspeak-table-next-row
     p		emacspeak-table-previous-row
     q		quit-window
     r		emacspeak-table-speak-row-header-and-element
     s		emacspeak-table-search
     v		emacspeak-table-view-csv-buffer
     w		emacspeak-table-copy-current-element-to-kill-ring
     x		emacspeak-table-copy-current-element-to-register
     <S-tab>		emacspeak-table-previous-column
     <down>		emacspeak-table-next-row
     <left>		emacspeak-table-previous-column
     <right>		emacspeak-table-next-column
     <up>		emacspeak-table-previous-row

     M-<		emacspeak-table-goto-top
     M->		emacspeak-table-goto-bottom
     M-l		emacspeak-table-ui-filter-load
     M-s		emacspeak-table-ui-filter-save

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘emacspeak-table-mode-hook’, as the final or penultimate step
     during initialization.

12.178.1.13 emacspeak-table-next-column
.......................................

 -- Command: emacspeak-table-next-column (&optional count)
     ‘C-e C-t TAB’
     ‘C-e C-t C-f’
     ‘C-e C-t <right>’
     ‘<fn> C-t TAB’
     ‘<fn> C-t C-f’
     ‘<fn> C-t <right>’

     Move to the next column if possible

     (fn &optional COUNT)

12.178.1.14 emacspeak-table-next-row
....................................

 -- Command: emacspeak-table-next-row (&optional count)
     ‘C-e C-t n’
     ‘C-e C-t C-n’
     ‘C-e C-t <down>’
     ‘<fn> C-t n’
     ‘<fn> C-t C-n’
     ‘<fn> C-t <down>’

     Move to the next row if possible

     (fn &optional COUNT)

12.178.1.15 emacspeak-table-paste-from-clipboard
................................................

 -- Command: emacspeak-table-paste-from-clipboard

     Paste the emacspeak table clipboard into the current buffer.
     Use the major  mode of this buffer to  decide what kind of table
     markup to use.

12.178.1.16 emacspeak-table-previous-column
...........................................

 -- Command: emacspeak-table-previous-column (&optional count)
     ‘C-e C-t C-b’
     ‘C-e C-t <left>’
     ‘C-e C-t <S-tab>’
     ‘<fn> C-t C-b’
     ‘<fn> C-t <left>’
     ‘<fn> C-t <S-tab>’

     Move to the previous column  if possible

     (fn &optional COUNT)

12.178.1.17 emacspeak-table-previous-row
........................................

 -- Command: emacspeak-table-previous-row (&optional count)
     ‘C-e C-t p’
     ‘C-e C-t C-p’
     ‘C-e C-t <up>’
     ‘<fn> C-t p’
     ‘<fn> C-t C-p’
     ‘<fn> C-t <up>’

     Move to the previous row if possible

     (fn &optional COUNT)

12.178.1.18 emacspeak-table-search
..................................

 -- Command: emacspeak-table-search (&optional what)
     ‘C-e C-t s’
     ‘<fn> C-t s’

     Search the table for matching elements.  Interactively prompts for
     row or column to search and pattern to look for.    If there is a match, makes
     the matching cell current. When called from a program, ‘what’ can
       be either ‘row’ or ‘column’.

     (fn &optional WHAT)

12.178.1.19 emacspeak-table-search-column
.........................................

 -- Command: emacspeak-table-search-column
     ‘C-e C-t C’
     ‘<fn> C-t C’

     Search in current table column.

12.178.1.20 emacspeak-table-search-headers
..........................................

 -- Command: emacspeak-table-search-headers
     ‘C-e C-t h’
     ‘<fn> C-t h’

     Search the table row or column headers.  Interactively prompts for
     row or column to search and pattern to look for.  If there is a
     match, makes the matching row or column current.

12.178.1.21 emacspeak-table-search-row
......................................

 -- Command: emacspeak-table-search-row
     ‘C-e C-t R’
     ‘<fn> C-t R’

     Search in current table row.

12.178.1.22 emacspeak-table-select-automatic-speaking-method
............................................................

 -- Command: emacspeak-table-select-automatic-speaking-method
     ‘C-e C-t a’
     ‘<fn> C-t a’

     Interactively select the kind of automatic speech to produce when
     browsing table elements

12.178.1.23 emacspeak-table-sort-on-current-column
..................................................

 -- Command: emacspeak-table-sort-on-current-column
     ‘C-e C-t #’
     ‘<fn> C-t #’

     Sort table on current column.

12.178.1.24 emacspeak-table-speak-both-headers-and-element
..........................................................

 -- Command: emacspeak-table-speak-both-headers-and-element
     ‘C-e C-t b’
     ‘<fn> C-t b’

     Speak  both row and column header and table element

12.178.1.25 emacspeak-table-speak-column-filtered
.................................................

 -- Command: emacspeak-table-speak-column-filtered (&optional prefix)
     ‘C-e C-t g’
     ‘<fn> C-t g’

     Speaks a table column after applying a specified column filter.
     Optional prefix arg prompts for a new filter.

     (fn &optional PREFIX)

12.178.1.26 emacspeak-table-speak-column-header-and-element
...........................................................

 -- Command: emacspeak-table-speak-column-header-and-element
     ‘C-e C-t c’
     ‘<fn> C-t c’

     Speak  column header and table element

12.178.1.27 emacspeak-table-speak-coordinates
.............................................

 -- Command: emacspeak-table-speak-coordinates
     ‘C-e C-t .’
     ‘<fn> C-t .’

     Speak current table coordinates.

12.178.1.28 emacspeak-table-speak-current-element
.................................................

 -- Command: emacspeak-table-speak-current-element
     ‘C-e C-t SPC’
     ‘<fn> C-t SPC’

     Speak current table element

12.178.1.29 emacspeak-table-speak-dimensions
............................................

 -- Command: emacspeak-table-speak-dimensions
     ‘C-e C-t =’
     ‘<fn> C-t =’

     Speak current table dimensions.

12.178.1.30 emacspeak-table-speak-row-filtered
..............................................

 -- Command: emacspeak-table-speak-row-filtered (&optional prefix)
     ‘C-e C-t f’
     ‘<fn> C-t f’

     Speaks a table row after applying a specified row filter.
     Optional prefix arg prompts for a new filter.

     (fn &optional PREFIX)

12.178.1.31 emacspeak-table-speak-row-header-and-element
........................................................

 -- Command: emacspeak-table-speak-row-header-and-element
     ‘C-e C-t r’
     ‘<fn> C-t r’

     Speak  row header and table element

12.178.1.32 emacspeak-table-ui-filter-load
..........................................

 -- Command: emacspeak-table-ui-filter-load (file)
     ‘C-e C-t M-l’
     ‘<fn> C-t M-l’

     Load saved filter settings.

     (fn FILE)

12.178.1.33 emacspeak-table-ui-filter-save
..........................................

 -- Command: emacspeak-table-ui-filter-save (file)
     ‘C-e C-t M-s’
     ‘<fn> C-t M-s’

     Save out filter settings.

     (fn FILE)

12.178.1.34 emacspeak-table-view-csv-buffer
...........................................

 -- Command: emacspeak-table-view-csv-buffer (&optional buffer-name)
     ‘C-e C-t v’
     ‘<fn> C-t v’

     Process a csv (comma separated values) data.
     The processed  data is  presented using emacspeak table navigation.

     (fn &optional BUFFER-NAME)

12.178.1.35 emacspeak-table-view-csv-url
........................................

 -- Command: emacspeak-table-view-csv-url (url &optional buffer-name)

     Process a csv (comma separated values) data at  ‘URL’.
     The processed  data is  presented using emacspeak table navigation.

     (fn URL &optional BUFFER-NAME)


File: emacspeak.info,  Node: emacspeak-tabulate,  Next: emacspeak-tapestry,  Prev: emacspeak-table-ui,  Up: Emacspeak Commands And Options

12.179 emacspeak-tabulate
=========================

This module is a simple table recognizer.  Can recognize the columns in
tabulated output, e.g.  ps, ls output

12.179.1 emacspeak-tabulate Commands
------------------------------------

12.179.1.1 emacspeak-tabulate-region
....................................

 -- Command: emacspeak-tabulate-region (start end &optional mark-fields)
     ‘C-e i’
     ‘<fn> i’

     Voicifies the white-space of a table if one found.  Optional interactive prefix
     arg mark-fields specifies if the header row information is used to mark fields
     in the white-space.

     (fn START END &optional MARK-FIELDS)


File: emacspeak.info,  Node: emacspeak-tapestry,  Next: emacspeak-tar,  Prev: emacspeak-tabulate,  Up: Emacspeak Commands And Options

12.180 emacspeak-tapestry
=========================

emacspeak extensions to speak window widnow layouts

12.180.1 emacspeak-tapestry Commands
------------------------------------

12.180.1.1 emacspeak-speak-window-layout
........................................

 -- Command: emacspeak-speak-window-layout (&optional details)

     Describe the current layout of visible buffers in current frame.
     Use interactive prefix arg to get coordinate positions of the
     displayed buffers.

     (fn &optional DETAILS)

12.180.1.2 emacspeak-tapestry-describe-tapestry
...............................................

 -- Command: emacspeak-tapestry-describe-tapestry (&optional details)
     ‘C-e M-t’
     ‘<fn> M-t’

     Describe the current layout of visible buffers in current frame.
     Use interactive prefix arg to get coordinate positions of the
     displayed buffers.

     (fn &optional DETAILS)

12.180.1.3 emacspeak-tapestry-select-window-by-name
...................................................

 -- Command: emacspeak-tapestry-select-window-by-name (buffer-name)
     ‘C-e W’
     ‘<fn> W’

     Select window by the name of the buffer it displays.
     This is useful when using modes like ECB or the new GDB UI where
       you want to preserve the window layout
     but quickly switch to a window by name.

     (fn BUFFER-NAME)


File: emacspeak.info,  Node: emacspeak-tar,  Next: emacspeak-tcl,  Prev: emacspeak-tapestry,  Up: Emacspeak Commands And Options

12.181 emacspeak-tar
====================

Auditory interface to tar mode

12.181.1 emacspeak-tar Commands
-------------------------------

12.181.1.1 emacspeak-tar-speak-file-date
........................................

 -- Command: emacspeak-tar-speak-file-date

     Speak date of file current entry

12.181.1.2 emacspeak-tar-speak-file-permissions
...............................................

 -- Command: emacspeak-tar-speak-file-permissions

     Speak permissions of file current entry

12.181.1.3 emacspeak-tar-speak-file-size
........................................

 -- Command: emacspeak-tar-speak-file-size

     Speak size of file current entry


File: emacspeak.info,  Node: emacspeak-tcl,  Next: emacspeak-tdtd,  Prev: emacspeak-tar,  Up: Emacspeak Commands And Options

12.182 emacspeak-tcl
====================

Provide additional advice to tcl-mode


File: emacspeak.info,  Node: emacspeak-tdtd,  Next: emacspeak-tempo,  Prev: emacspeak-tcl,  Up: Emacspeak Commands And Options

12.183 emacspeak-tdtd
=====================

tdtd is an emacs package for authoring and maintaining XML and SGML DTDs
tdtd is at http://www.mulberrytech.com/tdtd/index.html this module
speech-enables tdtd


File: emacspeak.info,  Node: emacspeak-tempo,  Next: emacspeak-tetris,  Prev: emacspeak-tdtd,  Up: Emacspeak Commands And Options

12.184 emacspeak-tempo
======================

tempo.el provides the infrastructure for building up templates.  This is
used by html-helper-mode to allow for easy writing of HTML This module
extends Emacspeak to provide fluent spoken feedback


File: emacspeak.info,  Node: emacspeak-tetris,  Next: emacspeak-texinfo,  Prev: emacspeak-tempo,  Up: Emacspeak Commands And Options

12.185 emacspeak-tetris
=======================

Speech-enables tetris.

12.185.1 emacspeak-tetris Commands
----------------------------------

12.185.1.1 emacspeak-tetris-goto-bottom-row
...........................................

 -- Command: emacspeak-tetris-goto-bottom-row

     Move to and speak bottom row

12.185.1.2 emacspeak-tetris-goto-top-row
........................................

 -- Command: emacspeak-tetris-goto-top-row

     Move to and speak the top row

12.185.1.3 emacspeak-tetris-speak-column
........................................

 -- Command: emacspeak-tetris-speak-column (&optional x)

     Speak  column –default is to speak current column

     (fn &optional X)

12.185.1.4 emacspeak-tetris-speak-coordinates
.............................................

 -- Command: emacspeak-tetris-speak-coordinates

     Speak current position

12.185.1.5 emacspeak-tetris-speak-current-shape
...............................................

 -- Command: emacspeak-tetris-speak-current-shape

     Speak current shape

12.185.1.6 emacspeak-tetris-speak-current-shape-and-coordinates
...............................................................

 -- Command: emacspeak-tetris-speak-current-shape-and-coordinates

     Speak shape orientation and coordinates

12.185.1.7 emacspeak-tetris-speak-next-shape
............................................

 -- Command: emacspeak-tetris-speak-next-shape

     Speak next shape

12.185.1.8 emacspeak-tetris-speak-row
.....................................

 -- Command: emacspeak-tetris-speak-row

     Speak current tetris row

12.185.1.9 emacspeak-tetris-speak-row-number
............................................

 -- Command: emacspeak-tetris-speak-row-number

     Speak where on the tetris board we are

12.185.1.10 emacspeak-tetris-speak-score
........................................

 -- Command: emacspeak-tetris-speak-score

     Speak the score

12.185.1.11 emacspeak-tetris-speak-x-coordinate
...............................................

 -- Command: emacspeak-tetris-speak-x-coordinate

     Speak current position


File: emacspeak.info,  Node: emacspeak-texinfo,  Next: emacspeak-threes,  Prev: emacspeak-tetris,  Up: Emacspeak Commands And Options

12.186 emacspeak-texinfo
========================

This module speech enables net-texinfo mode


File: emacspeak.info,  Node: emacspeak-threes,  Next: emacspeak-tide,  Prev: emacspeak-texinfo,  Up: Emacspeak Commands And Options

12.187 emacspeak-threes
=======================

THREES == threes game.  This module speech-enable the game.
<https://en.wikipedia.org/wiki/Threes> for history of the game and
details of game play.  This module adds additional convenience
keybindings to the default arrow-key bindings implemented in threes.el.
In addition, this module implements commands that speak the board as
well as getting a column-specific view of the board.

‘f’
     Move right
‘b’
     Move left
‘n’
     Move down
‘p’
     Move up
‘SPC’
     Speak the board
‘/’
     Speak board by column.
‘.’
     Speak current score.
‘s’
     Save current state
‘u’
     Pop state from stack
‘?’
     Speak next tile
   The updated board is spoken after each turn.  The next upcoming tile
is spoken after the current state of the board.  You can use ‘SPC’ and
‘/’ to review the board.

12.187.1 emacspeak-threes Commands
----------------------------------

12.187.1.1 emacspeak-threes-1
.............................

 -- Command: emacspeak-threes-1

     Set next tile.

12.187.1.2 emacspeak-threes-2
.............................

 -- Command: emacspeak-threes-2

     Set next tile.

12.187.1.3 emacspeak-threes-3
.............................

 -- Command: emacspeak-threes-3

     Set next tile.

12.187.1.4 emacspeak-threes-export
..................................

 -- Command: emacspeak-threes-export (&optional prompt)

     Exports game stack to a file.
     Optional interactive prefix arg prompts for a file.
     Note that the file is overwritten silently.

     (fn &optional PROMPT)

12.187.1.5 emacspeak-threes-import
..................................

 -- Command: emacspeak-threes-import (&optional prompt)

     Import game.
     Optional interactive prefix arg prompts for a filename.

     (fn &optional PROMPT)

12.187.1.6 emacspeak-threes-pop-state
.....................................

 -- Command: emacspeak-threes-pop-state

     Reset state from stack.

12.187.1.7 emacspeak-threes-prune-stack
.......................................

 -- Command: emacspeak-threes-prune-stack (drop)

     Prune game stack to specified length.

     (fn DROP)

12.187.1.8 emacspeak-threes-push-state
......................................

 -- Command: emacspeak-threes-push-state

     Push current game state on stack.

12.187.1.9 emacspeak-threes-score
.................................

 -- Command: emacspeak-threes-score

     Speak the score.

12.187.1.10 emacspeak-threes-speak-board
........................................

 -- Command: emacspeak-threes-speak-board

     Speak the board.

12.187.1.11 emacspeak-threes-speak-next
.......................................

 -- Command: emacspeak-threes-speak-next

     Speak upcoming tile.

12.187.1.12 emacspeak-threes-speak-transposed-board
...................................................

 -- Command: emacspeak-threes-speak-transposed-board

     Speak the board by columns.


File: emacspeak.info,  Node: emacspeak-tide,  Next: emacspeak-todo-mode,  Prev: emacspeak-threes,  Up: Emacspeak Commands And Options

12.188 emacspeak-tide
=====================

TIDE == Typescript IDE for emacs.  This module speech-enables both tide
and typescript-mode.


File: emacspeak.info,  Node: emacspeak-todo-mode,  Next: emacspeak-twittering,  Prev: emacspeak-tide,  Up: Emacspeak Commands And Options

12.189 emacspeak-todo-mode
==========================

todo-mode (part of Emacs 21) provides todo-lists that can be integrated
with the Emacs calendar.  This module speech-enables todo-mode


File: emacspeak.info,  Node: emacspeak-twittering,  Next: emacspeak-typo,  Prev: emacspeak-todo-mode,  Up: Emacspeak Commands And Options

12.190 emacspeak-twittering
===========================

module twittering-mode.el is found on the emacs wiki This module
speech-enables twittering-mode which works using oauth for
authentication.  Note: As of Thu Sep 2 08:11:25 PDT 2010 twit.el is
broken.

   Advises interactive functions to speak

12.190.1 emacspeak-twittering Commands
--------------------------------------

12.190.1.1 emacspeak-twittering-jump-to-following-url
.....................................................

 -- Command: emacspeak-twittering-jump-to-following-url

     Move to and open closest URI  following point.

12.190.1.2 emacspeak-twittering-speak-this-tweet
................................................

 -- Command: emacspeak-twittering-speak-this-tweet (&optional
          copy-as-kill)

     Speak tweet under point.
     With interactive prefix arg ‘copy-as-kill’, copy it to kill ring as well.

     (fn &optional COPY-AS-KILL)


File: emacspeak.info,  Node: emacspeak-typo,  Next: emacspeak-url-template,  Prev: emacspeak-twittering,  Up: Emacspeak Commands And Options

12.191 emacspeak-typo
=====================

TYPO == Typographical Editing This module speech-enables typo-mode.
Typo-mode’s magic insertion commands are speech-enabled to speak the
inserted char.


File: emacspeak.info,  Node: emacspeak-url-template,  Next: emacspeak-vdiff,  Prev: emacspeak-typo,  Up: Emacspeak Commands And Options

12.192 emacspeak-url-template
=============================

It is often useful to have “parametrized hot list entries” i.e., hotlist
entries that are “templates” for the actual URL. The user provides
values for the parametrized portions of the URL e.g.  the date.  See
*Note URL Templates::, for details on the URL templates that are
presently defined.

12.192.1 emacspeak-url-template Commands
----------------------------------------

12.192.1.1 emacspeak-url-template-fetch
.......................................

 -- Command: emacspeak-url-template-fetch (&optional documentation)
     ‘C-e u’
     ‘C-; u’
     ‘<fn> u’
     ‘C-x @ h u’

     Fetch a pre-defined resource.
     Use Emacs completion to obtain a list of available resources.
     Resources typically prompt for the relevant information
     before completing the request.
     Optional interactive prefix arg displays documentation for specified resource.

     (fn &optional DOCUMENTATION)

12.192.1.2 emacspeak-url-template-help
......................................

 -- Command: emacspeak-url-template-help

     Display documentation for a URL template.
     Use Emacs completion to obtain a list of available
     resources.

12.192.1.3 emacspeak-url-template-load
......................................

 -- Command: emacspeak-url-template-load (file)

     Load URL template resources from specified location.

     (fn FILE)

12.192.1.4 emacspeak-url-template-nls-add-to-wishlist
.....................................................

 -- Command: emacspeak-url-template-nls-add-to-wishlist (book)

     Add book under point to wishlist.

     (fn BOOK)

12.192.1.5 emacspeak-url-template-save
......................................

 -- Command: emacspeak-url-template-save (file)

     Save out url templates.

     (fn FILE)


File: emacspeak.info,  Node: emacspeak-vdiff,  Next: emacspeak-view,  Prev: emacspeak-url-template,  Up: Emacspeak Commands And Options

12.193 emacspeak-vdiff
======================

VDIFF == vimdiff Installable from melpa, vdiff enables synchronized
movement through diff buffers without resorting to an extra
control-panel as is the case with ediff.  In addition to speech-enabling
interactive commands and setting up face->voice mappings, this module
provides commands that speak the current hunk.  These are bound in
‘vdiff-mode-prefix-map’.
   • ‘emacspeak-vdiff-speak-this-hunk’ bound to ‘SPC’.
   • ‘emacspeak-vdiff-speak-other-hunk’ bound to ‘C-SPC’.
   • ‘emacspeak-vdiff-speak-other-line’ bound to ‘l’.

12.193.1 emacspeak-vdiff Commands
---------------------------------

12.193.1.1 emacspeak-vdiff-speak-other-hunk
...........................................

 -- Command: emacspeak-vdiff-speak-other-hunk

     Speak corresponding hunk from other buffer.

12.193.1.2 emacspeak-vdiff-speak-other-line
...........................................

 -- Command: emacspeak-vdiff-speak-other-line

     Speak corresponding line from other buffer.

12.193.1.3 emacspeak-vdiff-speak-this-hunk
..........................................

 -- Command: emacspeak-vdiff-speak-this-hunk

     Speak VDiff hunk under point.


File: emacspeak.info,  Node: emacspeak-view,  Next: emacspeak-vlc,  Prev: emacspeak-vdiff,  Up: Emacspeak Commands And Options

12.194 emacspeak-view
=====================

Provide additional advice to view-mode

12.194.1 emacspeak-view Commands
--------------------------------

12.194.1.1 emacspeak-view-line-to-top
.....................................

 -- Command: emacspeak-view-line-to-top

     Moves current line to top of window


File: emacspeak.info,  Node: emacspeak-vlc,  Next: emacspeak-vm,  Prev: emacspeak-view,  Up: Emacspeak Commands And Options

12.195 emacspeak-vlc
====================

An Emacspeak Front-End For VLC Interaction.

12.195.1 emacspeak-vlc Commands
-------------------------------

12.195.1.1 emacspeak-vlc
........................

 -- Command: emacspeak-vlc
     ‘C-. '’
     ‘C-' '’
     ‘C-x @ s '’

     Start or control Emacspeak VLC player.

     Uses current context to prompt for media to play.
     Controls media playback when already playing a stream.

     key             binding
     —             ——-

     SPC		emacspeak-vlc-pause
     ’		emacspeak-vlc-pop-to-player
     +		emacspeak-vlc-volume-up
     ,		emacspeak-vlc-backward-10s
     -		emacspeak-vlc-volume-down
     .		emacspeak-vlc-forward-10s
     <		emacspeak-vlc-backward-1min
     =		emacspeak-vlc-volume-up
     >		emacspeak-vlc-forward-1min
     G		emacspeak-vlc-seek-percentage
     Q		emacspeak-vlc-quit
     [		emacspeak-vlc-slower
     ]		emacspeak-vlc-faster
     g		emacspeak-vlc-seek-absolute
     k		emacspeak-vlc-quit
     n		emacspeak-vlc-next-track
     p		emacspeak-vlc-previous-track
     q		bury-buffer
     r		emacspeak-vlc-seek-relative
     s		emacspeak-vlc-scale-speed
     t		emacspeak-vlc-play-tracks-jump
     v		emacspeak-vlc-volume-change
     {		emacspeak-vlc-half-speed
     }		emacspeak-vlc-double-speed
     DEL		emacspeak-vlc-reset-speed
     <down>		emacspeak-vlc-forward-1min
     <end>		emacspeak-vlc-end-of-track
     <home>		emacspeak-vlc-beginning-of-track
     <left>		emacspeak-vlc-backward-10s
     <next>		emacspeak-vlc-forward-10min
     <prior>		emacspeak-vlc-backward-10min
     <right>		emacspeak-vlc-forward-10s
     <up>		emacspeak-vlc-backward-1min

     .

12.195.1.2 emacspeak-vlc-command
................................

 -- Command: emacspeak-vlc-command (key)

     Invoke VLC commands.

     (fn KEY)

12.195.1.3 emacspeak-vlc-mode
.............................

 -- Command: emacspeak-vlc-mode

     Major mode for vlc interaction.

     key             binding
     —             ——-

     SPC		emacspeak-vlc-pause
     ’		emacspeak-vlc-pop-to-player
     +		emacspeak-vlc-volume-up
     ,		emacspeak-vlc-backward-10s
     -		emacspeak-vlc-volume-down
     .		emacspeak-vlc-forward-10s
     <		emacspeak-vlc-backward-1min
     =		emacspeak-vlc-volume-up
     >		emacspeak-vlc-forward-1min
     G		emacspeak-vlc-seek-percentage
     Q		emacspeak-vlc-quit
     [		emacspeak-vlc-slower
     ]		emacspeak-vlc-faster
     g		emacspeak-vlc-seek-absolute
     k		emacspeak-vlc-quit
     n		emacspeak-vlc-next-track
     p		emacspeak-vlc-previous-track
     q		bury-buffer
     r		emacspeak-vlc-seek-relative
     s		emacspeak-vlc-scale-speed
     t		emacspeak-vlc-play-tracks-jump
     v		emacspeak-vlc-volume-change
     {		emacspeak-vlc-half-speed
     }		emacspeak-vlc-double-speed
     DEL		emacspeak-vlc-reset-speed
     <down>		emacspeak-vlc-forward-1min
     <end>		emacspeak-vlc-end-of-track
     <home>		emacspeak-vlc-beginning-of-track
     <left>		emacspeak-vlc-backward-10s
     <next>		emacspeak-vlc-forward-10min
     <prior>		emacspeak-vlc-backward-10min
     <right>		emacspeak-vlc-forward-10s
     <up>		emacspeak-vlc-backward-1min

     In addition to any hooks its parent mode ‘comint-mode’ might have run,
     this mode runs the hook ‘emacspeak-vlc-mode-hook’, as the final or penultimate step
     during initialization.

12.195.1.4 emacspeak-vlc-player
...............................

 -- Command: emacspeak-vlc-player (resource)

     Play specified resource using vlc.
     Resource is a media resource or playlist containing media resources.
     The player is placed in a buffer in emacspeak-vlc-mode.

     (fn RESOURCE)

12.195.1.5 emacspeak-vlc-pop-to-player
......................................

 -- Command: emacspeak-vlc-pop-to-player

     Pop to vlc buffer.

12.195.1.6 emacspeak-vlc-quit
.............................

 -- Command: emacspeak-vlc-quit

     Quit VLC

12.195.1.7 emacspeak-vlc-url
............................

 -- Command: emacspeak-vlc-url (url)

     Call emacspeak-vlc with specified URL.

     (fn URL)

12.195.2 emacspeak-vlc Options
------------------------------

 -- Variable: User Option emacspeak-vlc-options
     Options passed to VLC.

 -- Variable: User Option emacspeak-vlc-program
     VLC player program.


File: emacspeak.info,  Node: emacspeak-vm,  Next: emacspeak-wdired,  Prev: emacspeak-vlc,  Up: Emacspeak Commands And Options

12.196 emacspeak-vm
===================

This module extends the mail reader vm.  Uses voice locking for message
headers and cited messages

12.196.1 emacspeak-vm Commands
------------------------------

12.196.1.1 emacspeak-vm-browse-message
......................................

 -- Command: emacspeak-vm-browse-message

     Browse an email message –read it paragraph at a time.

12.196.1.2 emacspeak-vm-catch-up-all-messages
.............................................

 -- Command: emacspeak-vm-catch-up-all-messages

     Mark all messages in folder to be deleted. Use with caution.

12.196.1.3 emacspeak-vm-locate-subject-line
...........................................

 -- Command: emacspeak-vm-locate-subject-line

     Locates the subject line in a message being read.
     Useful when you’re reading a message
     that has been forwarded multiple times.

12.196.1.4 emacspeak-vm-mode-line
.................................

 -- Command: emacspeak-vm-mode-line

     VM mode line information.

12.196.1.5 emacspeak-vm-speak-labels
....................................

 -- Command: emacspeak-vm-speak-labels

     Speak a message’s labels

12.196.1.6 emacspeak-vm-speak-message
.....................................

 -- Command: emacspeak-vm-speak-message

     Move point to the message body.

12.196.1.7 emacspeak-vm-toggle-html-mime-demotion
.................................................

 -- Command: emacspeak-vm-toggle-html-mime-demotion

     Toggle state of HTML Mime Demotion.

12.196.1.8 emacspeak-vm-yank-header
...................................

 -- Command: emacspeak-vm-yank-header

     Yank specified header into kill ring.

12.196.2 emacspeak-vm Options
-----------------------------

 -- Variable: User Option emacspeak-vm-cal2text
     Executable that converts calendar invitations on standard input to
     plain text.

 -- Variable: User Option emacspeak-vm-customize-mime-settings
     Non-nil will cause Emacspeak to configure VM mime settings to match
     what the author of Emacspeak uses.

 -- Variable: User Option emacspeak-vm-doc2text
     Executable that converts MSWord documents on standard input to
     plain text using wvText.

 -- Variable: User Option emacspeak-vm-headers-strip-octals
     Specify whether non-ascii chars should be stripped when speaking
     email headers.

 -- Variable: User Option emacspeak-vm-pdf2text
     Executable that converts PDF on standard input to plain text using
     pdftotext.

 -- Variable: User Option emacspeak-vm-ppt2html
     Executable that converts MSPPT documents on standard input to HTML
     using xlhtml.

 -- Variable: User Option emacspeak-vm-use-raman-settings
     Should VM use the customizations used by the author of Emacspeak.

 -- Variable: User Option emacspeak-vm-voice-loc
     Set this to T if you want messages automatically voice locked.
     Note that some badly formed mime messages cause trouble.

 -- Variable: User Option emacspeak-vm-xls2html
     Executable that converts MSXL documents on standard input to HTML
     using xlhtml.


File: emacspeak.info,  Node: emacspeak-wdired,  Next: emacspeak-we,  Prev: emacspeak-vm,  Up: Emacspeak Commands And Options

12.197 emacspeak-wdired
=======================

Speech-enable wdired to permit in-place renaming of groups of files.


File: emacspeak.info,  Node: emacspeak-we,  Next: emacspeak-websearch,  Prev: emacspeak-wdired,  Up: Emacspeak Commands And Options

12.198 emacspeak-we
===================

we is for webedit Invoke XSLT to edit/transform Web pages before they
get rendered.  we makes emacspeak’s webedit layer independent of a given
Emacs web browser EWW This module will use the abstraction provided by
browse-url to handle Web pages.  Module emacspeak-webutils provides the
needed additional abstractions not already covered by browse-url

12.198.1 emacspeak-we Commands
------------------------------

12.198.1.1 emacspeak-we-class-filter-and-follow
...............................................

 -- Command: emacspeak-we-class-filter-and-follow (class url &optional
          prompt)
     ‘C-e x e y’
     ‘<fn> x e y’

     Follow url and point, and filter the result by specified class.
     Class can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn CLASS URL &optional PROMPT)

12.198.1.2 emacspeak-we-class-filter-and-follow-link
....................................................

 -- Command: emacspeak-we-class-filter-and-follow-link (&optional
          prompt)
     ‘C-e x e v’
     ‘<fn> x e v’

     Follow url and point, and filter the result by specified class.
     Class can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.198.1.3 emacspeak-we-count-matches
.....................................

 -- Command: emacspeak-we-count-matches (url locator)
     ‘C-e x e C-f’
     ‘<fn> x e C-f’

     Count matches for locator  in Web page.

     (fn URL LOCATOR)

12.198.1.4 emacspeak-we-count-nested-tables
...........................................

 -- Command: emacspeak-we-count-nested-tables (url)
     ‘C-e x e C-x’
     ‘<fn> x e C-x’

     Count nested tables in Web page.

     (fn URL)

12.198.1.5 emacspeak-we-count-tables
....................................

 -- Command: emacspeak-we-count-tables (url)
     ‘C-e x e C-t’
     ‘<fn> x e C-t’

     Count  tables in Web page.

     (fn URL)

12.198.1.6 emacspeak-we-extract-by-class
........................................

 -- Command: emacspeak-we-extract-by-class (class url &optional speak)
     ‘C-e x e c’
     ‘<fn> x e c’

     Extract elements having specified class attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of class values as completion.

     (fn CLASS URL &optional SPEAK)

12.198.1.7 emacspeak-we-extract-by-class-list
.............................................

 -- Command: emacspeak-we-extract-by-class-list (classes url &optional
          speak)
     ‘C-e x e C’
     ‘<fn> x e C’

     Extract elements having class specified in list ‘classes’ from HTML.
     Extracts specified elements from current WWW page and displays it
     in a separate buffer.  Interactive use provides list of class
     values as completion.

     (fn CLASSES URL &optional SPEAK)

12.198.1.8 emacspeak-we-extract-by-id
.....................................

 -- Command: emacspeak-we-extract-by-id (id url &optional speak)
     ‘C-e x e i’
     ‘<fn> x e i’

     Extract elements having specified id attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer.
     Interactive use provides list of id values as completion.

     (fn ID URL &optional SPEAK)

12.198.1.9 emacspeak-we-extract-by-id-list
..........................................

 -- Command: emacspeak-we-extract-by-id-list (ids url &optional speak)
     ‘C-e x e I’
     ‘<fn> x e I’

     Extract elements having id specified in list ‘ids’ from HTML.
     Extracts specified elements from current WWW page and displays it in a
     separate buffer. Interactive use provides list of id values as completion.

     (fn IDS URL &optional SPEAK)

12.198.1.10 emacspeak-we-extract-by-role
........................................

 -- Command: emacspeak-we-extract-by-role (role url &optional speak)
     ‘C-e x e r’
     ‘<fn> x e r’

     Extract elements having specified role attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of role values as completion.

     (fn ROLE URL &optional SPEAK)

12.198.1.11 emacspeak-we-extract-id-list-text
.............................................

 -- Command: emacspeak-we-extract-id-list-text (ids url &optional speak)

     Extract text nodes from elements having id specified in list ‘ids’ from HTML.
     Extracts specified elements from current WWW page and displays it in a
     separate buffer. Interactive use provides list of id values as completion.

     (fn IDS URL &optional SPEAK)

12.198.1.12 emacspeak-we-extract-id-text
........................................

 -- Command: emacspeak-we-extract-id-text (id url &optional speak)

     Extract text nodes from elements having specified id attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer.
     Interactive use provides list of id values as completion.

     (fn ID URL &optional SPEAK)

12.198.1.13 emacspeak-we-extract-matching-urls
..............................................

 -- Command: emacspeak-we-extract-matching-urls (pattern url &optional
          speak)
     ‘C-e x e u’
     ‘<fn> x e u’

     Extracts links whose URL matches pattern.

     (fn PATTERN URL &optional SPEAK)

12.198.1.14 emacspeak-we-extract-media-streams
..............................................

 -- Command: emacspeak-we-extract-media-streams (url &optional speak)

     Extract links to media streams.
     operate on current web page when in a browser buffer; otherwise
      prompt for url.  Optional arg ‘speak’ specifies if the result
      should be spoken automatically.

     (fn URL &optional SPEAK)

12.198.1.15 emacspeak-we-extract-media-streams-under-point
..........................................................

 -- Command: emacspeak-we-extract-media-streams-under-point

     In browser buffers, extract media streams from url under point.

12.198.1.16 emacspeak-we-extract-nested-table
.............................................

 -- Command: emacspeak-we-extract-nested-table (index url &optional
          speak)
     ‘C-e x e x’
     ‘<fn> x e x’

     Extract nested table specified by ‘table-index’. Default is to
     operate on current web page when in a browser buffer; otherwise
     prompt for URL. Optional arg ‘speak’ specifies if the result should be
     spoken automatically.

     (fn INDEX URL &optional SPEAK)

12.198.1.17 emacspeak-we-extract-nested-table-list
..................................................

 -- Command: emacspeak-we-extract-nested-table-list (tables url
          &optional speak)
     ‘C-e x e X’
     ‘<fn> x e X’

     Extract specified list of tables from a Web page.

     (fn TABLES URL &optional SPEAK)

12.198.1.18 emacspeak-we-extract-print-streams
..............................................

 -- Command: emacspeak-we-extract-print-streams (url &optional speak)

     Extract links to printable  streams.
     operate on current web page when in a browser buffer; otherwise
      prompt for url.  Optional arg ‘speak’ specifies if the result
      should be spoken automatically.

     (fn URL &optional SPEAK)

12.198.1.19 emacspeak-we-extract-table-by-match
...............................................

 -- Command: emacspeak-we-extract-table-by-match (match url &optional
          speak)
     ‘C-e x e m’
     ‘<fn> x e m’

     Extract table containing  specified match.
      Optional arg url specifies the page to extract content from.

     (fn MATCH URL &optional SPEAK)

12.198.1.20 emacspeak-we-extract-table-by-position
..................................................

 -- Command: emacspeak-we-extract-table-by-position (pos url &optional
          speak)
     ‘C-e x e t’
     ‘<fn> x e t’

     Extract table at specified pos.
     Default is to extract from current page.

     (fn POS URL &optional SPEAK)

12.198.1.21 emacspeak-we-extract-tables-by-match-list
.....................................................

 -- Command: emacspeak-we-extract-tables-by-match-list (match-list url
          &optional speak)
     ‘C-e x e M’
     ‘<fn> x e M’

     Extract specified  tables from a WWW page.
     Tables are specified by containing  match pattern
      found in the match list.

     (fn MATCH-LIST URL &optional SPEAK)

12.198.1.22 emacspeak-we-extract-tables-by-position-list
........................................................

 -- Command: emacspeak-we-extract-tables-by-position-list (positions url
          &optional speak)
     ‘C-e x e T’
     ‘<fn> x e T’

     Extract specified list of nested tables from a WWW page.
     Tables are specified by their position in the list
      of nested tables found in the page.

     (fn POSITIONS URL &optional SPEAK)

12.198.1.23 emacspeak-we-follow-and-extract-main
................................................

 -- Command: emacspeak-we-follow-and-extract-main (&optional speak)
     ‘C-e x e P’
     ‘<fn> x e P’

     Follow URL, then extract role=main.

     (fn &optional SPEAK)

12.198.1.24 emacspeak-we-follow-and-filter-by-id
................................................

 -- Command: emacspeak-we-follow-and-filter-by-id (id prompt)
     ‘C-e x e b’
     ‘<fn> x e b’

     Follow url and point, and filter the result by specified id.
     Id can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn ID PROMPT)

12.198.1.25 emacspeak-we-junk-by-class
......................................

 -- Command: emacspeak-we-junk-by-class (class url &optional speak)
     ‘C-e x e d’
     ‘<fn> x e d’

     Extract elements not having specified class attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of class values as completion.

     (fn CLASS URL &optional SPEAK)

12.198.1.26 emacspeak-we-junk-by-class-list
...........................................

 -- Command: emacspeak-we-junk-by-class-list (classes url &optional
          speak)
     ‘C-e x e D’
     ‘C-e x e C-c’
     ‘<fn> x e D’
     ‘<fn> x e C-c’

     Extract elements not having class specified in list ‘classes’ from HTML.
     Extracts specified elements from current WWW page and displays it
     in a separate buffer.  Interactive use provides list of class
     values as completion.

     (fn CLASSES URL &optional SPEAK)

12.198.1.27 emacspeak-we-style-filter
.....................................

 -- Command: emacspeak-we-style-filter (style url &optional speak)
     ‘C-e x e S’
     ‘<fn> x e S’

     Extract elements matching specified style
     from HTML.  Extracts specified elements from current WWW
     page and displays it in a separate buffer.  Optional arg url
     specifies the page to extract contents  from.

     (fn STYLE URL &optional SPEAK)

12.198.1.28 emacspeak-we-toggle-xsl-keep-result
...............................................

 -- Command: emacspeak-we-toggle-xsl-keep-result
     ‘C-e x e k’
     ‘<fn> x e k’

     Toggle xsl keep result flag.

12.198.1.29 emacspeak-we-url-expand-and-execute
...............................................

 -- Command: emacspeak-we-url-expand-and-execute (&optional prefix)
     ‘C-e x e e’
     ‘<fn> x e e’

     Applies buffer-specific URL expander/executor function.

     (fn &optional PREFIX)

12.198.1.30 emacspeak-we-url-rewrite-and-follow
...............................................

 -- Command: emacspeak-we-url-rewrite-and-follow (&optional prompt)

     Apply a url rewrite rule as specified in the current buffer
     before following link under point.  If no rewrite rule is
     defined, first prompt for one.  Rewrite rules are of the
     form ‘(from to)’ where from and to are strings.  Typically, the
     rewrite rule is automatically set up by Emacspeak tools like
     websearch where a rewrite rule is known.  Rewrite rules are
     useful in jumping directly to the printer friendly version of an
     article for example.  Optional interactive prefix arg prompts for
     a rewrite rule even if one is already defined.

     (fn &optional PROMPT)

12.198.1.31 emacspeak-we-xpath-filter-and-follow
................................................

 -- Command: emacspeak-we-xpath-filter-and-follow (&optional prompt)
     ‘C-e x e p’
     ‘<fn> x e p’

     Follow url and point, and filter the result by specified xpath.
     XPath can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.198.1.32 emacspeak-we-xpath-junk-and-follow
..............................................

 -- Command: emacspeak-we-xpath-junk-and-follow (&optional prompt)
     ‘C-e x e C-p’
     ‘<fn> x e C-p’

     Follow url and point, and filter the result by junking
     elements specified by xpath.
     XPath can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.198.1.33 emacspeak-we-xsl-toggle
...................................

 -- Command: emacspeak-we-xsl-toggle
     ‘C-e x e o’
     ‘<fn> x e o’

     Toggle  application of XSL transformations.

12.198.1.34 emacspeak-we-xslt-apply
...................................

 -- Command: emacspeak-we-xslt-apply (xsl)
     ‘C-e x e a’
     ‘<fn> x e a’

     Apply specified transformation to current Web page.

     (fn XSL)

12.198.1.35 emacspeak-we-xslt-filter
....................................

 -- Command: emacspeak-we-xslt-filter (path url &optional speak)
     ‘C-e x e f’
     ‘<fn> x e f’

     Extract elements matching specified XPath path locator
     from Web page – default is the current page being viewed.

     (fn PATH URL &optional SPEAK)

12.198.1.36 emacspeak-we-xslt-junk
..................................

 -- Command: emacspeak-we-xslt-junk (path url &optional speak)
     ‘C-e x e j’
     ‘<fn> x e j’

     Junk elements matching specified locator.

     (fn PATH URL &optional SPEAK)

12.198.1.37 emacspeak-we-xslt-select
....................................

 -- Command: emacspeak-we-xslt-select (xsl)
     ‘C-e x e s’
     ‘<fn> x e s’

     Select XSL transformation applied to Web pages before they are displayed .

     (fn XSL)

12.198.2 emacspeak-we Options
-----------------------------

 -- Variable: User Option emacspeak-we-cleanup-bogus-quotes
     Clean up bogus Unicode chars for magic quotes.

 -- Variable: User Option emacspeak-we-filters-rename-buffer
     Set to T if you want the buffer name to contain the applied filter.

 -- Variable: User Option emacspeak-we-media-stream-suffixes
     Suffixes that identify URLs to media streams.

 -- Variable: User Option emacspeak-we-xsl-p
     T means we apply XSL before displaying HTML.

 -- Variable: User Option emacspeak-we-xsl-transform
     Specifies transform to use before displaying a page.  Default is to
     apply sort-tables.


File: emacspeak.info,  Node: emacspeak-websearch,  Next: emacspeak-webspace,  Prev: emacspeak-we,  Up: Emacspeak Commands And Options

12.199 emacspeak-websearch
==========================

This module provides utility functions for searching the WWW

12.199.1 emacspeak-websearch Commands
-------------------------------------

12.199.1.1 emacspeak-websearch-accessible-google
................................................

 -- Command: emacspeak-websearch-accessible-google (query &optional
          options)

     Use Google Lite (Experimental).
     Optional prefix arg prompts for toolbelt options.

     (fn QUERY &optional OPTIONS)

12.199.1.2 emacspeak-websearch-amazon-search
............................................

 -- Command: emacspeak-websearch-amazon-search

     Amazon search.

12.199.1.3 emacspeak-websearch-ask-jeeves
.........................................

 -- Command: emacspeak-websearch-ask-jeeves (query)

     Ask Jeeves for the answer.

     (fn QUERY)

12.199.1.4 emacspeak-websearch-biblio-search
............................................

 -- Command: emacspeak-websearch-biblio-search (query)

     Search Computer Science Bibliographies.

     (fn QUERY)

12.199.1.5 emacspeak-websearch-citeseer-search
..............................................

 -- Command: emacspeak-websearch-citeseer-search (term)

     Perform a CiteSeer search.

     (fn TERM)

12.199.1.6 emacspeak-websearch-company-news
...........................................

 -- Command: emacspeak-websearch-company-news (ticker &optional prefix)

     Perform an company news lookup.
     Retrieves company news, research, profile, insider trades,  or upgrades/downgrades.

     (fn TICKER &optional PREFIX)

12.199.1.7 emacspeak-websearch-cpan-search
..........................................

 -- Command: emacspeak-websearch-cpan-search (query)

     Search CPAN  Comprehensive Perl Archive Network   Site.

     (fn QUERY)

12.199.1.8 emacspeak-websearch-ctan-search
..........................................

 -- Command: emacspeak-websearch-ctan-search (query)

     Search CTAN Comprehensive TeX Archive Network   Site.

     (fn QUERY)

12.199.1.9 emacspeak-websearch-dispatch
.......................................

 -- Command: emacspeak-websearch-dispatch
     ‘C-e ?’
     ‘<fn> ?’

      Press ‘?’ to list available search engines.
     When using supported browsers,  this interface attempts to speak the most relevant information on the result page.

12.199.1.10 emacspeak-websearch-exchange-rate-converter
.......................................................

 -- Command: emacspeak-websearch-exchange-rate-converter
          (conversion-spec)

     Currency converter.

     (fn CONVERSION-SPEC)

12.199.1.11 emacspeak-websearch-foldoc-search
.............................................

 -- Command: emacspeak-websearch-foldoc-search (query)

     Perform a FolDoc search.

     (fn QUERY)

12.199.1.12 emacspeak-websearch-google
......................................

 -- Command: emacspeak-websearch-google (query &optional flag)

     Perform a Google search.  First optional interactive prefix arg
     ‘flag’ prompts for additional search options. Second interactive
     prefix arg is equivalent to hitting the I’m Feeling Lucky button on Google.

     (fn QUERY &optional FLAG)

12.199.1.13 emacspeak-websearch-google-category-news
....................................................

 -- Command: emacspeak-websearch-google-category-news

     Browse Google News by category.

12.199.1.14 emacspeak-websearch-google-feeling-lucky
....................................................

 -- Command: emacspeak-websearch-google-feeling-lucky (query)

     Do a I’m Feeling Lucky Google search.

     (fn QUERY)

12.199.1.15 emacspeak-websearch-google-mobile
.............................................

 -- Command: emacspeak-websearch-google-mobile (query &optional flag)

     Perform a Google Mobile search.  First optional interactive prefix arg
     ‘flag’ prompts for additional search options. Second interactive
     prefix arg is equivalent to hitting the I’m Feeling Lucky button on Google.

     (fn QUERY &optional FLAG)

12.199.1.16 emacspeak-websearch-google-news
...........................................

 -- Command: emacspeak-websearch-google-news

     Invoke Google News url template.

12.199.1.17 emacspeak-websearch-google-regional-news
....................................................

 -- Command: emacspeak-websearch-google-regional-news

     Browse Google News by region.

12.199.1.18 emacspeak-websearch-google-search-in-date-range
...........................................................

 -- Command: emacspeak-websearch-google-search-in-date-range

     Use this from inside the calendar to do Google date-range searches.

12.199.1.19 emacspeak-websearch-google-specialize
.................................................

 -- Command: emacspeak-websearch-google-specialize (specialize query)

     Perform a specialized Google search. See the Google site for
       what is possible here:
     https://www.google.com/options/specialsearches.html

     (fn SPECIALIZE QUERY)

12.199.1.20 emacspeak-websearch-google-with-toolbelt
....................................................

 -- Command: emacspeak-websearch-google-with-toolbelt (query)

     Launch Google search with toolbelt.

     (fn QUERY)

12.199.1.21 emacspeak-websearch-gutenberg
.........................................

 -- Command: emacspeak-websearch-gutenberg (type query)

     Perform an Gutenberg search

     (fn TYPE QUERY)

12.199.1.22 emacspeak-websearch-help
....................................

 -- Command: emacspeak-websearch-help

     Displays key mapping used by Emacspeak Websearch.

12.199.1.23 emacspeak-websearch-merriam-webster-search
......................................................

 -- Command: emacspeak-websearch-merriam-webster-search (query)

     Search the Merriam Webster Dictionary.

     (fn QUERY)

12.199.1.24 emacspeak-websearch-news-yahoo
..........................................

 -- Command: emacspeak-websearch-news-yahoo (query &optional rss)

     Perform an Yahoo News search.
     Optional prefix arg  avoids scraping  information from HTML.

     (fn QUERY &optional RSS)

12.199.1.25 emacspeak-websearch-open-directory-search
.....................................................

 -- Command: emacspeak-websearch-open-directory-search (query)

     Perform an Open Directory search

     (fn QUERY)

12.199.1.26 emacspeak-websearch-software-search
...............................................

 -- Command: emacspeak-websearch-software-search

     Search SourceForge, Freshmeat and other sites.

12.199.1.27 emacspeak-websearch-sourceforge-search
..................................................

 -- Command: emacspeak-websearch-sourceforge-search (query)

     Search SourceForge Site.

     (fn QUERY)

12.199.1.28 emacspeak-websearch-weather
.......................................

 -- Command: emacspeak-websearch-weather (query)

     Get weather forecast for specified zip code.

     (fn QUERY)

12.199.1.29 emacspeak-websearch-wikipedia-search
................................................

 -- Command: emacspeak-websearch-wikipedia-search (query)

     Search Wikipedia using Google.

     (fn QUERY)

12.199.1.30 emacspeak-websearch-yahoo
.....................................

 -- Command: emacspeak-websearch-yahoo (query)

     Perform an Yahoo  search

     (fn QUERY)

12.199.1.31 emacspeak-websearch-yahoo-exchange-rate-converter
.............................................................

 -- Command: emacspeak-websearch-yahoo-exchange-rate-converter
          (conversion-spec)

     Currency converter.

     (fn CONVERSION-SPEC)

12.199.1.32 emacspeak-websearch-yahoo-historical-chart
......................................................

 -- Command: emacspeak-websearch-yahoo-historical-chart (ticker
          &optional as-html)

     Look up historical stock data.
     Optional second arg as-html processes the results as HTML rather than data.

     (fn TICKER &optional AS-HTML)

12.199.1.33 emacspeak-websearch-youtube-search
..............................................

 -- Command: emacspeak-websearch-youtube-search (query)

     YouTube search.

     (fn QUERY)

12.199.2 emacspeak-websearch Options
------------------------------------

 -- Variable: User Option emacspeak-websearch-google-number-of-results
     Number of results to return from google search.

 -- Variable: User Option emacspeak-websearch-google-options
     Additional options to pass to Google e.g.  &xx=yy...

 -- Variable: User Option emacspeak-websearch-google-use-https
     Specify whether we use secure connections for Google search.


File: emacspeak.info,  Node: emacspeak-webspace,  Next: emacspeak-webutils,  Prev: emacspeak-websearch,  Up: Emacspeak Commands And Options

12.200 emacspeak-webspace
=========================

WEBSPACE == Smart Web Gadgets For The Emacspeak Desktop

12.200.1 emacspeak-webspace Commands
------------------------------------

12.200.1.1 emacspeak-webspace-feed-reader
.........................................

 -- Command: emacspeak-webspace-feed-reader (&optional refresh)
     ‘C-. R’
     ‘C-' R’
     ‘C-x @ s R’

     Display Feed Reader Feed list in a WebSpace buffer.
     Optional interactive prefix arg forces a refresh.

     (fn &optional REFRESH)

12.200.1.2 emacspeak-webspace-filter
....................................

 -- Command: emacspeak-webspace-filter

     Open headline at point by following its link property and filter for content.

12.200.1.3 emacspeak-webspace-headlines
.......................................

 -- Command: emacspeak-webspace-headlines
     ‘C-; SPC h’
     ‘C-x @ h SPC h’

     Startup Headlines ticker using RSS/Atom  feeds.

12.200.1.4 emacspeak-webspace-headlines-browse
..............................................

 -- Command: emacspeak-webspace-headlines-browse
     ‘C-; SPC SPC’
     ‘C-x @ h SPC SPC’

     Display buffer of browsable headlines.

12.200.1.5 emacspeak-webspace-headlines-update
..............................................

 -- Command: emacspeak-webspace-headlines-update

     Setup news updates.
     Updated headlines found in emacspeak-webspace-headlines.

12.200.1.6 emacspeak-webspace-knowledge-search
..............................................

 -- Command: emacspeak-webspace-knowledge-search (query &optional limit)
     ‘C-; k’
     ‘C-x @ h k’

     Perform a Google Knowledge Graph search.
     Optional interactive prefix arg ‘limit’ prompts for number of results, default is 1.

     (fn QUERY &optional LIMIT)

12.200.1.7 emacspeak-webspace-mode
..................................

 -- Command: emacspeak-webspace-mode

     Major mode for Webspace interaction.

     key             binding
     —             ——-

     TAB		forward-button
     ESC		Prefix Command
     ’		emacspeak-speak-rest-of-buffer
     .		emacspeak-webspace-filter
     /		search-forward
     <		beginning-of-buffer
     >		end-of-buffer
     ?		search-backward
     b		backward-button
     f		forward-button
     n		forward-button
     p		backward-button
     q		bury-buffer
     y		emacspeak-webspace-yank-link
     <backtab>	backward-button

     C-M-i		backward-button

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘emacspeak-webspace-mode-hook’, as the final or penultimate step
     during initialization.

12.200.1.8 emacspeak-webspace-open
..................................

 -- Command: emacspeak-webspace-open

     Open headline at point by following its link property.

12.200.1.9 emacspeak-webspace-transcode
.......................................

 -- Command: emacspeak-webspace-transcode

     Transcode headline at point by following its link property.

12.200.1.10 emacspeak-webspace-yank-link
........................................

 -- Command: emacspeak-webspace-yank-link

     Yank link under point into kill ring.

12.200.2 emacspeak-webspace Options
-----------------------------------

 -- Variable: User Option emacspeak-webspace-kg-key
     API Key for Google Knowledge Graph.


File: emacspeak.info,  Node: emacspeak-webutils,  Next: emacspeak-widget,  Prev: emacspeak-webspace,  Up: Emacspeak Commands And Options

12.201 emacspeak-webutils
=========================

This module provides common Web utilities for emacspeak.  This is to
avoid duplication of code in web support libraries

12.201.1 emacspeak-webutils Commands
------------------------------------

12.201.1.1 emacspeak-webutils-curl-play-media-at-point
......................................................

 -- Command: emacspeak-webutils-curl-play-media-at-point

     Use Curl to pull a URL, then pass
     the first line to MPlayer as a playlist.
     Useful in handling double-redirect from TuneIn.

12.201.1.2 emacspeak-webutils-google-extract-from-cache
.......................................................

 -- Command: emacspeak-webutils-google-extract-from-cache (&optional
          prefix)

     Extract current  page from the Google cache.
     With a prefix argument, extracts url under point.

     (fn &optional PREFIX)

12.201.1.3 emacspeak-webutils-google-on-this-site
.................................................

 -- Command: emacspeak-webutils-google-on-this-site

     Perform a google search restricted to the current WWW site.

12.201.1.4 emacspeak-webutils-google-similar-to-this-page
.........................................................

 -- Command: emacspeak-webutils-google-similar-to-this-page (url)

     Ask Google to find documents similar to this one.

     (fn URL)

12.201.1.5 emacspeak-webutils-google-who-links-to-this-page
...........................................................

 -- Command: emacspeak-webutils-google-who-links-to-this-page

     Perform a google search to locate documents that link to the
     current page.

12.201.1.6 emacspeak-webutils-jump-to-title-in-content
......................................................

 -- Command: emacspeak-webutils-jump-to-title-in-content

     Jumps to the title in web document.
     The first time it is called, it jumps to the first
     instance  of the title.  Repeated calls jump to further
     instances.

12.201.1.7 emacspeak-webutils-play-media-at-point
.................................................

 -- Command: emacspeak-webutils-play-media-at-point (&optional
          playlist-p)
     ‘C-e M-;’
     ‘<fn> M-;’

     Play media url under point.
     Optional interactive prefix arg ‘playlist-p’ says to treat the link as a playlist.
      A second interactive prefix arg adds mplayer option -allow-dangerous-playlist-parsing

     (fn &optional PLAYLIST-P)

12.201.1.8 emacspeak-webutils-transcode-current-url-via-google
..............................................................

 -- Command: emacspeak-webutils-transcode-current-url-via-google
          (&optional untranscode)

     Transcode current URL via Google.
       Reverse effect with prefix arg.

     (fn &optional UNTRANSCODE)

12.201.1.9 emacspeak-webutils-transcode-via-google
..................................................

 -- Command: emacspeak-webutils-transcode-via-google (&optional
          untranscode)

     Transcode URL under point via Google.
      Reverse effect with prefix arg for links on a transcoded page.

     (fn &optional UNTRANSCODE)

12.201.2 emacspeak-webutils Options
-----------------------------------

 -- Variable: User Option emacspeak-webutils-charent-alist
     Entities to unescape when treating badly escaped XML.


File: emacspeak.info,  Node: emacspeak-widget,  Next: emacspeak-windmove,  Prev: emacspeak-webutils,  Up: Emacspeak Commands And Options

12.202 emacspeak-widget
=======================

This module implements the necessary extensions to provide talking
widgets.

12.202.1 emacspeak-widget Commands
----------------------------------

12.202.1.1 emacspeak-widget-browse-widget-interactively
.......................................................

 -- Command: emacspeak-widget-browse-widget-interactively

     Allows you to browse a widget

12.202.1.2 emacspeak-widget-help
................................

 -- Command: emacspeak-widget-help

     Speak help for widget under point.

12.202.1.3 emacspeak-widget-summarize-parent
............................................

 -- Command: emacspeak-widget-summarize-parent

     Summarize parent of widget at point.

12.202.1.4 emacspeak-widget-summarize-widget-under-point
........................................................

 -- Command: emacspeak-widget-summarize-widget-under-point (&optional
          level)

     Summarize a widget if any under point.
     Optional interactive prefix specifies how many levels to go up from current
     widget before summarizing.

     (fn &optional LEVEL)

12.202.1.5 emacspeak-widget-update-from-minibuffer
..................................................

 -- Command: emacspeak-widget-update-from-minibuffer (pos)

     Sets widget at ‘pos’ by invoking its prompter.

     (fn POS)


File: emacspeak.info,  Node: emacspeak-windmove,  Next: emacspeak-winring,  Prev: emacspeak-widget,  Up: Emacspeak Commands And Options

12.203 emacspeak-windmove
=========================

Package windmove (bundled with Emacs 21) provides commands for
navigating to windows based on relative position.


File: emacspeak.info,  Node: emacspeak-winring,  Next: emacspeak-wizards,  Prev: emacspeak-windmove,  Up: Emacspeak Commands And Options

12.204 emacspeak-winring
========================

window configurations in emacs are very useful you can display the same
file in different windows, and have different portions of the file
displayed.  winring allows you to manage window configurations, and this
module speech-enables it.


File: emacspeak.info,  Node: emacspeak-wizards,  Next: emacspeak-woman,  Prev: emacspeak-winring,  Up: Emacspeak Commands And Options

12.205 emacspeak-wizards
========================

Contains various wizards for the Emacspeak desktop.

12.205.1 emacspeak-wizards Commands
-----------------------------------

12.205.1.1 emacspeak-annotate-add-annotation
............................................

 -- Command: emacspeak-annotate-add-annotation (&optional reset)

     Add annotation to the annotation working buffer.
     Prompt for annotation buffer if not already set.
     Interactive prefix arg ‘reset’ prompts for the annotation
     buffer even if one is already set.
     Annotation is entered in a temporary buffer and the
     annotation is inserted into the working buffer when complete.

     (fn &optional RESET)

12.205.1.2 emacspeak-clipboard-copy
...................................

 -- Command: emacspeak-clipboard-copy (start end &optional prompt)
     ‘C-e C-c’
     ‘<fn> C-c’

     Copy contents of the region to the emacspeak clipboard. Previous
     contents of the clipboard will be overwritten. The Emacspeak clipboard
     is a convenient way of sharing information between independent
     Emacspeak sessions running on the same or different machines. Do not
     use this for sharing information within an Emacs session –Emacs’
     register commands are far more efficient and light-weight. Optional
     interactive prefix arg results in Emacspeak prompting for the
     clipboard file to use. Argument START and END specifies
     region. Optional argument PROMPT specifies whether we prompt for the
     name of a clipboard file.

     (fn START END &optional PROMPT)

12.205.1.3 emacspeak-clipboard-paste
....................................

 -- Command: emacspeak-clipboard-paste (&optional paste-table)
     ‘C-e C-y’
     ‘<fn> C-y’

     Yank contents of the Emacspeak clipboard at point.
     The Emacspeak clipboard is a convenient way of sharing information between
     independent Emacspeak sessions running on the same or different
     machines.  Do not use this for sharing information within an Emacs
     session –Emacs’ register commands are far more efficient and
     light-weight.  Optional interactive prefix arg pastes from
     the emacspeak table clipboard instead.

     (fn &optional PASTE-TABLE)

12.205.1.4 emacspeak-copy-current-file
......................................

 -- Command: emacspeak-copy-current-file
     ‘C-e M-c’
     ‘<fn> M-c’

     Copy file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when copying.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Asks for confirmation if the copy will result in an
       existing file being overwritten.

12.205.1.5 emacspeak-curl
.........................

 -- Command: emacspeak-curl (url)

     Grab URL using Curl, and preview it with a browser .

     (fn URL)

12.205.1.6 emacspeak-customize
..............................

 -- Command: emacspeak-customize
     ‘C-e C’
     ‘<fn> C’

     Customize Emacspeak.

12.205.1.7 emacspeak-emergency-tts-restart
..........................................

 -- Command: emacspeak-emergency-tts-restart
     ‘C-e <insert>’
     ‘<fn> <insert>’
     ‘C-e x s’
     ‘<fn> x s’

     For use in an emergency.
     Will start TTS engine specified by
     emacspeak-emergency-tts-server.

12.205.1.8 emacspeak-frame-label-or-switch-to-labelled-frame
............................................................

 -- Command: emacspeak-frame-label-or-switch-to-labelled-frame
          (&optional prefix)
     ‘C-e M-f’
     ‘<fn> M-f’

     Switch to labelled frame.
     With optional PREFIX argument, label current frame.

     (fn &optional PREFIX)

12.205.1.9 emacspeak-kill-buffer-quietly
........................................

 -- Command: emacspeak-kill-buffer-quietly
     ‘C-e C-t Q’
     ‘<fn> C-t Q’

     Kill current buffer without asking for confirmation.

12.205.1.10 emacspeak-learn-emacs-mode
......................................

 -- Command: emacspeak-learn-emacs-mode
     ‘C-e <f1>’
     ‘C-h C-l’
     ‘<fn> <f1>’
     ‘<f1> C-l’
     ‘<help> C-l’

     Helps you learn the keys.  You can press keys and hear what they do.
     To leave, press C-g.

12.205.1.11 emacspeak-link-current-file
.......................................

 -- Command: emacspeak-link-current-file
     ‘C-e M-l’
     ‘<fn> M-l’

     Link (hard link) file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when linking.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Signals an error if target already exists.

12.205.1.12 emacspeak-links
...........................

 -- Command: emacspeak-links (url)

     Launch links on  specified URL in a new terminal.

     (fn URL)

12.205.1.13 emacspeak-lynx
..........................

 -- Command: emacspeak-lynx (url)

     Launch lynx on  specified URL in a new terminal.

     (fn URL)

12.205.1.14 emacspeak-next-frame-or-buffer
..........................................

 -- Command: emacspeak-next-frame-or-buffer (&optional frame)
     ‘<C-right>’

     Move to next buffer.
     With optional interactive prefix arg ‘frame’, move to next frame instead.

     (fn &optional FRAME)

12.205.1.15 emacspeak-previous-frame-or-buffer
..............................................

 -- Command: emacspeak-previous-frame-or-buffer (&optional frame)
     ‘<C-left>’

     Move to previous buffer.
     With optional interactive prefix arg ‘frame’, move to previous frame instead.

     (fn &optional FRAME)

12.205.1.16 emacspeak-select-this-buffer-next-display
.....................................................

 -- Command: emacspeak-select-this-buffer-next-display
     ‘C-e <C-<right>’
     ‘<fn> <C-<right>’

     Select this buffer as displayed in a ‘next’ frame.
     See documentation for command
     ‘emacspeak-select-this-buffer-other-window-display’ for the
     meaning of ‘next’.

12.205.1.17 emacspeak-select-this-buffer-other-window-display
.............................................................

 -- Command: emacspeak-select-this-buffer-other-window-display
          (&optional arg)

     Switch  to this buffer as displayed in a different frame.  Emacs
     allows you to display the same buffer in multiple windows or
     frames.  These different windows can display different
     portions of the buffer.  This is equivalent to leaving a
     book open at multiple places at once.  This command allows you to
     move to the places where you have left the book open.  The
     number used to invoke this command specifies which of the
     displays you wish to select.  Typically you will have two or
     at most three such displays open.  The current display is 0,
     the next is 1, and so on.  Optional argument ARG specifies
     the display to select.

     (fn &optional ARG)

12.205.1.18 emacspeak-select-this-buffer-previous-display
.........................................................

 -- Command: emacspeak-select-this-buffer-previous-display
     ‘C-e <C-<left>’
     ‘<fn> <C-<left>’

     Select this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-select-this-buffer-other-window-display’ for the
     meaning of ‘previous’.

12.205.1.19 emacspeak-show-personality-at-point
...............................................

 -- Command: emacspeak-show-personality-at-point
     ‘C-e M-v’
     ‘<fn> M-v’

     Show value of property personality (and possibly face) at point.

12.205.1.20 emacspeak-show-property-at-point
............................................

 -- Command: emacspeak-show-property-at-point (&optional property)
     ‘C-e M-p’
     ‘<fn> M-p’

     Show value of PROPERTY at point.
     If optional arg property is not supplied, read it interactively.
     Provides completion based on properties at point.
     If no property is set, show a message and exit.

     (fn &optional PROPERTY)

12.205.1.21 emacspeak-skip-blank-lines-backward
...............................................

 -- Command: emacspeak-skip-blank-lines-backward
     ‘<S-up>’

     Move backward  across blank lines.
     The line under point is   then spoken.
     Signals beginning  of buffer.

12.205.1.22 emacspeak-skip-blank-lines-forward
..............................................

 -- Command: emacspeak-skip-blank-lines-forward
     ‘<S-down>’

     Move forward across blank lines.
     The line under point is then spoken.
     Signals end of buffer.

12.205.1.23 emacspeak-speak-popup-messages
..........................................

 -- Command: emacspeak-speak-popup-messages
     ‘C-h M’
     ‘<f1> M’
     ‘<help> M’

     Pop up messages buffer.
     If it is already selected then hide it and try to restore
     previous window configuration.

12.205.1.24 emacspeak-speak-telephone-directory
...............................................

 -- Command: emacspeak-speak-telephone-directory (&optional edit)
     ‘C-e x t’
     ‘<fn> x t’

     Lookup and display a phone number.
     With prefix arg, opens the phone book for editing.

     (fn &optional EDIT)

12.205.1.25 emacspeak-speak-this-buffer-next-display
....................................................

 -- Command: emacspeak-speak-this-buffer-next-display
     ‘C-e <right>’
     ‘<fn> <right>’

     Speak this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-speak-this-buffer-other-window-display’ for the
     meaning of ‘next’.

12.205.1.26 emacspeak-speak-this-buffer-other-window-display
............................................................

 -- Command: emacspeak-speak-this-buffer-other-window-display (&optional
          arg)
     ‘C-e /’
     ‘<fn> /’

     Speak this buffer as displayed in a different frame.  Emacs
     allows you to display the same buffer in multiple windows or
     frames.  These different windows can display different
     portions of the buffer.  This is equivalent to leaving a
     book open at places at once.  This command allows you to
     listen to the places where you have left the book open.  The
     number used to invoke this command specifies which of the
     displays you wish to speak.  Typically you will have two or
     at most three such displays open.  The current display is 0,
     the next is 1, and so on.  Optional argument ARG specifies
     the display to speak.

     (fn &optional ARG)

12.205.1.27 emacspeak-speak-this-buffer-previous-display
........................................................

 -- Command: emacspeak-speak-this-buffer-previous-display
     ‘C-e <left>’
     ‘<fn> <left>’

     Speak this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-speak-this-buffer-other-window-display’ for the
     meaning of ‘previous’.

12.205.1.28 emacspeak-ssh-tts-restart
.....................................

 -- Command: emacspeak-ssh-tts-restart
     ‘C-e <delete>’
     ‘C-e <(deletechar>’
     ‘<fn> <delete>’
     ‘<fn> <(deletechar>’

     Restart specified ssh tts server.

12.205.1.29 emacspeak-symlink-current-file
..........................................

 -- Command: emacspeak-symlink-current-file
     ‘C-e M-s’
     ‘<fn> M-s’

     Link (symbolic link) file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when linking.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Signals an error if target already exists.

12.205.1.30 emacspeak-view-emacspeak-news
.........................................

 -- Command: emacspeak-view-emacspeak-news
     ‘C-e N’
     ‘<fn> N’

     Display emacspeak News for a given version.

12.205.1.31 emacspeak-view-emacspeak-tips
.........................................

 -- Command: emacspeak-view-emacspeak-tips
     ‘C-e T’
     ‘<fn> T’

     Browse  Emacspeak productivity tips.

12.205.1.32 emacspeak-wizards-add-autoload-cookies
..................................................

 -- Command: emacspeak-wizards-add-autoload-cookies (&optional f)

     Add autoload cookies to file f.
     Default is to add autoload cookies to current file.

     (fn &optional F)

12.205.1.33 emacspeak-wizards-alpha-vantage-quotes
..................................................

 -- Command: emacspeak-wizards-alpha-vantage-quotes (ticker &optional
          custom)

     Retrieve stock quote data from Alpha Vantage. Prompts for ‘ticker’
     — a stock symbol. Optional interactive prefix arg ‘custom’ provides
     access to the various functions provided by alpha-vantage.

     (fn TICKER &optional CUSTOM)

12.205.1.34 emacspeak-wizards-bash-completion-toggle
....................................................

 -- Command: emacspeak-wizards-bash-completion-toggle

     Toggle bash completion from package bash-completion in this shell.

12.205.1.35 emacspeak-wizards-braille
.....................................

 -- Command: emacspeak-wizards-braille (s)

     Insert Braille string at point.

     (fn S)

12.205.1.36 emacspeak-wizards-byte-compile-current-buffer
.........................................................

 -- Command: emacspeak-wizards-byte-compile-current-buffer

     byte compile current buffer

12.205.1.37 emacspeak-wizards-cleanup-shell-path
................................................

 -- Command: emacspeak-wizards-cleanup-shell-path

     Cleans up duplicates in shell path env variable.

12.205.1.38 emacspeak-wizards-color-at-point
............................................

 -- Command: emacspeak-wizards-color-at-point
     ‘C-h ,’
     ‘<f1> ,’
     ‘<help> ,’

     Echo foreground/background color at point.

12.205.1.39 emacspeak-wizards-color-diff-at-point
.................................................

 -- Command: emacspeak-wizards-color-diff-at-point (&optional set)
     ‘C-h \’
     ‘<f1> \’
     ‘<help> \’

     Meaningfully speak difference between background and foreground color at point.
     With interactive prefix arg, set foreground and background color first.

     (fn &optional SET)

12.205.1.40 emacspeak-wizards-color-wheel
.........................................

 -- Command: emacspeak-wizards-color-wheel (start)
     ‘C-e x c’
     ‘<fn> x c’

     Interactively manipulate a simple color wheel and display the name
       and shade of the resulting color.  This makes for a fun color
       exploration tool with verbal descriptions of the colors from package
       name-this-color. Prompts for a color from which to start exploration.

     Keyboard Commands During Interaction:
     Up/Down: Increase/Decrement along current axis using specified step-size.
     =: Set value on current axis to number read from minibuffer.
     Left/Right: Switch color axis along which to move.
     b/f: Quit  wheel after setting background/foreground color to current value.
     n: Read color name from minibuffer.
     c: Complement  current color.
     s: Set stepsize to number read from minibuffer.
     q: Quit color wheel, after copying current hex value to kill-ring.

     (fn START)

12.205.1.41 emacspeak-wizards-colors
....................................

 -- Command: emacspeak-wizards-colors
     ‘C-e x C’
     ‘<fn> x C’

     Display list of colors and setup a callback to activate color
     under point as either the foreground or background color.

12.205.1.42 emacspeak-wizards-comma-at-end-of-word
..................................................

 -- Command: emacspeak-wizards-comma-at-end-of-word

     Move to the end of current word and add a comma.

12.205.1.43 emacspeak-wizards-count-slides-in-region
....................................................

 -- Command: emacspeak-wizards-count-slides-in-region (start end)

     Count slides starting from point.

     (fn START END)

12.205.1.44 emacspeak-wizards-customize-saved
.............................................

 -- Command: emacspeak-wizards-customize-saved (pattern)
     ‘C-h C-s’
     ‘<f1> C-s’
     ‘<help> C-s’

     Customize saved options matching ‘pattern’.  This command enables
     updating custom settings for a specific package or group of packages.

     (fn PATTERN)

12.205.1.45 emacspeak-wizards-cycle-to-next-buffer
..................................................

 -- Command: emacspeak-wizards-cycle-to-next-buffer
     ‘C-, n’
     ‘C-x @ a n’

     Cycles to next buffer having same mode.

12.205.1.46 emacspeak-wizards-cycle-to-previous-buffer
......................................................

 -- Command: emacspeak-wizards-cycle-to-previous-buffer
     ‘C-, p’
     ‘C-x @ a p’

     Cycles to previous buffer having same mode.

12.205.1.47 emacspeak-wizards-display-pod-as-manpage
....................................................

 -- Command: emacspeak-wizards-display-pod-as-manpage (filename)

     Create a virtual manpage in Emacs from the Perl Online Documentation.

     (fn FILENAME)

12.205.1.48 emacspeak-wizards-dvi-display
.........................................

 -- Command: emacspeak-wizards-dvi-display

     Called to set up preview of an DVI file.
     Assumes we are in a buffer visiting a .DVI file.
     Previews those contents as text and nukes the buffer
     visiting the DVI file.

12.205.1.49 emacspeak-wizards-dvi-mode
......................................

 -- Command: emacspeak-wizards-dvi-mode

     Major mode for browsing DVI files.

     DVI files  are converted to text and previewed using text mode.

     This mode runs the hook ‘emacspeak-wizards-dvi-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.205.1.50 emacspeak-wizards-end-of-word
.........................................

 -- Command: emacspeak-wizards-end-of-word (arg)

     move to end of word

     (fn ARG)

12.205.1.51 emacspeak-wizards-enumerate-matching-commands
.........................................................

 -- Command: emacspeak-wizards-enumerate-matching-commands (pattern)

     Return list of commands whose names match pattern.

     (fn PATTERN)

12.205.1.52 emacspeak-wizards-enumerate-matching-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-matching-faces (pattern)

     Enumerate  faces matching pattern.

     (fn PATTERN)

12.205.1.53 emacspeak-wizards-enumerate-obsolete-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-obsolete-faces

     utility function to enumerate old, obsolete maps that we have still
     mapped to voices.

12.205.1.54 emacspeak-wizards-enumerate-uncovered-commands
..........................................................

 -- Command: emacspeak-wizards-enumerate-uncovered-commands (pattern
          &optional bound-only)

     Enumerate unadvised commands matching pattern.
     Optional interactive prefix arg ‘bound-only’
     filters out commands that dont have an active key-binding.

     (fn PATTERN &optional BOUND-ONLY)

12.205.1.55 emacspeak-wizards-enumerate-unmapped-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-unmapped-faces (&optional
          pattern)

     Enumerate unmapped faces matching pattern.

     (fn &optional PATTERN)

12.205.1.56 emacspeak-wizards-espeak-line
.........................................

 -- Command: emacspeak-wizards-espeak-line

     Speak line using espeak polyglot wizard.

12.205.1.57 emacspeak-wizards-espeak-region
...........................................

 -- Command: emacspeak-wizards-espeak-region (start end)

     Speak region using ESpeak polyglot wizard.

     (fn START END)

12.205.1.58 emacspeak-wizards-espeak-string
...........................................

 -- Command: emacspeak-wizards-espeak-string (string)

     Speak string in lang via ESpeak.
     Lang is obtained from property ‘lang’ on string, or  via an interactive prompt.

     (fn STRING)

12.205.1.59 emacspeak-wizards-eww-buffer-list
.............................................

 -- Command: emacspeak-wizards-eww-buffer-list

     Display list of open EWW buffers.

12.205.1.60 emacspeak-wizards-execute-asynchronously
....................................................

 -- Command: emacspeak-wizards-execute-asynchronously (key)
     ‘C-. a’
     ‘C-' a’
     ‘C-x @ s a’

     Read key-sequence, then execute its command on a new thread.

     (fn KEY)

12.205.1.61 emacspeak-wizards-execute-emacspeak-command
.......................................................

 -- Command: emacspeak-wizards-execute-emacspeak-command (command)
     ‘C-e M-x’
     ‘<fn> M-x’

     Prompt for and execute an Emacspeak command.

     (fn COMMAND)

12.205.1.62 emacspeak-wizards-finance-google-search
...................................................

 -- Command: emacspeak-wizards-finance-google-search (ticker)

     Google Finance Search

     (fn TICKER)

12.205.1.63 emacspeak-wizards-find-emacspeak-source
...................................................

 -- Command: emacspeak-wizards-find-emacspeak-source

     Like find-file, but binds default-directory to emacspeak-directory.

12.205.1.64 emacspeak-wizards-find-file-as-root
...............................................

 -- Command: emacspeak-wizards-find-file-as-root (file)

     Like ‘ido-find-file, but automatically edit the file with
     root-privileges (using tramp/sudo), if the file is not writable by
     user.

     (fn FILE)

12.205.1.65 emacspeak-wizards-find-grep
.......................................

 -- Command: emacspeak-wizards-find-grep (glob pattern)

     Run compile using find and grep.
     Interactive  arguments specify filename pattern and search pattern.

     (fn GLOB PATTERN)

12.205.1.66 emacspeak-wizards-find-longest-line-in-region
.........................................................

 -- Command: emacspeak-wizards-find-longest-line-in-region (start end)
     ‘C-e x =’
     ‘<fn> x =’

     Find longest line in region.
     Moves to the longest line when called interactively.

     (fn START END)

12.205.1.67 emacspeak-wizards-find-longest-paragraph-in-region
..............................................................

 -- Command: emacspeak-wizards-find-longest-paragraph-in-region (start
          end)

     Find longest paragraph in region.
     Moves to the longest paragraph when called interactively.

     (fn START END)

12.205.1.68 emacspeak-wizards-find-shortest-line-in-region
..........................................................

 -- Command: emacspeak-wizards-find-shortest-line-in-region (start end)

     Find shortest line in region.
     Moves to the shortest line when called interactively.

     (fn START END)

12.205.1.69 emacspeak-wizards-finder-find
.........................................

 -- Command: emacspeak-wizards-finder-find (directory)

     Run find-dired on specified switches after prompting for the
     directory to where find is to be launched.

     (fn DIRECTORY)

12.205.1.70 emacspeak-wizards-finder-mode
.........................................

 -- Command: emacspeak-wizards-finder-mode

     Emacspeak Finder

     This mode runs the hook ‘emacspeak-wizards-finder-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.205.1.71 emacspeak-wizards-fix-read-only-text
................................................

 -- Command: emacspeak-wizards-fix-read-only-text (start end)

     Nuke read-only property on text range.

     (fn START END)

12.205.1.72 emacspeak-wizards-fix-typo
......................................

 -- Command: emacspeak-wizards-fix-typo (ext word correction)

     Search and replace  recursively in all files with extension ‘ext’
     for ‘word’ and replace it with correction.
     Use with caution.

     (fn EXT WORD CORRECTION)

12.205.1.73 emacspeak-wizards-frame-colors
..........................................

 -- Command: emacspeak-wizards-frame-colors

     Display frame’s foreground/background color seetting.

12.205.1.74 emacspeak-wizards-gen-fn-decl
.........................................

 -- Command: emacspeak-wizards-gen-fn-decl (f &optional ext)

     Generate declare-function call for function ‘f’.
     Optional interactive prefix arg ext says this comes from an
     external package.

     (fn F &optional EXT)

12.205.1.75 emacspeak-wizards-generate-finder
.............................................

 -- Command: emacspeak-wizards-generate-finder

     Generate a widget-enabled finder wizard.

12.205.1.76 emacspeak-wizards-generate-voice-sampler
....................................................

 -- Command: emacspeak-wizards-generate-voice-sampler (step)

     Generate a buffer that shows a sample line in all the ACSS settings
     for the current voice family.

     (fn STEP)

12.205.1.77 emacspeak-wizards-get-table-content-from-file
.........................................................

 -- Command: emacspeak-wizards-get-table-content-from-file (file depth
          count)

     Extract table specified by depth and count from HTML
     content at file.
     Extracted content is sent to STDOUT.

     (fn FILE DEPTH COUNT)

12.205.1.78 emacspeak-wizards-get-table-content-from-url
........................................................

 -- Command: emacspeak-wizards-get-table-content-from-url (url depth
          count)

     Extract table specified by depth and count from HTML
     content at URL.
     Extracted content is placed as a csv file in task.csv.

     (fn URL DEPTH COUNT)

12.205.1.79 emacspeak-wizards-google-headlines
..............................................

 -- Command: emacspeak-wizards-google-headlines
     ‘C-. C-n’
     ‘C-' C-n’
     ‘C-x @ s C-n’

     Display just the headlines from Google News for fast loading.

12.205.1.80 emacspeak-wizards-google-news
.........................................

 -- Command: emacspeak-wizards-google-news
     ‘C-. n’
     ‘C-' n’
     ‘C-x @ s n’

     Clean up news.google.com for  skimming the news.

12.205.1.81 emacspeak-wizards-google-transcode
..............................................

 -- Command: emacspeak-wizards-google-transcode

     View Web through Google Transcoder.

12.205.1.82 emacspeak-wizards-how-many-matches
..............................................

 -- Command: emacspeak-wizards-how-many-matches (start end &optional
          prefix)
     ‘C-e x h’
     ‘<fn> x h’

     If you define a file local variable
     called ‘emacspeak-occur-pattern’ that holds a regular expression
     that matches  lines of interest, you can use this command to conveniently
     run ‘how-many’ to count  matching header lines.
     With interactive prefix arg, prompts for and remembers the file local pattern.

     (fn START END &optional PREFIX)

12.205.1.83 emacspeak-wizards-iex-show-financials
.................................................

 -- Command: emacspeak-wizards-iex-show-financials (symbol &optional
          refresh)

     Show financials for specified ticker.
     Checks cache, then makes API call if needed.
     Optional interactive prefix arg refreshes cache.

     (fn SYMBOL &optional REFRESH)

12.205.1.84 emacspeak-wizards-iex-show-news
...........................................

 -- Command: emacspeak-wizards-iex-show-news (symbol &optional refresh)

     Show news for specified ticker.
     Checks cache, then makes API call if needed.
     Optional interactive prefix arg refreshes cache.

     (fn SYMBOL &optional REFRESH)

12.205.1.85 emacspeak-wizards-iex-show-price
............................................

 -- Command: emacspeak-wizards-iex-show-price (symbol)
     ‘C-, q’
     ‘C-x @ a q’

     Quick Quote: Just stock price from IEX Trading.

     (fn SYMBOL)

12.205.1.86 emacspeak-wizards-iex-show-quote
............................................

 -- Command: emacspeak-wizards-iex-show-quote (&optional refresh)
     ‘C-. q’
     ‘C-' q’
     ‘C-x @ s q’

     Show portfolio  data from cache.
     Optional interactive prefix arg forces cache refresh.

     The quotes view uses emacspeak’s table mode.
     In addition,  the following  keys are available :

     F: Show financials for current stock.
     N: Show news for current stock.
     P: Show live price for current stock.

     (fn &optional REFRESH)

12.205.1.87 emacspeak-wizards-iex-this-financials
.................................................

 -- Command: emacspeak-wizards-iex-this-financials

     Show financials for symbol in current row

12.205.1.88 emacspeak-wizards-iex-this-google-finance
.....................................................

 -- Command: emacspeak-wizards-iex-this-google-finance

     Lookup this ticker on Google Finance

12.205.1.89 emacspeak-wizards-iex-this-news
...........................................

 -- Command: emacspeak-wizards-iex-this-news

     Show news for symbol in current row

12.205.1.90 emacspeak-wizards-iex-this-price
............................................

 -- Command: emacspeak-wizards-iex-this-price

     Show price for symbol in current row

12.205.1.91 emacspeak-wizards-iheart
....................................

 -- Command: emacspeak-wizards-iheart (q)
     ‘C-, i’
     ‘C-x @ a i’

     Perform IHeart Radio search and display clickable results.

     (fn Q)

12.205.1.92 emacspeak-wizards-iheart-radio-play
...............................................

 -- Command: emacspeak-wizards-iheart-radio-play (id)

     Play specified   station from IHeart Radio.

     (fn ID)

12.205.1.93 emacspeak-wizards-lacheck-buffer-file
.................................................

 -- Command: emacspeak-wizards-lacheck-buffer-file

     Run Lacheck on current buffer.

12.205.1.94 emacspeak-wizards-load-current-file
...............................................

 -- Command: emacspeak-wizards-load-current-file

     load file into emacs

12.205.1.95 emacspeak-wizards-mlb-standings
...........................................

 -- Command: emacspeak-wizards-mlb-standings (&optional raw)

     Display MLB standings as of today.
     Optional interactive prefix arg shows  unprocessed results.

     (fn &optional RAW)

12.205.1.96 emacspeak-wizards-move-and-speak
............................................

 -- Command: emacspeak-wizards-move-and-speak (command count)

     Speaks a chunk of text bounded by point and a target position.
     Target position is specified using a navigation command and a
     count that specifies how many times to execute that command
     first.  Point is left at the target position.  Interactively,
     command is specified by pressing the key that invokes the
     command.

     (fn COMMAND COUNT)

12.205.1.97 emacspeak-wizards-nba-standings
...........................................

 -- Command: emacspeak-wizards-nba-standings (&optional raw)

     Display NBA standings as of today.
     Optional interactive prefix arg shows  unprocessed results.

     (fn &optional RAW)

12.205.1.98 emacspeak-wizards-next-bullet
.........................................

 -- Command: emacspeak-wizards-next-bullet

     Navigate to and speak next ‘bullet’.

12.205.1.99 emacspeak-wizards-next-interactive-defun
....................................................

 -- Command: emacspeak-wizards-next-interactive-defun

     Move point to the next interactive defun

12.205.1.100 emacspeak-wizards-next-shell
.........................................

 -- Command: emacspeak-wizards-next-shell

     Switch to next shell.

12.205.1.101 emacspeak-wizards-noaa-weather
...........................................

 -- Command: emacspeak-wizards-noaa-weather (&optional ask)
     ‘C-e x w’
     ‘<fn> x w’

     Display weather information using NOAA Weather API.
     Data is retrieved only once, subsequent calls switch to previously
     displayed results. Kill that buffer or use an interactive prefix
     arg (C-u) to get new data.  Optional second interactive prefix
     arg (C-u C-u) asks for location address; Default is to display
     weather for ‘gweb-my-address’.

     (fn &optional ASK)

12.205.1.102 emacspeak-wizards-occur-header-lines
.................................................

 -- Command: emacspeak-wizards-occur-header-lines (&optional prefix)
     ‘C-e x o’
     ‘<fn> x o’

     If you define a file local variable called
     ‘emacspeak-occur-pattern’ that holds a regular expression that
     matches header lines, you can use this command to conveniently
     run ‘occur’ to find matching header lines. With prefix arg,
     prompts for and sets value of the file local pattern.

     (fn &optional PREFIX)

12.205.1.103 emacspeak-wizards-pdf-open
.......................................

 -- Command: emacspeak-wizards-pdf-open (filename &optional ask-pwd)
     ‘C-; p’
     ‘C-x @ h p’

     Open pdf file as text.
     Optional interactive prefix arg ask-pwd prompts for password.

     (fn FILENAME &optional ASK-PWD)

12.205.1.104 emacspeak-wizards-popup-input-buffer
.................................................

 -- Command: emacspeak-wizards-popup-input-buffer (mode)

     Provide an input buffer in a specified mode.

     (fn MODE)

12.205.1.105 emacspeak-wizards-ppt-display
..........................................

 -- Command: emacspeak-wizards-ppt-display

     Called to set up preview of an PPT file.
     Assumes we are in a buffer visiting a .ppt file.
     Previews those contents as HTML and nukes the buffer
     visiting the ppt file.

12.205.1.106 emacspeak-wizards-ppt-mode
.......................................

 -- Command: emacspeak-wizards-ppt-mode

     Major mode for browsing PPT slides.

     PPT files  are converted to HTML and previewed using a browser.

     In addition to any hooks its parent mode ‘text-mode’ might have run,
     this mode runs the hook ‘emacspeak-wizards-ppt-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.205.1.107 emacspeak-wizards-previous-bullet
..............................................

 -- Command: emacspeak-wizards-previous-bullet

     Navigate to and speak previous ‘bullet’.

12.205.1.108 emacspeak-wizards-previous-shell
.............................................

 -- Command: emacspeak-wizards-previous-shell

     Switch to previous shell.

12.205.1.109 emacspeak-wizards-quick-weather
............................................

 -- Command: emacspeak-wizards-quick-weather
     ‘C-; w’
     ‘C-x @ h w’

     Bring up weather forecast for current location.

12.205.1.110 emacspeak-wizards-quote
....................................

 -- Command: emacspeak-wizards-quote (&optional refresh)
     ‘C-e x q’
     ‘<fn> x q’

     Top-level dispatch for looking up Stock Market information.

     Key:Action
     f: Financials
     G: finance Google Search
     n: News
     p: Price
     q: Quotes

     (fn &optional REFRESH)

12.205.1.111 emacspeak-wizards-rivo
...................................

 -- Command: emacspeak-wizards-rivo (when channel stop-time output
          directory)

     Rivo wizard.
     Prompts for relevant information and schedules a rivo job using
       UNIX At scheduling facility.
     RIVO is implemented by rivo.pl —
      a Perl script  that can be used to launch streaming media and record
        streaming media for  a specified duration.

     (fn WHEN CHANNEL STOP-TIME OUTPUT DIRECTORY)

12.205.1.112 emacspeak-wizards-rpm-query-in-dired
.................................................

 -- Command: emacspeak-wizards-rpm-query-in-dired

     Run rpm -qi on current dired entry.

12.205.1.113 emacspeak-wizards-scratch
......................................

 -- Command: emacspeak-wizards-scratch
     ‘C-. SPC’
     ‘C-' SPC’
     ‘C-x @ s SPC’

     Switch to *scratch* buffer, creating it if necessary.

12.205.1.114 emacspeak-wizards-set-colors
.........................................

 -- Command: emacspeak-wizards-set-colors

     Interactively prompt for foreground and background colors.

12.205.1.115 emacspeak-wizards-shell
....................................

 -- Command: emacspeak-wizards-shell (&optional prefix)
     ‘C-; s’
     ‘C-x @ h s’

     Run Emacs built-in ‘shell’ command when not in a shell buffer, or
     when called with a prefix argument. When called from a shell buffer,
     switches to ‘next’ shell buffer. When called from outside a shell
     buffer, find the most ‘appropriate shell’ and switch to it. Once
     switched, set default directory in that target shell to the directory
     of the source buffer.

     (fn &optional PREFIX)

12.205.1.116 emacspeak-wizards-shell-by-key
...........................................

 -- Command: emacspeak-wizards-shell-by-key (&optional prefix)
     ‘C-e x 9’
     ‘C-e x 8’
     ‘C-e x 7’
     ‘C-e x 6’
     ‘C-e x 5’
     ‘C-e x 4’
     ‘C-e x 3’
     ‘C-e x 2’
     ‘C-e x 1’
     ‘C-e x 0’
     ‘<fn> x 9’
     ‘<fn> x 8’
     ‘<fn> x 7’
     ‘<fn> x 6’
     ‘<fn> x 5’
     ‘<fn> x 4’
     ‘<fn> x 3’
     ‘<fn> x 2’
     ‘<fn> x 1’
     ‘<fn> x 0’

     Switch to shell buffer by key. This provides a predictable means for
       switching to a specific shell buffer. When invoked from a
       non-shell-mode buffer that is visiting a file, invokes ‘cd ’ in the
       shell to change to the value of ‘default-directory’ — if called with  a
       prefix-arg. When already in a shell buffer,
       interactive prefix arg ‘prefix’ causes this shell to be re-keyed if
       appropriate — see M-x emacspeak-wizards-shell-re-key for an
       explanation of how re-keying works.

     (fn &optional PREFIX)

12.205.1.117 emacspeak-wizards-shell-command-on-current-file
............................................................

 -- Command: emacspeak-wizards-shell-command-on-current-file (command)
     ‘C-e &’
     ‘<fn> &’

     Prompts for and runs shell command on current file.

     (fn COMMAND)

12.205.1.118 emacspeak-wizards-shell-directory-reset
....................................................

 -- Command: emacspeak-wizards-shell-directory-reset
     ‘C-. .’
     ‘C-' .’
     ‘C-e x .’
     ‘<fn> x .’
     ‘C-x @ s .’

     Set current directory to this shell’s initial directory if one was defined.

12.205.1.119 emacspeak-wizards-shell-directory-set
..................................................

 -- Command: emacspeak-wizards-shell-directory-set
     ‘C-e x ,’
     ‘<fn> x ,’

     Define current directory as this shell’s project directory.

12.205.1.120 emacspeak-wizards-shell-toggle
...........................................

 -- Command: emacspeak-wizards-shell-toggle
     ‘C-e <f11>’
     ‘C-; j’
     ‘<fn> <f11>’
     ‘C-x @ h j’

     Switch to the shell buffer and cd to
      the directory of the current buffer.

12.205.1.121 emacspeak-wizards-show-commentary
..............................................

 -- Command: emacspeak-wizards-show-commentary (&optional file)

     Display commentary. Default is to display commentary from current buffer.

     (fn &optional FILE)

12.205.1.122 emacspeak-wizards-show-defined-voices
..................................................

 -- Command: emacspeak-wizards-show-defined-voices

     Display a buffer with sample text in the defined voices.

12.205.1.123 emacspeak-wizards-show-environment-variable
........................................................

 -- Command: emacspeak-wizards-show-environment-variable (v)

     Display value of specified environment variable.

     (fn V)

12.205.1.124 emacspeak-wizards-show-eval-result
...............................................

 -- Command: emacspeak-wizards-show-eval-result (form)
     ‘M-ESC :’

     Convenience command to pretty-print and view Lisp evaluation results.

     (fn FORM)

12.205.1.125 emacspeak-wizards-show-face
........................................

 -- Command: emacspeak-wizards-show-face (face)

     Show salient properties of specified face.

     (fn FACE)

12.205.1.126 emacspeak-wizards-show-memory-used
...............................................

 -- Command: emacspeak-wizards-show-memory-used

     Convenience command to view state of memory used in this session so far.

12.205.1.127 emacspeak-wizards-speak-iso-datetime
.................................................

 -- Command: emacspeak-wizards-speak-iso-datetime (iso)

     Make ISO date-time speech friendly.

     (fn ISO)

12.205.1.128 emacspeak-wizards-spot-words
.........................................

 -- Command: emacspeak-wizards-spot-words (ext word)

     Searches recursively in all files with extension ‘ext’
     for ‘word’ and displays hits in a compilation buffer.

     (fn EXT WORD)

12.205.1.129 emacspeak-wizards-squeeze-blanks
.............................................

 -- Command: emacspeak-wizards-squeeze-blanks (start end)
     ‘C-e x |’
     ‘<fn> x |’

     Squeeze multiple blank lines in current buffer.

     (fn START END)

12.205.1.130 emacspeak-wizards-sunrise-sunset
.............................................

 -- Command: emacspeak-wizards-sunrise-sunset (address &optional arg)

     Display sunrise/sunset for specified address.

     (fn ADDRESS &optional ARG)

12.205.1.131 emacspeak-wizards-swap-fg-and-bg
.............................................

 -- Command: emacspeak-wizards-swap-fg-and-bg
     ‘C-h =’
     ‘<f1> =’
     ‘<help> =’

     Swap foreground and background.

12.205.1.132 emacspeak-wizards-term
...................................

 -- Command: emacspeak-wizards-term (create)
     ‘C-; a’
     ‘C-x @ h a’

     Switch to an ansi-term buffer or create one.
     With prefix arg, always creates a new terminal.
     Otherwise cycles through existing terminals, creating the first
     term if needed.

     (fn CREATE)

12.205.1.133 emacspeak-wizards-terminal
.......................................

 -- Command: emacspeak-wizards-terminal (program)

     Launch terminal and rename buffer appropriately.

     (fn PROGRAM)

12.205.1.134 emacspeak-wizards-tex-tie-current-word
...................................................

 -- Command: emacspeak-wizards-tex-tie-current-word (n)

     Tie the next n  words.

     (fn N)

12.205.1.135 emacspeak-wizards-thanks-mail-signature
....................................................

 -- Command: emacspeak-wizards-thanks-mail-signature

     insert thanks , –Raman at the end of mail message

12.205.1.136 emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer
................................................................

 -- Command: emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer

     Toggle pronunciation of mm-dd-yyyy dates.

12.205.1.137 emacspeak-wizards-toggle-yyyymmdd-date-pronouncer
..............................................................

 -- Command: emacspeak-wizards-toggle-yyyymmdd-date-pronouncer

     Toggle pronunciation of yyyymmdd  dates.

12.205.1.138 emacspeak-wizards-tramp-open-location
..................................................

 -- Command: emacspeak-wizards-tramp-open-location (name)

     Open specified tramp location.
     Location is specified by name.

     (fn NAME)

12.205.1.139 emacspeak-wizards-tune-in-radio-browse
...................................................

 -- Command: emacspeak-wizards-tune-in-radio-browse (&optional category)
     ‘C-, t’
     ‘C-x @ a t’

     Browse Tune-In Radio.
     Optional interactive prefix arg ‘category’ prompts for a category.

     (fn &optional CATEGORY)

12.205.1.140 emacspeak-wizards-tune-in-radio-search
...................................................

 -- Command: emacspeak-wizards-tune-in-radio-search
     ‘C-, s’
     ‘C-x @ a s’

     Search Tune-In Radio.

12.205.1.141 emacspeak-wizards-unhex-uri
........................................

 -- Command: emacspeak-wizards-unhex-uri (uri)

     UnEscape URI

     (fn URI)

12.205.1.142 emacspeak-wizards-units
....................................

 -- Command: emacspeak-wizards-units
     ‘C-e x u’
     ‘<fn> x u’

     Run units in a comint sub-process.

12.205.1.143 emacspeak-wizards-vc-n
...................................

 -- Command: emacspeak-wizards-vc-n

     Accelerator for VC viewer.

12.205.1.144 emacspeak-wizards-vc-viewer
........................................

 -- Command: emacspeak-wizards-vc-viewer (console)
     ‘C-e x v’
     ‘<fn> x v’

     View contents of specified virtual console.

     (fn CONSOLE)

12.205.1.145 emacspeak-wizards-vc-viewer-mode
.............................................

 -- Command: emacspeak-wizards-vc-viewer-mode

     Major mode for interactively viewing virtual console contents.

     key             binding
     —             ——-

     C-l		emacspeak-wizards-vc-viewer-refresh

     This mode runs the hook ‘emacspeak-wizards-vc-viewer-mode-hook’, as the final or penultimate step
     during initialization.

12.205.1.146 emacspeak-wizards-vc-viewer-refresh
................................................

 -- Command: emacspeak-wizards-vc-viewer-refresh

     Refresh view of VC we’re viewing.

12.205.1.147 emacspeak-wizards-vi-as-su-file
............................................

 -- Command: emacspeak-wizards-vi-as-su-file (file)

     Launch sudo vi on specified file in a terminal.

     (fn FILE)

12.205.1.148 emacspeak-wizards-view-buffers-filtered-by-m-player-mode
.....................................................................

 -- Command: emacspeak-wizards-view-buffers-filtered-by-m-player-mode
     ‘C-; :’
     ‘C-x @ h :’

     Buffer menu filtered by  m-player mode.

12.205.1.149 emacspeak-wizards-view-buffers-filtered-by-mode
............................................................

 -- Command: emacspeak-wizards-view-buffers-filtered-by-mode (mode)

     Display list of buffers filtered by specified mode.

     (fn MODE)

12.205.1.150 emacspeak-wizards-view-buffers-filtered-by-this-mode
.................................................................

 -- Command: emacspeak-wizards-view-buffers-filtered-by-this-mode
     ‘C-. m’
     ‘C-' m’
     ‘C-, c’
     ‘C-x @ a c’
     ‘C-x @ s m’

     Buffer menu filtered by  mode of current-buffer.

12.205.1.151 emacspeak-wizards-voice-sampler
............................................

 -- Command: emacspeak-wizards-voice-sampler (personality)

     Read a personality  and apply it to the current line.

     (fn PERSONALITY)

12.205.1.152 emacspeak-wizards-wc-2018
......................................

 -- Command: emacspeak-wizards-wc-2018 (team)

     Display Soccer World Cup Card From Google.

     (fn TEAM)

12.205.1.153 emacspeak-wizards-web-clean-up-processes
.....................................................

 -- Command: emacspeak-wizards-web-clean-up-processes
     ‘C-; /’
     ‘C-x @ h /’

     Delete stale Web connections.

12.205.1.154 emacspeak-wizards-xl-display
.........................................

 -- Command: emacspeak-wizards-xl-display

     Called to set up preview of an XL file.
     Assumes we are in a buffer visiting a .xls file.
     Previews those contents as HTML and nukes the buffer
     visiting the xls file.

12.205.1.155 emacspeak-wizards-xl-mode
......................................

 -- Command: emacspeak-wizards-xl-mode

     Major mode for browsing XL spreadsheets.

     XL Sheets are converted to HTML and previewed using a browser.

     In addition to any hooks its parent mode ‘text-mode’ might have run,
     this mode runs the hook ‘emacspeak-wizards-xl-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.205.1.156 emacspeak-wizards-yql-lookup
.........................................

 -- Command: emacspeak-wizards-yql-lookup (symbols)

     Lookup quotes for specified stock symbols.
     Symbols are separated by whitespace.

     (fn SYMBOLS)

12.205.1.157 emacspeak-wizards-yql-quotes
.........................................

 -- Command: emacspeak-wizards-yql-quotes

     Display quotes using YQL API.
     Symbols are taken from ‘emacspeak-wizards-personal-portfolio’.

12.205.2 emacspeak-wizards Options
----------------------------------

 -- Variable: User Option emacspeak-clipboard-file
     File used to save Emacspeak clipboard.  The emacspeak clipboard
     provides a convenient mechanism for exchanging information between
     different Emacs sessions.

 -- Variable: User Option emacspeak-curl-cookie-store
     Cookie store used by Curl.

 -- Variable: User Option emacspeak-emergency-tts-server
     TTS server to use in an emergency.  Set this to a TTS server that
     is known to work at all times.  If you are debugging another speech
     server and that server gets wedged for some reason, you can use
     command emacspeak-emergency-tts-restart to get speech back using
     the reliable TTS server.  It’s useful to bind the above command to
     a convenient key.

 -- Variable: User Option emacspeak-speak-telephone-directory
     File holding telephone directory.  This is just a text file, and we
     use grep to search it.

 -- Variable: User Option emacspeak-speak-telephone-directory-command
     Command used to look up names in the telephone directory.

 -- Variable: User Option emacspeak-ssh-tts-server
     SSH TTS server to use by default.

 -- Variable: User Option emacspeak-wizards-alpha-vantage-api-key
     API Key used to retrieve stock data from alpha-vantage.  Visit
     https://www.alphavantage.co/support/#api-key to get your key.

 -- Variable: User Option emacspeak-wizards-curl-program
     Name of curl executable.

 -- Variable: User Option emacspeak-wizards-dvi2txt-program
     Program for converting dvi to txt.  Set this to nil if you do not
     want to use the DVI wizard.

 -- Variable: User Option
          emacspeak-wizards-find-switches-that-need-quoting
     Find switches whose args need quoting.

 -- Variable: User Option emacspeak-wizards-find-switches-widget
     Widget to get find switch.

 -- Variable: User Option emacspeak-wizards-iex-quotes-row-filter
     Template used to audio-format rows.

 -- Variable: User Option emacspeak-wizards-links-program
     Name of links executable.

 -- Variable: User Option emacspeak-wizards-lynx-program
     Lynx executable.

 -- Variable: User Option emacspeak-wizards-pdf-to-text-options
     options to Command for running pdftotext.

 -- Variable: User Option emacspeak-wizards-pdf-to-text-program
     Command for running pdftotext.

 -- Variable: User Option emacspeak-wizards-personal-portfolio
     Set this to the stock tickers you want to check.  Default is GAFA.
     Tickers are separated by white-space and are automatically sorted
     in lexical order with duplicates removed when saving.

 -- Variable: User Option emacspeak-wizards-ppthtml-program
     Program for converting PPT to HTML. Set this to nil if you do not
     want to use the PPTHTML wizard.

 -- Variable: User Option emacspeak-wizards-project-shells
     List of shell-name/initial-directory pairs.

 -- Variable: User Option emacspeak-wizards-spot-words-extension
     Default file extension used when spotting words.

 -- Variable: User Option emacspeak-wizards-tramp-locations
     Tramp locations used by Emacspeak tramp wizard.  Locations added
     here via custom can be opened using command
     emacspeak-wizards-tramp-open-location bound to M-x
     emacspeak-wizards-tramp-open-location.

 -- Variable: User Option emacspeak-wizards-vc-viewer-command
     Command line for dumping out virtual console.  Make sure you have
     access to /dev/vcs* by adding yourself to the appropriate group.
     On Ubuntu and Debian this is group ‘tty’.

 -- Variable: User Option emacspeak-wizards-xlhtml-program
     Program for converting XL to HTML. Set this to nil if you do not
     want to use the XLHTML wizard.

 -- Variable: User Option emacspeak-wizards-yql-quotes-row-filter
     Template used to audio-format rows.

