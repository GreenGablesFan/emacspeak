This is emacspeak.info, produced by makeinfo version 6.5 from
emacspeak.texi.

INFO-DIR-SECTION Accessibility
START-INFO-DIR-ENTRY
* Emacspeak:(emacspeak).		Speech-enabled Audio Desktop.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Emacspeak:(emacspeak).		Speech-enabled Audio Desktop.
END-INFO-DIR-ENTRY


File: emacspeak.info,  Node: emacspeak-popup,  Next: emacspeak-proced,  Prev: emacspeak-pianobar,  Up: Emacspeak Commands And Options

12.140 emacspeak-popup
======================

POPUP == popup.el from MELPA

12.140.1 emacspeak-popup Options
--------------------------------

 -- Variable: User Option emacspeak-popup-isearch-match-voice
     Personality used for popup-isearch-match This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-popup-menu-mouse-personality
     Personality used for popup-menu-mouse-face This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option emacspeak-popup-menu-personality
     Personality used for popup-menu-face This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option emacspeak-popup-menu-selection-personality
     Personality used for popup-menu-selection-face This personality
     uses voice-lighten whose effect can be changed globally by
     customizing voice-lighten-settings.

 -- Variable: User Option emacspeak-popup-menu-summary-personality
     Personality used for popup-menu-summary-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-popup-personality
     Personality used for popup-face This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-popup-summary-personality
     Personality used for popup-summary-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-popup-tip-personality
     Personality used for popup-tip-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.


File: emacspeak.info,  Node: emacspeak-proced,  Next: emacspeak-projectile,  Prev: emacspeak-popup,  Up: Emacspeak Commands And Options

12.141 emacspeak-proced
=======================

PROCED == Process Editor A new Task Manager for Emacs.  Proced is part
of emacs 23.

12.141.1 emacspeak-proced Commands
----------------------------------

12.141.1.1 emacspeak-proced-jump-to-process
...........................................

 -- Command: emacspeak-proced-jump-to-process (name)

     Jump to process by name.

     (fn NAME)

12.141.1.2 emacspeak-proced-next-field
......................................

 -- Command: emacspeak-proced-next-field

     Navigate to next field.

12.141.1.3 emacspeak-proced-next-line
.....................................

 -- Command: emacspeak-proced-next-line

     Move to next line and speak a summary.

12.141.1.4 emacspeak-proced-previous-field
..........................................

 -- Command: emacspeak-proced-previous-field

     Navigate to previous field.

12.141.1.5 emacspeak-proced-previous-line
.........................................

 -- Command: emacspeak-proced-previous-line

     Move to next line and speak a summary.

12.141.1.6 emacspeak-proced-speak-args
......................................

 -- Command: emacspeak-proced-speak-args

     Speak command  invocation  for this process.

12.141.1.7 emacspeak-proced-speak-field
.......................................

 -- Command: emacspeak-proced-speak-field (field-name)

     Speak value of specified field in current line.

     (fn FIELD-NAME)

12.141.1.8 emacspeak-proced-speak-that-field
............................................

 -- Command: emacspeak-proced-speak-that-field

     Speak desired field via single keystroke.

12.141.1.9 emacspeak-proced-speak-this-field
............................................

 -- Command: emacspeak-proced-speak-this-field (&optional position)

     Speak field at specified column — defaults to current column.

     (fn &optional POSITION)


File: emacspeak.info,  Node: emacspeak-projectile,  Next: emacspeak-prompts,  Prev: emacspeak-proced,  Up: Emacspeak Commands And Options

12.142 emacspeak-projectile
===========================

PROJECTILE == ‘M-x package-install projectile’.  Project management in
Emacs.


File: emacspeak.info,  Node: emacspeak-prompts,  Next: emacspeak-pronounce,  Prev: emacspeak-projectile,  Up: Emacspeak Commands And Options

12.143 emacspeak-prompts
========================

This module provides a set of pre-defined speech prompts, And a
light-weight player for generating these prompts.


File: emacspeak.info,  Node: emacspeak-pronounce,  Next: emacspeak-py,  Prev: emacspeak-prompts,  Up: Emacspeak Commands And Options

12.144 emacspeak-pronounce
==========================

This module implements user customizable pronunciation dictionaries for
emacspeak.  Custom pronunciations can be defined per file, per directory
and/or per major mode.  Emacspeak maintains a persistent user dictionary
upon request and loads these in new emacspeak sessions.  This module
implements the user interface to the custom dictionary as well as
providing the internal API used by the rest of emacspeak in using the
dictionary.  Algorithm:

   The persistent dictionary is a hash table where the hash keys are
filenames, directory names, or major-mode names.  The hash values are
association lists defining the dictionary.  Users of this module can
retrieve a dictionary made up of all applicable association lists for a
given file.

12.144.1 emacspeak-pronounce Commands
-------------------------------------

12.144.1.1 emacspeak-pronounce-clear-dictionaries
.................................................

 -- Command: emacspeak-pronounce-clear-dictionaries

     Clear all current pronunciation dictionaries.

12.144.1.2 emacspeak-pronounce-define-local-pronunciation
.........................................................

 -- Command: emacspeak-pronounce-define-local-pronunciation (word
          pronunciation)

     Define buffer local pronunciation.
     Argument WORD specifies the word which should be pronounced as specified by PRONUNCIATION.

     (fn WORD PRONUNCIATION)

12.144.1.3 emacspeak-pronounce-define-pronunciation
...................................................

 -- Command: emacspeak-pronounce-define-pronunciation

     Interactively define entries in the pronunciation dictionaries.
     Default term to define is delimited by region.
     First loads any persistent dictionaries if not already loaded.

12.144.1.4 emacspeak-pronounce-define-template-pronunciation
............................................................

 -- Command: emacspeak-pronounce-define-template-pronunciation

     Interactively define template entries in the pronunciation dictionaries.
     Default term to define is delimited by region.
     First loads any persistent dictionaries if not already loaded.

12.144.1.5 emacspeak-pronounce-dispatch
.......................................

 -- Command: emacspeak-pronounce-dispatch
     ‘C-e M-d’
     ‘<fn> M-d’

     Provides the user interface front-end to Emacspeak’s pronunciation dictionaries.

12.144.1.6 emacspeak-pronounce-edit-pronunciations
..................................................

 -- Command: emacspeak-pronounce-edit-pronunciations (key)

     Prompt for and launch a pronunciation editor on the
     specified pronunciation dictionary key.

     (fn KEY)

12.144.1.7 emacspeak-pronounce-load-dictionaries
................................................

 -- Command: emacspeak-pronounce-load-dictionaries (&optional filename)

     Load pronunciation dictionaries.
     Optional argument FILENAME specifies the dictionary file.

     (fn &optional FILENAME)

12.144.1.8 emacspeak-pronounce-refresh-pronunciations
.....................................................

 -- Command: emacspeak-pronounce-refresh-pronunciations

     Refresh pronunciation table for current buffer.
     Activates pronunciation dictionaries if not already active.

12.144.1.9 emacspeak-pronounce-save-dictionaries
................................................

 -- Command: emacspeak-pronounce-save-dictionaries

     Writes out the persistent emacspeak pronunciation dictionaries.

12.144.1.10 emacspeak-pronounce-toggle-use-of-dictionaries
..........................................................

 -- Command: emacspeak-pronounce-toggle-use-of-dictionaries (&optional
          state)

     Toggle use of pronunciation dictionaries in current buffer.
     Pronunciations can be defined on a per file, per directory and/or per
     mode basis.
     Pronunciations are activated on a per buffer basis.
     Turning on the use of pronunciation dictionaries results in emacspeak
     composing a pronunciation table based on the currently defined
     pronunciation dictionaries.
     After this, the pronunciations will be applied whenever text in the
     buffer is spoken.
     Optional argument state can be used from Lisp programs to
     explicitly turn pronunciations on or off.

     (fn &optional STATE)

12.144.1.11 emacspeak-pronounce-yank-word
.........................................

 -- Command: emacspeak-pronounce-yank-word

     Yank word at point into minibuffer.

12.144.2 emacspeak-pronounce Options
------------------------------------

 -- Variable: User Option
          emacspeak-pronounce-common-xml-namespace-uri-pronunciations
     Pronunciations for well known namespace URIs.

 -- Variable: User Option emacspeak-pronounce-dictionaries-file
     File that holds the persistent emacspeak pronunciation
     dictionaries.

 -- Variable: User Option
          emacspeak-pronounce-internet-smileys-pronunciations
     Pronunciation dictionary used in all instant messenger and IRC chat
     modes.  See http://www.charm.net/~kmarsh/smiley.html.

 -- Variable: User Option
          emacspeak-pronounce-load-pronunciations-on-startup
     Says if user dictionaries loaded on emacspeak startup.

 -- Variable: User Option emacspeak-pronounce-pronunciation-personality
     *Pronunciation personality.  This is the personality used when
     speaking things that have a pronunciation applied.


File: emacspeak.info,  Node: emacspeak-py,  Next: emacspeak-pydoc,  Prev: emacspeak-pronounce,  Up: Emacspeak Commands And Options

12.145 emacspeak-py
===================

This speech-enables python-mode available on sourceforge and ELPA

12.145.1 emacspeak-py Options
-----------------------------

 -- Variable: User Option emacspeak-py-XXX-tag-personality
     Personality used for py-XXX-tag-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-py-builtins-personality
     Personality used for py-builtins-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-py-class-name-personality
     Personality used for py-class-name-face This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option emacspeak-py-decorators-personality
     Personality used for py-decorators-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-py-def-class-personality
     Personality used for py-def-class-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-py-exception-name-personality
     Personality used for py-exception-name-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-py-import-from-personality
     Personality used for py-import-from-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-py-number-personality
     Personality used for py-number-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-py-object-reference-personality
     Personality used for py-object-reference-face This personality uses
     voice-monotone-light whose effect can be changed globally by
     customizing voice-monotone-light-settings.

 -- Variable: User Option emacspeak-py-pseudo-keyword-personality
     Personality used for py-pseudo-keyword-face This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option emacspeak-py-try-if-personality
     Personality used for py-try-if-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-py-variable-name-personality
     Personality used for py-variable-name-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.


File: emacspeak.info,  Node: emacspeak-pydoc,  Next: emacspeak-python,  Prev: emacspeak-py,  Up: Emacspeak Commands And Options

12.146 emacspeak-pydoc
======================

PYDOC == Python Documentation Viewer

12.146.1 emacspeak-pydoc Options
--------------------------------

 -- Variable: User Option emacspeak-pydoc-button-personality
     Personality used for pydoc-button-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-pydoc-callable-name-personality
     Personality used for pydoc-callable-name-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-pydoc-callable-param-personality
     Personality used for pydoc-callable-param-face This personality
     uses emacspeak-voice-lock-variable-name-personality whose effect
     can be changed globally by customizing
     emacspeak-voice-lock-variable-name-personality-settings.

 -- Variable: User Option emacspeak-pydoc-class-name-link-personality
     Personality used for pydoc-class-name-link-face This personality
     uses voice-bolden whose effect can be changed globally by
     customizing voice-bolden-settings.

 -- Variable: User Option emacspeak-pydoc-data-personality
     Personality used for pydoc-data-face This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option emacspeak-pydoc-envvars-personality
     Personality used for pydoc-envvars-face This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option emacspeak-pydoc-package-link-personality
     Personality used for pydoc-package-link-face This personality uses
     emacspeak-voice-lock-variable-name-personality whose effect can be
     changed globally by customizing
     emacspeak-voice-lock-variable-name-personality-settings.

 -- Variable: User Option emacspeak-pydoc-source-file-link-personality
     Personality used for pydoc-source-file-link-face This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option emacspeak-pydoc-sphinx-directive-personality
     Personality used for pydoc-sphinx-directive-face This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option emacspeak-pydoc-sphinx-param-name-personality
     Personality used for pydoc-sphinx-param-name-face This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option emacspeak-pydoc-sphinx-param-type-personality
     Personality used for pydoc-sphinx-param-type-face This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option emacspeak-pydoc-string-personality
     Personality used for pydoc-string-face This personality uses
     emacspeak-voice-lock-string-personality whose effect can be changed
     globally by customizing
     emacspeak-voice-lock-string-personality-settings.

 -- Variable: User Option
          emacspeak-pydoc-superclass-name-link-personality
     Personality used for pydoc-superclass-name-link-face This
     personality uses voice-bolden-extra whose effect can be changed
     globally by customizing voice-bolden-extra-settings.


File: emacspeak.info,  Node: emacspeak-python,  Next: emacspeak-racket,  Prev: emacspeak-pydoc,  Up: Emacspeak Commands And Options

12.147 emacspeak-python
=======================

This speech-enables python-mode bundled with Emacs


File: emacspeak.info,  Node: emacspeak-racket,  Next: emacspeak-re-builder,  Prev: emacspeak-python,  Up: Emacspeak Commands And Options

12.148 emacspeak-racket
=======================

racket-mode implements an IDE for racket, a dialect of scheme.

12.148.1 emacspeak-racket Options
---------------------------------

 -- Variable: User Option emacspeak-racket-check-syntax-def-personality
     Personality used for racket-check-syntax-def-face This personality
     uses voice-bolden whose effect can be changed globally by
     customizing voice-bolden-settings.

 -- Variable: User Option emacspeak-racket-check-syntax-use-personality
     Personality used for racket-check-syntax-use-face This personality
     uses voice-annotate whose effect can be changed globally by
     customizing voice-annotate-settings.

 -- Variable: User Option emacspeak-racket-here-string-personality
     Personality used for racket-here-string-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-racket-keyword-argument-personality
     Personality used for racket-keyword-argument-face This personality
     uses voice-animate whose effect can be changed globally by
     customizing voice-animate-settings.

 -- Variable: User Option emacspeak-racket-paren-personality
     Personality used for racket-paren-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-racket-selfeval-personality
     Personality used for racket-selfeval-face This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.


File: emacspeak.info,  Node: emacspeak-re-builder,  Next: emacspeak-redefine,  Prev: emacspeak-racket,  Up: Emacspeak Commands And Options

12.149 emacspeak-re-builder
===========================

Speech-enable re-builder.  Will be used to advantage in efficiently
setting up outline regexp wizards

12.149.1 emacspeak-re-builder Options
-------------------------------------

 -- Variable: User Option emacspeak-reb-match-0-voice
     Personality used for reb-match-0 This personality uses
     voice-lock-overlay-0 whose effect can be changed globally by
     customizing voice-lock-overlay-0-settings.

 -- Variable: User Option emacspeak-reb-match-1-voice
     Personality used for reb-match-1 This personality uses
     voice-lock-overlay-1 whose effect can be changed globally by
     customizing voice-lock-overlay-1-settings.

 -- Variable: User Option emacspeak-reb-match-2-voice
     Personality used for reb-match-2 This personality uses
     voice-lock-overlay-2 whose effect can be changed globally by
     customizing voice-lock-overlay-2-settings.

 -- Variable: User Option emacspeak-reb-match-3-voice
     Personality used for reb-match-3 This personality uses
     voice-lock-overlay-3 whose effect can be changed globally by
     customizing voice-lock-overlay-3-settings.


File: emacspeak.info,  Node: emacspeak-redefine,  Next: emacspeak-reftex,  Prev: emacspeak-re-builder,  Up: Emacspeak Commands And Options

12.150 emacspeak-redefine
=========================

This module redefines a few vital functions, since advising them won’t
help.  Convention used: To redefine function fn: The original function
will be renamed to Orig-fn.  A new function called emacspeak-fn will be
defined.  Finally, we will fset fn to emacspeak-fn In the case of
backward-char, forward-char, and self-insert-command mere redefinition
of the function will not do: We will need to bind the new functions
explicitly to the keys.

12.150.1 emacspeak-redefine Commands
------------------------------------

12.150.1.1 emacspeak-backward-char
..................................

 -- Command: emacspeak-backward-char (&optional arg)

     Backward-char redefined to speak char moved to.

     (fn &optional ARG)

12.150.1.2 emacspeak-forward-char
.................................

 -- Command: emacspeak-forward-char (&optional arg)

     Forward-char redefined to speak char moved to.

     (fn &optional ARG)

12.150.1.3 emacspeak-self-insert-command
........................................

 -- Command: emacspeak-self-insert-command (&optional arg)

     Insert a character.
     Speaks the character if emacspeak-character-echo is true.
     See  command emacspeak-toggle-word-echo bound to
     C-e d w.
     Speech flushes as you type.

     (fn &optional ARG)


File: emacspeak.info,  Node: emacspeak-reftex,  Next: emacspeak-related,  Prev: emacspeak-redefine,  Up: Emacspeak Commands And Options

12.151 emacspeak-reftex
=======================

This module speech-enables refteex – reftex is a minor mode that makes
navigation of TeX documents possible via a table of contents buffer.


File: emacspeak.info,  Node: emacspeak-related,  Next: emacspeak-remote,  Prev: emacspeak-reftex,  Up: Emacspeak Commands And Options

12.152 emacspeak-related
========================

RELATED == Switch among related buffers (melpa).  Speech-enable
interactive commands.


File: emacspeak.info,  Node: emacspeak-remote,  Next: emacspeak-rg,  Prev: emacspeak-related,  Up: Emacspeak Commands And Options

12.153 emacspeak-remote
=======================

In a running emacspeak session, nuke the running server and start
talking to a remote speech server, after prompting for host and port

12.153.1 emacspeak-remote Commands
----------------------------------

12.153.1.1 emacspeak-remote-connect-to-server
.............................................

 -- Command: emacspeak-remote-connect-to-server (host port)
     ‘C-e M-r’
     ‘<fn> M-r’

     Connect to and start using remote speech server running on
     host host and listening on port port. Host is the hostname of the
     remote server, typically the desktop machine. Port is the tcp
     port that that host is listening on for speech requests.

     (fn HOST PORT)

12.153.1.2 emacspeak-remote-edit-current-remote-hostname
........................................................

 -- Command: emacspeak-remote-edit-current-remote-hostname

     Interactively set up where we came from.
     Value is persisted for use with ssh servers.

12.153.1.3 emacspeak-remote-home
................................

 -- Command: emacspeak-remote-home

     Open ssh session to where we came from.
     Uses value returned by ‘emacspeak-remote-get-current-remote-hostname’.

12.153.1.4 emacspeak-remote-quick-connect-to-server
...................................................

 -- Command: emacspeak-remote-quick-connect-to-server

     Connect to remote server.
     Does not prompt for host or port, but quietly uses the guesses
     that appear as defaults when prompting. Use this once you are
     sure the guesses are usually correct.

12.153.1.5 emacspeak-remote-quick-connect-via-ssh
.................................................

 -- Command: emacspeak-remote-quick-connect-via-ssh

     Connect via ssh to remote Emacspeak server.
     Server is specified via custom option ‘emacspeak-remote-default-ssh-server’.

12.153.1.6 emacspeak-remote-ssh-to-server
.........................................

 -- Command: emacspeak-remote-ssh-to-server (login host port)

     Open ssh session to where we came from.

     (fn LOGIN HOST PORT)

12.153.2 emacspeak-remote Options
---------------------------------

 -- Variable: User Option emacspeak-remote-default-ssh-server
     Default ssh server to use for remote speech server.

 -- Variable: User Option emacspeak-remote-hooks
     List of hook functions that are run after emacspeak is set to run
     as a remote application.  Use this to add actions you typically
     perform after you enter remote mode.


File: emacspeak.info,  Node: emacspeak-rg,  Next: emacspeak-rmail,  Prev: emacspeak-remote,  Up: Emacspeak Commands And Options

12.154 emacspeak-rg
===================

RG == Emacs front-end to ripgrep (rg).

12.154.1 emacspeak-rg Options
-----------------------------

 -- Variable: User Option emacspeak-rg-context-personality
     Personality used for rg-context-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-rg-error-personality
     Personality used for rg-error-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-rg-file-tag-personality
     Personality used for rg-file-tag-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-rg-filename-personality
     Personality used for rg-filename-face This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option emacspeak-rg-info-personality
     Personality used for rg-info-face This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option emacspeak-rg-match-personality
     Personality used for rg-match-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-rg-warning-personality
     Personality used for rg-warning-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.


File: emacspeak.info,  Node: emacspeak-rmail,  Next: emacspeak-rpm,  Prev: emacspeak-rg,  Up: Emacspeak Commands And Options

12.155 emacspeak-rmail
======================

emacspeak extensions to rmail

12.155.1 emacspeak-rmail Commands
---------------------------------

12.155.1.1 emacspeak-rmail-speak-current-message-labels
.......................................................

 -- Command: emacspeak-rmail-speak-current-message-labels

     Speak labels of current message

12.155.1.2 emacspeak-rmail-summarize-current-message
....................................................

 -- Command: emacspeak-rmail-summarize-current-message

     Summarize current message


File: emacspeak.info,  Node: emacspeak-rpm,  Next: emacspeak-rpm-spec,  Prev: emacspeak-rmail,  Up: Emacspeak Commands And Options

12.156 emacspeak-rpm
====================

This module speech-enables rpm.el rpm.el can be downloaded from
http://www.uni-karlsruhe.de/~Detlev.Zundel/download/rpm.el and provides
a nice interface to managing and browsing rpm.


File: emacspeak.info,  Node: emacspeak-rpm-spec,  Next: emacspeak-rst,  Prev: emacspeak-rpm,  Up: Emacspeak Commands And Options

12.157 emacspeak-rpm-spec
=========================

speech-enable rpm-spec-mode –part of Emacs 21 on RH 7.3

12.157.1 emacspeak-rpm-spec Options
-----------------------------------

 -- Variable: User Option emacspeak-rpm-spec-dir-personality
     Personality used for rpm-spec-dir-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-rpm-spec-doc-personality
     Personality used for rpm-spec-doc-face This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option emacspeak-rpm-spec-ghost-personality
     Personality used for rpm-spec-ghost-face This personality uses
     voice-smoothen-medium whose effect can be changed globally by
     customizing voice-smoothen-medium-settings.

 -- Variable: User Option emacspeak-rpm-spec-macro-personality
     Personality used for rpm-spec-macro-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-rpm-spec-package-personality
     Personality used for rpm-spec-package-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-rpm-spec-tag-personality
     Personality used for rpm-spec-tag-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.


File: emacspeak.info,  Node: emacspeak-rst,  Next: emacspeak-ruby,  Prev: emacspeak-rpm-spec,  Up: Emacspeak Commands And Options

12.158 emacspeak-rst
====================

RST == rst-mode for editing rst text files.  This module speech-enables
rst-mode.

12.158.1 emacspeak-rst Options
------------------------------

 -- Variable: User Option emacspeak-rst-adornment-voice
     Personality used for rst-adornment This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-rst-block-voice
     Personality used for rst-block This personality uses voice-annotate
     whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option emacspeak-rst-comment-voice
     Personality used for rst-comment This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option emacspeak-rst-definition-voice
     Personality used for rst-definition This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option emacspeak-rst-directive-voice
     Personality used for rst-directive This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-rst-emphasis1-voice
     Personality used for rst-emphasis1 This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-rst-emphasis2-voice
     Personality used for rst-emphasis2 This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option emacspeak-rst-external-voice
     Personality used for rst-external This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-rst-level-1-voice
     Personality used for rst-level-1 This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-rst-level-2-voice
     Personality used for rst-level-2 This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option emacspeak-rst-level-3-voice
     Personality used for rst-level-3 This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option emacspeak-rst-level-4-voice
     Personality used for rst-level-4 This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option emacspeak-rst-literal-voice
     Personality used for rst-literal This personality uses
     voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option emacspeak-rst-reference-voice
     Personality used for rst-reference This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-rst-transition-voice
     Personality used for rst-transition This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.


File: emacspeak.info,  Node: emacspeak-ruby,  Next: emacspeak-sage,  Prev: emacspeak-rst,  Up: Emacspeak Commands And Options

12.159 emacspeak-ruby
=====================

Provide additional advice to Ruby mode


File: emacspeak.info,  Node: emacspeak-sage,  Next: emacspeak-ses,  Prev: emacspeak-ruby,  Up: Emacspeak Commands And Options

12.160 emacspeak-sage
=====================

Speech-enable ‘sage-shell-mode’.  This is a major mode for interacting
with ‘sage’, <http://www.sagemath.org/> An Open-source Mathematical
Software System.


File: emacspeak.info,  Node: emacspeak-ses,  Next: emacspeak-setup,  Prev: emacspeak-sage,  Up: Emacspeak Commands And Options

12.161 emacspeak-ses
====================

ses implements a simple spread sheet and is part of Emacs This module
speech-enables ses

12.161.1 emacspeak-ses Commands
-------------------------------

12.161.1.1 emacspeak-ses-backward-column-and-summarize
......................................................

 -- Command: emacspeak-ses-backward-column-and-summarize

     Move to previous column and summarize.

12.161.1.2 emacspeak-ses-backward-row-and-summarize
...................................................

 -- Command: emacspeak-ses-backward-row-and-summarize

     Move to previous row  and summarize.

12.161.1.3 emacspeak-ses-forward-column-and-summarize
.....................................................

 -- Command: emacspeak-ses-forward-column-and-summarize

     Move to next column and summarize.

12.161.1.4 emacspeak-ses-forward-row-and-summarize
..................................................

 -- Command: emacspeak-ses-forward-row-and-summarize

     Move to next row and summarize.

12.161.1.5 emacspeak-ses-summarize-cell
.......................................

 -- Command: emacspeak-ses-summarize-cell (cell-name)

     Summarize specified  cell.

     (fn CELL-NAME)

12.161.1.6 emacspeak-ses-summarize-current-cell
...............................................

 -- Command: emacspeak-ses-summarize-current-cell (&rest ignore)

     Summarize current cell.

     (fn &rest IGNORE)


File: emacspeak.info,  Node: emacspeak-setup,  Next: emacspeak-sgml-mode,  Prev: emacspeak-ses,  Up: Emacspeak Commands And Options

12.162 emacspeak-setup
======================

Entry point for Emacspeak.  The simplest and most basic way to start
emacspeak is: emacs -q -l <emacspeak-dir>/lisp/emacspeak-setup.el The
above starts a vanilla Emacs with just Emacspeak loaded.  Once the above
has been verified to work, You can add (load-library "emacspeak-setup")
To your .emacs file.  See tvr/emacs-startup.el in the Emacspeak Git
repository for my setup.

12.162.1 emacspeak-setup Options
--------------------------------

 -- Variable: User Option dtk-startup-hook
     List of hooks to be run after starting up the speech server.  Set
     things like speech rate, punctuation mode etc in this hook.

 -- Variable: User Option emacspeak-startup-hook
     Hook run after Emacspeak is started.

 -- Variable: User Option emacspeak-tts-use-notify-stream
     Set to true to use a separate TTS stream for notifications.

 -- Variable: User Option tts-notification-device
     Virtual ALSA device to use for notifications stream.


File: emacspeak.info,  Node: emacspeak-sgml-mode,  Next: emacspeak-sh-script,  Prev: emacspeak-setup,  Up: Emacspeak Commands And Options

12.163 emacspeak-sgml-mode
==========================

emacspeak extensions to sgml mode


File: emacspeak.info,  Node: emacspeak-sh-script,  Next: emacspeak-shx,  Prev: emacspeak-sgml-mode,  Up: Emacspeak Commands And Options

12.164 emacspeak-sh-script
==========================

This module speech-enables sh-script.el


File: emacspeak.info,  Node: emacspeak-shx,  Next: emacspeak-sigbegone,  Prev: emacspeak-sh-script,  Up: Emacspeak Commands And Options

12.165 emacspeak-shx
====================

SHX == Shell Extras For emacs


File: emacspeak.info,  Node: emacspeak-sigbegone,  Next: emacspeak-slime,  Prev: emacspeak-shx,  Up: Emacspeak Commands And Options

12.166 emacspeak-sigbegone
==========================

Speech-enables package sigbegone –voiceify sigs in email and news

12.166.1 emacspeak-sigbegone Options
------------------------------------

 -- Variable: User Option emacspeak-sigbegone-exorcized-personality
     Personality used for sigbegone-exorcized-face This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.


File: emacspeak.info,  Node: emacspeak-slime,  Next: emacspeak-smart-window,  Prev: emacspeak-sigbegone,  Up: Emacspeak Commands And Options

12.167 emacspeak-slime
======================

;;; SLIME == Superior Lisp Interaction Mode For Emacs

   Slime is a powerful IDE for developing in Common Lisp and Clojure.
It’s similar but more modern than package ILisp that I used as a
graduate student when developing AsTeR.

12.167.1 emacspeak-slime Options
--------------------------------

 -- Variable: User Option emacspeak-sldb-catch-tag-personality
     Personality used for sldb-catch-tag-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-sldb-condition-personality
     Personality used for sldb-condition-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-sldb-detailed-frame-line-personality
     Personality used for sldb-detailed-frame-line-face This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option emacspeak-sldb-frame-label-personality
     Personality used for sldb-frame-label-face This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option emacspeak-sldb-frame-line-personality
     Personality used for sldb-frame-line-face This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option emacspeak-sldb-local-name-personality
     Personality used for sldb-local-name-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-sldb-local-value-personality
     Personality used for sldb-local-value-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option
          emacspeak-sldb-non-restartable-frame-line-personality
     Personality used for sldb-non-restartable-frame-line-face This
     personality uses voice-animate-extra whose effect can be changed
     globally by customizing voice-animate-extra-settings.

 -- Variable: User Option emacspeak-sldb-reference-personality
     Personality used for sldb-reference-face This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option emacspeak-sldb-restart-number-personality
     Personality used for sldb-restart-number-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-sldb-restart-personality
     Personality used for sldb-restart-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-sldb-restart-type-personality
     Personality used for sldb-restart-type-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option
          emacspeak-sldb-restartable-frame-line-personality
     Personality used for sldb-restartable-frame-line-face This
     personality uses voice-bolden whose effect can be changed globally
     by customizing voice-bolden-settings.

 -- Variable: User Option emacspeak-sldb-section-personality
     Personality used for sldb-section-face This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option emacspeak-sldb-topline-personality
     Personality used for sldb-topline-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-slime-apropos-label-voice
     Personality used for slime-apropos-label This personality uses
     voice-monotone-light whose effect can be changed globally by
     customizing voice-monotone-light-settings.

 -- Variable: User Option emacspeak-slime-apropos-symbol-voice
     Personality used for slime-apropos-symbol This personality uses
     voice-monotone-light whose effect can be changed globally by
     customizing voice-monotone-light-settings.

 -- Variable: User Option emacspeak-slime-error-personality
     Personality used for slime-error-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-slime-highlight-personality
     Personality used for slime-highlight-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-slime-inspector-action-personality
     Personality used for slime-inspector-action-face This personality
     uses voice-bolden whose effect can be changed globally by
     customizing voice-bolden-settings.

 -- Variable: User Option emacspeak-slime-inspector-label-personality
     Personality used for slime-inspector-label-face This personality
     uses voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option emacspeak-slime-inspector-topline-personality
     Personality used for slime-inspector-topline-face This personality
     uses voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option emacspeak-slime-inspector-type-personality
     Personality used for slime-inspector-type-face This personality
     uses voice-annotate whose effect can be changed globally by
     customizing voice-annotate-settings.

 -- Variable: User Option emacspeak-slime-inspector-value-personality
     Personality used for slime-inspector-value-face This personality
     uses voice-animate whose effect can be changed globally by
     customizing voice-animate-settings.

 -- Variable: User Option emacspeak-slime-note-personality
     Personality used for slime-note-face This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option emacspeak-slime-reader-conditional-personality
     Personality used for slime-reader-conditional-face This personality
     uses voice-brighten whose effect can be changed globally by
     customizing voice-brighten-settings.

 -- Variable: User Option emacspeak-slime-repl-input-personality
     Personality used for slime-repl-input-face This personality uses
     voice-brighten-medium whose effect can be changed globally by
     customizing voice-brighten-medium-settings.

 -- Variable: User Option
          emacspeak-slime-repl-inputed-output-personality
     Personality used for slime-repl-inputed-output-face This
     personality uses voice-bolden-and-animate whose effect can be
     changed globally by customizing voice-bolden-and-animate-settings.

 -- Variable: User Option
          emacspeak-slime-repl-output-mouseover-personality
     Personality used for slime-repl-output-mouseover-face This
     personality uses voice-bolden-and-animate whose effect can be
     changed globally by customizing voice-bolden-and-animate-settings.

 -- Variable: User Option emacspeak-slime-repl-output-personality
     Personality used for slime-repl-output-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option emacspeak-slime-repl-prompt-personality
     Personality used for slime-repl-prompt-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-slime-repl-result-personality
     Personality used for slime-repl-result-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-slime-style-warning-personality
     Personality used for slime-style-warning-face This personality uses
     voice-animate-medium whose effect can be changed globally by
     customizing voice-animate-medium-settings.

 -- Variable: User Option emacspeak-slime-warning-personality
     Personality used for slime-warning-face This personality uses
     voice-animate-medium whose effect can be changed globally by
     customizing voice-animate-medium-settings.


File: emacspeak.info,  Node: emacspeak-smart-window,  Next: emacspeak-smartparens,  Prev: emacspeak-slime,  Up: Emacspeak Commands And Options

12.168 emacspeak-smart-window
=============================

SMART-WINDOW == Smart Window switching for Emacs


File: emacspeak.info,  Node: emacspeak-smartparens,  Next: emacspeak-solitaire,  Prev: emacspeak-smart-window,  Up: Emacspeak Commands And Options

12.169 emacspeak-smartparens
============================

SMARTPARENS == Automatic insertion, wrapping and paredit-like navigation
with user defined pairs this module speech-enables smartparens.
Insertion of a matching delimiter is indicated by a short auditory icon.
Structured navigation speaks the current line with the position of point
aurally highlighted.


File: emacspeak.info,  Node: emacspeak-solitaire,  Next: emacspeak-sounds,  Prev: emacspeak-smartparens,  Up: Emacspeak Commands And Options

12.170 emacspeak-solitaire
==========================

Auditory interface to solitaire

12.170.1 emacspeak-solitaire Commands
-------------------------------------

12.170.1.1 emacspeak-solitaire-show-column
..........................................

 -- Command: emacspeak-solitaire-show-column

     Audio format current column.

12.170.1.2 emacspeak-solitaire-show-row
.......................................

 -- Command: emacspeak-solitaire-show-row

     Audio format current row.

12.170.1.3 emacspeak-solitaire-speak-coordinates
................................................

 -- Command: emacspeak-solitaire-speak-coordinates

     Speak coordinates of current position

12.170.1.4 emacspeak-solitaire-speak-row
........................................

 -- Command: emacspeak-solitaire-speak-row

     Speak current row.

12.170.1.5 emacspeak-solitaire-speak-stones
...........................................

 -- Command: emacspeak-solitaire-speak-stones

     Speak number of stones remaining.


File: emacspeak.info,  Node: emacspeak-sounds,  Next: emacspeak-speak,  Prev: emacspeak-solitaire,  Up: Emacspeak Commands And Options

12.171 emacspeak-sounds
=======================

This module provides the interface for generating auditory icons in
emacspeak.  Design goal: 1) Auditory icons should be used to provide
additional feedback, not as a gimmick.  2) The interface should be
usable at all times without the icons: e.g.  when on a machine without a
sound card.  3) General principle for when to use an icon: Convey
information about events taking place in parallel.  For instance, if
making a selection automatically moves the current focus to the next
choice, We speak the next choice, while indicating the fact that
something was selected with a sound cue.  This interface will assume the
availability of a shell command "play" that can take one or more sound
files and play them.  This module will also provide a mapping between
names in the elisp world and actual sound files.  Modules that wish to
use auditory icons should use these names, instead of actual file names.
As of Emacspeak 13.0, this module defines a themes architecture for
auditory icons.  Sound files corresponding to a given theme are found in
appropriate subdirectories of emacspeak-sounds-directory

12.171.1 emacspeak-sounds Commands
----------------------------------

12.171.1.1 emacspeak-audio-setup
................................

 -- Command: emacspeak-audio-setup (&optional prefix)
     ‘C-e (’
     ‘<fn> (’

     Call appropriate audio environment set command.

     (fn &optional PREFIX)

12.171.1.2 emacspeak-set-auditory-icon-player
.............................................

 -- Command: emacspeak-set-auditory-icon-player (player)
     ‘C-e M-a’
     ‘<fn> M-a’

     Select  player used for producing auditory icons.
     Recommended choices:

     emacspeak-serve-auditory-icon for  the wave device.
     emacspeak-queue-auditory-icon when using software TTS.

     (fn PLAYER)

12.171.1.3 emacspeak-sounds-reset-local-player
..............................................

 -- Command: emacspeak-sounds-reset-local-player

     Ask Emacspeak to use a local audio player.
     This lets me have Emacspeak switch to using audioplay on
     solaris after I’ve used it for a while from a remote session
     where it would use the more primitive speech-server based
     audio player.

12.171.1.4 emacspeak-sounds-reset-sound
.......................................

 -- Command: emacspeak-sounds-reset-sound

     Reload sound drivers.

12.171.1.5 emacspeak-sounds-select-theme
........................................

 -- Command: emacspeak-sounds-select-theme (theme)
     ‘C-e )’
     ‘<fn> )’

     Select theme for auditory icons.

     (fn THEME)

12.171.1.6 emacspeak-toggle-auditory-icons
..........................................

 -- Command: emacspeak-toggle-auditory-icons (&optional prefix)
     ‘C-e C-a’
     ‘<fn> C-a’

     Toggle use of auditory icons.
     Optional interactive PREFIX arg toggles global value.

     (fn &optional PREFIX)

12.171.2 emacspeak-sounds Options
---------------------------------

 -- Variable: User Option emacspeak-auditory-icon-function
     *Function that plays auditory icons.  play : Launches play-program
     to play.  Serve: Send a command to the speech-server to play.
     Queue : Add auditory icon to speech queue.  soxplay: Use sox to
     apply effect earwax for headphones.  Native : Use Emacs’ builtin
     sound support.  Use Serve when working with remote speech servers.

 -- Variable: User Option emacspeak-play-args
     Set this to nil if using paplay from pulseaudio.

 -- Variable: User Option emacspeak-play-program
     Name of executable that plays sound files.

 -- Variable: User Option emacspeak-sounds-default-theme
     Default theme for auditory icons.

 -- Variable: User Option emacspeak-sounds-reset-snd-module-command
     Command to reset sound module.

 -- Variable: User Option emacspeak-soxplay-command
     Name of play executable from SoX


File: emacspeak.info,  Node: emacspeak-speak,  Next: emacspeak-speedbar,  Prev: emacspeak-sounds,  Up: Emacspeak Commands And Options

12.172 emacspeak-speak
======================

This module defines the core speech services used by emacspeak.  It
depends on the speech server interface modules It protects other parts
of emacspeak from becoming dependent on the speech server modules

12.172.1 emacspeak-speak Commands
---------------------------------

12.172.1.1 emacspeak–choose-completion
......................................

 -- Command: emacspeak--choose-completion

     Choose the completion at point.

12.172.1.2 emacspeak-blink-matching-open
........................................

 -- Command: emacspeak-blink-matching-open

     Move cursor momentarily to the beginning of the sexp before point.
     Also display match context in minibuffer.

12.172.1.3 emacspeak-completion-pick-completion
...............................................

 -- Command: emacspeak-completion-pick-completion

     Pick completion and return safely where we came from.

12.172.1.4 emacspeak-completions-move-to-completion-group
.........................................................

 -- Command: emacspeak-completions-move-to-completion-group

     Move to group of choices beginning with character last
     typed. If no such group exists, then we try to search for that
     char, or dont move.

12.172.1.5 emacspeak-dial-dtk
.............................

 -- Command: emacspeak-dial-dtk (number)

     Prompt for and dial a phone NUMBER with the Dectalk.

     (fn NUMBER)

12.172.1.6 emacspeak-execute-repeatedly
.......................................

 -- Command: emacspeak-execute-repeatedly (command)

     Execute COMMAND repeatedly.

     (fn COMMAND)

12.172.1.7 emacspeak-goto-percent
.................................

 -- Command: emacspeak-goto-percent (percent)
     ‘C-e M-%’
     ‘<fn> M-%’

     Move to end  PERCENT of buffer like in View mode.
     Display is centered at point.
     Also set the mark at the position where point was.

     (fn PERCENT)

12.172.1.8 emacspeak-launch-application
.......................................

 -- Command: emacspeak-launch-application (command)
     ‘C-&’

     Launch an application.
     This command  is designed for use in a windowing environment like X.

     (fn COMMAND)

12.172.1.9 emacspeak-mark-backward-mark
.......................................

 -- Command: emacspeak-mark-backward-mark
     ‘<C-up>’

     Cycle backward through the mark ring.

12.172.1.10 emacspeak-minibuffer-choose-completion
..................................................

 -- Command: emacspeak-minibuffer-choose-completion

     Choose current completion.

12.172.1.11 emacspeak-minibuffer-next-completion
................................................

 -- Command: emacspeak-minibuffer-next-completion

     Move to next available minibuffer completion.

12.172.1.12 emacspeak-minibuffer-previous-completion
....................................................

 -- Command: emacspeak-minibuffer-previous-completion

     Move to previous available minibuffer completion.

12.172.1.13 emacspeak-open-info
...............................

 -- Command: emacspeak-open-info
     ‘C-e TAB’
     ‘<fn> TAB’

     Open Emacspeak Info Manual.

12.172.1.14 emacspeak-owindow-next-line
.......................................

 -- Command: emacspeak-owindow-next-line (count)
     ‘ESC <down>’

     Move to the next line in the other window and speak it.
     Numeric prefix arg COUNT can specify number of lines to move.

     (fn COUNT)

12.172.1.15 emacspeak-owindow-previous-line
...........................................

 -- Command: emacspeak-owindow-previous-line (count)
     ‘ESC <up>’

     Move to the next line in the other window and speak it.
     Numeric prefix arg COUNT specifies number of lines to move.

     (fn COUNT)

12.172.1.16 emacspeak-owindow-scroll-down
.........................................

 -- Command: emacspeak-owindow-scroll-down
     ‘ESC <prior>’

     Scroll down  the window that command ‘other-window’ would move to.
     Speak the window contents after scrolling.

12.172.1.17 emacspeak-owindow-scroll-up
.......................................

 -- Command: emacspeak-owindow-scroll-up
     ‘ESC <next>’

     Scroll up the window that command ‘other-window’ would move to.
     Speak the window contents after scrolling.

12.172.1.18 emacspeak-owindow-speak-line
........................................

 -- Command: emacspeak-owindow-speak-line
     ‘ESC <select>’

     Speak the current line in the other window.

12.172.1.19 emacspeak-read-next-line
....................................

 -- Command: emacspeak-read-next-line (&optional arg)
     ‘C-e <down>’
     ‘<fn> <down>’

     Read next line, specified by an offset, without moving.
     Default is to read the next line.

     (fn &optional ARG)

12.172.1.20 emacspeak-read-next-word
....................................

 -- Command: emacspeak-read-next-word (&optional arg)

     Read next word, specified as a numeric  arg, without moving.
     Default is to read the next word.

     (fn &optional ARG)

12.172.1.21 emacspeak-read-previous-line
........................................

 -- Command: emacspeak-read-previous-line (&optional arg)
     ‘C-e <up>’
     ‘<fn> <up>’

     Read previous line, specified by an offset, without moving.
     Default is to read the previous line.

     (fn &optional ARG)

12.172.1.22 emacspeak-read-previous-word
........................................

 -- Command: emacspeak-read-previous-word (&optional arg)

     Read previous word, specified as a prefix arg, without moving.
     Default is to read the previous word.

     (fn &optional ARG)

12.172.1.23 emacspeak-search
............................

 -- Command: emacspeak-search
     ‘<search>’

     Call search defined in <search>.

12.172.1.24 emacspeak-shell-command
...................................

 -- Command: emacspeak-shell-command (command)
     ‘C-e $’
     ‘<fn> $’

     Run shell command and speak its output.

     (fn COMMAND)

12.172.1.25 emacspeak-silence
.............................

 -- Command: emacspeak-silence
     ‘<silence>’

     Silence is golden. Stop speech, and pause/resume any media
     streams. Runs ‘emacspeak-silence-hook’ which can be used to
     configure which media players get silenced or paused/resumed.

12.172.1.26 emacspeak-speak-and-skip-extent-upto-char
.....................................................

 -- Command: emacspeak-speak-and-skip-extent-upto-char (char)

     Search forward from point until we hit char.
     Speak text between point and the char we hit.

     (fn CHAR)

12.172.1.27 emacspeak-speak-and-skip-extent-upto-this-char
..........................................................

 -- Command: emacspeak-speak-and-skip-extent-upto-this-char

     Speak extent delimited by point and last character typed.

12.172.1.28 emacspeak-speak-browse-buffer
.........................................

 -- Command: emacspeak-speak-browse-buffer (&optional browse)
     ‘C-e ,’
     ‘<fn> ,’

     Browse current buffer.
     Default is to speak chunk having current personality.
     Interactive prefix arg ‘browse’  repeatedly browses  through
       chunks having same personality as the current text chunk.

     (fn &optional BROWSE)

12.172.1.29 emacspeak-speak-buffer
..................................

 -- Command: emacspeak-speak-buffer (&optional arg)
     ‘C-e b’
     ‘<fn> b’

     Speak current buffer  contents.
     With prefix ARG, speaks the rest of the buffer from point.
     Negative prefix arg speaks from start of buffer to point.
      If voice lock mode is on, the paragraphs in the buffer are
     voice annotated first,  see command ‘emacspeak-speak-voice-annotate-paragraphs’.

     (fn &optional ARG)

12.172.1.30 emacspeak-speak-buffer-filename
...........................................

 -- Command: emacspeak-speak-buffer-filename (&optional filename)
     ‘C-e f’
     ‘<fn> f’

     Speak name of file being visited in current buffer.
     Speak default directory if invoked in a dired buffer,
     or when the buffer is not visiting any file.
     Interactive prefix arg ‘filename’ speaks only the final path
     component.
     The result is put in the kill ring for convenience.

     (fn &optional FILENAME)

12.172.1.31 emacspeak-speak-buffer-interactively
................................................

 -- Command: emacspeak-speak-buffer-interactively
     ‘C-e B’
     ‘<fn> B’

     Speak the start of, rest of, or the entire buffer.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire buffer.

12.172.1.32 emacspeak-speak-char
................................

 -- Command: emacspeak-speak-char (&optional prefix)
     ‘C-e c’
     ‘<fn> c’

     Speak character under point.
     Pronounces character phonetically unless  called with a PREFIX arg.

     (fn &optional PREFIX)

12.172.1.33 emacspeak-speak-char-name
.....................................

 -- Command: emacspeak-speak-char-name (char)

     tell me what this is

     (fn CHAR)

12.172.1.34 emacspeak-speak-completions-if-available
....................................................

 -- Command: emacspeak-speak-completions-if-available

     Speak completions if available.

12.172.1.35 emacspeak-speak-continuously
........................................

 -- Command: emacspeak-speak-continuously
     ‘C-e RET’
     ‘<fn> RET’

     Speak a buffer continuously.
     First prompts using the minibuffer for the kind of action to
     perform after speaking each chunk.  E.G.  speak a line at a time
     etc.  Speaking commences at current buffer position.  Pressing
     C-g breaks out, leaving point on last chunk that
     was spoken.  Any other key continues to speak the buffer.

12.172.1.36 emacspeak-speak-current-column
..........................................

 -- Command: emacspeak-speak-current-column
     ‘C-e =’
     ‘<fn> =’

     Speak the current column.

12.172.1.37 emacspeak-speak-current-field
.........................................

 -- Command: emacspeak-speak-current-field

     Speak current field.

12.172.1.38 emacspeak-speak-current-kill
........................................

 -- Command: emacspeak-speak-current-kill (&optional count)
     ‘C-e k’
     ‘<fn> k’

     Speak the current kill entry.
     This is the text that will be yanked in
     by the next <S-insertchar>. Prefix numeric arg, COUNT, specifies that the
     text that will be yanked as a result of a <S-insertchar> followed by count-1
     M-x yank-pop be spoken. The kill number that is spoken says what
     numeric prefix arg to give to command yank.

     (fn &optional COUNT)

12.172.1.39 emacspeak-speak-current-mark
........................................

 -- Command: emacspeak-speak-current-mark (count)
     ‘C-e C-SPC’
     ‘C-e C-@’
     ‘<fn> C-SPC’
     ‘<fn> C-@’

     Speak the line containing the mark.
     With no argument, speaks the line containing the mark–this is
     where ‘exchange-point-and-mark’ C-x C-x would
     jump.  Numeric prefix arg ’COUNT’ speaks line containing mark ’n’
     where ’n’ is one less than the number of times one has to jump
     using ‘set-mark-command’ to get to this marked position.  The
     location of the mark is indicated by an aural highlight achieved
     by a change in voice personality.

     (fn COUNT)

12.172.1.40 emacspeak-speak-current-percentage
..............................................

 -- Command: emacspeak-speak-current-percentage
     ‘C-e %’
     ‘<fn> %’

     Announce the percentage into the current buffer.

12.172.1.41 emacspeak-speak-current-window
..........................................

 -- Command: emacspeak-speak-current-window

     Speak contents of current window.
     Speaks entire window irrespective of point.

12.172.1.42 emacspeak-speak-date-as-seconds
...........................................

 -- Command: emacspeak-speak-date-as-seconds (time)

     Read time value as a human-readable string, return seconds.
     Seconds value is also placed in the kill-ring.

     (fn TIME)

12.172.1.43 emacspeak-speak-display-char
........................................

 -- Command: emacspeak-speak-display-char (&optional prefix)

     Display char under point using current speech display table.
     Behavior is the same as command ‘emacspeak-speak-char’
     bound to C-e c
     for characters in the range 0–127.
     Optional argument PREFIX  specifies that the character should be spoken phonetically.

     (fn &optional PREFIX)

12.172.1.44 emacspeak-speak-face-interval-and-move
..................................................

 -- Command: emacspeak-speak-face-interval-and-move

     Speaks region delimited by text in current face, and moves past the chunk.

12.172.1.45 emacspeak-speak-front-of-buffer
...........................................

 -- Command: emacspeak-speak-front-of-buffer

     Speak   the buffer from start to   point

12.172.1.46 emacspeak-speak-header-line
.......................................

 -- Command: emacspeak-speak-header-line
     ‘C-e SPC’
     ‘<fn> SPC’

     Speak header line if set.

12.172.1.47 emacspeak-speak-help
................................

 -- Command: emacspeak-speak-help (&optional arg)
     ‘C-e h’
     ‘<fn> h’

     Speak help buffer if one present.
     With prefix arg, speaks the rest of the buffer from point.
     Negative prefix arg speaks from start of buffer to point.

     (fn &optional ARG)

12.172.1.48 emacspeak-speak-help-interactively
..............................................

 -- Command: emacspeak-speak-help-interactively

     Speak the start of, rest of, or the entire help.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire help.

12.172.1.49 emacspeak-speak-hostname
....................................

 -- Command: emacspeak-speak-hostname
     ‘C-e M-h’
     ‘<fn> M-h’

     Speak host name.

12.172.1.50 emacspeak-speak-line
................................

 -- Command: emacspeak-speak-line (&optional arg)
     ‘C-e l’
     ‘<fn> l’

     Speaks current line.  With prefix ARG, speaks the rest of the line
     from point.  Negative prefix optional arg speaks from start of line to
     point.  Voicifies if option ‘voice-lock-mode’ is on.  Indicates
     indentation with a tone or a spoken message if audio indentation is in
     use see ‘emacspeak-toggle-audio-indentation’ bound to
     C-e d i.  Indicates position of point
     with an aural highlight if option ‘emacspeak-show-point’ is turned on
     –see command ‘emacspeak-toggle-show-point’ bound to
     C-e C-d.  Lines that start hidden blocks of text,
     e.g.  outline header lines, or header lines of blocks created by
     command ‘emacspeak-hide-or-expose-block’ are indicated with auditory
     icon ellipses. Presence of additional presentational overlays (created
     via property display, before-string, or after-string) is indicated
     with auditory icon ‘more’.  These can then be spoken using command
     C-e C-M-l.

     (fn &optional ARG)

12.172.1.51 emacspeak-speak-line-interactively
..............................................

 -- Command: emacspeak-speak-line-interactively
     ‘C-e L’
     ‘<fn> L’

     Speak the start of, rest of, or the entire line.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire line.

12.172.1.52 emacspeak-speak-line-number
.......................................

 -- Command: emacspeak-speak-line-number
     ‘C-e C-l’
     ‘<fn> C-l’

     Print the current buffer line number and narrowed line number of point.

12.172.1.53 emacspeak-speak-line-set-column-filter
..................................................

 -- Command: emacspeak-speak-line-set-column-filter (filter)
     ‘C-e |’
     ‘<fn> |’

     Set up filter for selectively speaking or ignoring portions of lines.
     The filter is specified as a list of pairs.
     For example, to filter  columns 1 – 10 and 20 – 25,
     specify filter as
     ((0 9) (20 25)). Filter settings are persisted across sessions.  A
     persisted filter is used as the default when prompting for a filter.
     This allows one to accumulate a set of filters for specific files like
     /var/adm/messages and /var/adm/maillog over time.
     Option emacspeak-speak-line-invert-filter determines
     the sense of the filter.

     (fn FILTER)

12.172.1.54 emacspeak-speak-load-directory-settings
...................................................

 -- Command: emacspeak-speak-load-directory-settings (&optional
          directory)

     Load a directory specific Emacspeak settings file.
     This is typically used to load up settings that are specific to
     an electronic book consisting of many files in the same
     directory.

     (fn &optional DIRECTORY)

12.172.1.55 emacspeak-speak-message-again
.........................................

 -- Command: emacspeak-speak-message-again (&optional
          from-message-cache)
     ‘C-e a’
     ‘<fn> a’

     Speak the last message from Emacs once again.
     The message is also placed in the kill ring for convenient yanking
     if ‘emacspeak-speak-message-again-should-copy-to-kill-ring’ is set.

     (fn &optional FROM-MESSAGE-CACHE)

12.172.1.56 emacspeak-speak-message-at-time
...........................................

 -- Command: emacspeak-speak-message-at-time (time message)
     ‘C-e @’
     ‘<fn> @’

     Set up ring-at-time to speak message at specified time.
     Provides simple stop watch functionality in addition to other things.
     See documentation for command run-at-time for details on time-spec.

     (fn TIME MESSAGE)

12.172.1.57 emacspeak-speak-microseconds-since-epoch
....................................................

 -- Command: emacspeak-speak-microseconds-since-epoch (ms)

     Speaks time value specified as microseconds  since epoch, e.g. as from float-time.

     (fn MS)

12.172.1.58 emacspeak-speak-milliseconds-since-epoch
....................................................

 -- Command: emacspeak-speak-milliseconds-since-epoch (ms)

     Speaks time value specified as milliseconds  since epoch, e.g. as from float-time.

     (fn MS)

12.172.1.59 emacspeak-speak-minibuffer
......................................

 -- Command: emacspeak-speak-minibuffer (&optional arg)

     Speak the minibuffer contents
      With prefix arg, speaks the rest of the buffer from point.
     Negative prefix arg speaks from start of buffer to point.

     (fn &optional ARG)

12.172.1.60 emacspeak-speak-minor-mode-line
...........................................

 -- Command: emacspeak-speak-minor-mode-line (&optional copy-as-kill)
     ‘C-e M’
     ‘<fn> M’

     Speak the minor mode-information.
     Optional  interactive prefix arg ‘copy-as-kill’ copies spoken info to kill ring.

     (fn &optional COPY-AS-KILL)

12.172.1.61 emacspeak-speak-mode-line
.....................................

 -- Command: emacspeak-speak-mode-line (&optional buffer-info)
     ‘C-e m’
     ‘<fn> m’

     Speak the mode-line.
     Speaks header-line if that is set when called non-interactively.
     Interactive prefix arg speaks buffer info.

     (fn &optional BUFFER-INFO)

12.172.1.62 emacspeak-speak-next-face-chunk
...........................................

 -- Command: emacspeak-speak-next-face-chunk

     Moves to the front of next chunk having current face.
     Speak that chunk after moving.

12.172.1.63 emacspeak-speak-next-field
......................................

 -- Command: emacspeak-speak-next-field
     ‘C-e >’
     ‘<fn> >’

     Move to and speak next field.

12.172.1.64 emacspeak-speak-next-personality-chunk
..................................................

 -- Command: emacspeak-speak-next-personality-chunk

     Moves to the front of next chunk having current personality.
     Speak that chunk after moving.

12.172.1.65 emacspeak-speak-next-window
.......................................

 -- Command: emacspeak-speak-next-window
     ‘C-e C-n’
     ‘<fn> C-n’

     Speak the next window.

12.172.1.66 emacspeak-speak-other-buffer
........................................

 -- Command: emacspeak-speak-other-buffer (buffer)
     ‘C-e M-b’
     ‘<fn> M-b’

     Speak specified buffer.
     Useful to listen to a buffer without switching  contexts.

     (fn BUFFER)

12.172.1.67 emacspeak-speak-other-window
........................................

 -- Command: emacspeak-speak-other-window (&optional arg)

     Speak contents of ‘other’ window.
     Speaks entire window irrespective of point.
     Semantics  of ‘other’ is the same as for the builtin Emacs command
     ‘other-window’.
     Optional argument ARG  specifies ‘other’ window to speak.

     (fn &optional ARG)

12.172.1.68 emacspeak-speak-overlay-properties
..............................................

 -- Command: emacspeak-speak-overlay-properties
     ‘C-e C-M-l’
     ‘<fn> C-M-l’

     Speak display, before-string or after-string property if any.

12.172.1.69 emacspeak-speak-page
................................

 -- Command: emacspeak-speak-page (&optional arg)
     ‘C-e [’
     ‘<fn> [’

     Speak a page.
     With prefix ARG, speaks rest of current page.
     Negative prefix arg will read from start of current page to point.
     If option  ‘voice-lock-mode’ is on, then it will use any defined personality.

     (fn &optional ARG)

12.172.1.70 emacspeak-speak-page-interactively
..............................................

 -- Command: emacspeak-speak-page-interactively
     ‘C-e ]’
     ‘<fn> ]’

     Speak the start of, rest of, or the entire page.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire page.

12.172.1.71 emacspeak-speak-paragraph
.....................................

 -- Command: emacspeak-speak-paragraph (&optional arg)
     ‘C-e {’
     ‘C-e p’
     ‘<fn> {’
     ‘<fn> p’

     Speak paragraph.
     With prefix arg, speaks rest of current paragraph.
     Negative prefix arg will read from start of current paragraph to point.
     If voice-lock-mode is on, then it will use any defined personality.

     (fn &optional ARG)

12.172.1.72 emacspeak-speak-paragraph-interactively
...................................................

 -- Command: emacspeak-speak-paragraph-interactively
     ‘C-e P’
     ‘<fn> P’

     Speak the start of, rest of, or the entire paragraph.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire paragraph.

12.172.1.73 emacspeak-speak-preceding-char
..........................................

 -- Command: emacspeak-speak-preceding-char

     Speak character before point.

12.172.1.74 emacspeak-speak-predefined-window
.............................................

 -- Command: emacspeak-speak-predefined-window (&optional arg)
     ‘C-e 9’
     ‘C-e 8’
     ‘C-e 7’
     ‘C-e 6’
     ‘C-e 5’
     ‘C-e 4’
     ‘C-e 3’
     ‘C-e 2’
     ‘C-e 1’
     ‘C-e 0’
     ‘<fn> 9’
     ‘<fn> 8’
     ‘<fn> 7’
     ‘<fn> 6’
     ‘<fn> 5’
     ‘<fn> 4’
     ‘<fn> 3’
     ‘<fn> 2’
     ‘<fn> 1’
     ‘<fn> 0’

     Speak one of the first 10 windows on the screen.
     Speaks entire window irrespective of point.
     In general, you’ll never have Emacs split the screen into more than
     two or three.
     Argument ARG determines the ’other’ window to speak.
     Semantics  of ‘other’ is the same as for the builtin Emacs command
     ‘other-window’.

     (fn &optional ARG)

12.172.1.75 emacspeak-speak-previous-face-chunk
...............................................

 -- Command: emacspeak-speak-previous-face-chunk

     Moves to the front of previous chunk having current face.
     Speak that chunk after moving.

12.172.1.76 emacspeak-speak-previous-field
..........................................

 -- Command: emacspeak-speak-previous-field
     ‘C-e <’
     ‘<fn> <’

     Move to previous field and speak it.

12.172.1.77 emacspeak-speak-previous-personality-chunk
......................................................

 -- Command: emacspeak-speak-previous-personality-chunk

     Moves to the front of previous chunk having current personality.
     Speak that chunk after moving.

12.172.1.78 emacspeak-speak-previous-window
...........................................

 -- Command: emacspeak-speak-previous-window
     ‘C-e C-p’
     ‘<fn> C-p’

     Speak the previous window.

12.172.1.79 emacspeak-speak-rectangle
.....................................

 -- Command: emacspeak-speak-rectangle (start end)
     ‘C-e R’
     ‘<fn> R’

     Speak a rectangle of text.
     Rectangle is delimited by point and mark.  When call from a
     program, arguments specify the START and END of the rectangle.

     (fn START END)

12.172.1.80 emacspeak-speak-region
..................................

 -- Command: emacspeak-speak-region (start end)
     ‘C-e r’
     ‘<fn> r’

     Speak region.
     Argument START  and END specify region to speak.

     (fn START END)

12.172.1.81 emacspeak-speak-rest-of-buffer
..........................................

 -- Command: emacspeak-speak-rest-of-buffer
     ‘C-e n’
     ‘<fn> n’

     Speak remainder of the buffer starting at point

12.172.1.82 emacspeak-speak-run-shell-command
.............................................

 -- Command: emacspeak-speak-run-shell-command (command &optional
          read-as-csv)
     ‘C-e !’
     ‘<fn> !’

     Invoke shell COMMAND and display its output as a table. The
     results are placed in a buffer in Emacspeak’s table browsing
     mode. Optional interactive prefix arg read-as-csv interprets the
     result as csv. . Use this for running shell commands that produce
     tabulated output. This command should be used for shell commands
     that produce tabulated output that works with Emacspeak’s table
     recognizer. Verify this first by running the command in a shell
     and executing command ‘emacspeak-table-display-table-in-region’
     normally bound to C-e M-i.

     (fn COMMAND &optional READ-AS-CSV)

12.172.1.83 emacspeak-speak-seconds-since-epoch
...............................................

 -- Command: emacspeak-speak-seconds-since-epoch (seconds)

     Speaks time value specified as seconds  since epoch, e.g. as from float-time.

     (fn SECONDS)

12.172.1.84 emacspeak-speak-sentence
....................................

 -- Command: emacspeak-speak-sentence (&optional arg)

     Speak current sentence.
     With prefix ARG, speaks the rest of the sentence  from point.
     Negative prefix arg speaks from start of sentence to point.

     (fn &optional ARG)

12.172.1.85 emacspeak-speak-set-display-table
.............................................

 -- Command: emacspeak-speak-set-display-table (&optional prefix)

     Sets up buffer specific speech display table that controls how
     special characters are spoken. Interactive prefix argument causes
     setting to be global.

     (fn &optional PREFIX)

12.172.1.86 emacspeak-speak-set-mode-punctuations
.................................................

 -- Command: emacspeak-speak-set-mode-punctuations (setting)
     ‘C-e d m’
     ‘<fn> d m’

     Set punctuation mode for all buffers in current mode.

     (fn SETTING)

12.172.1.87 emacspeak-speak-sexp
................................

 -- Command: emacspeak-speak-sexp (&optional arg)
     ‘C-e '’
     ‘<fn> '’

     Speak current sexp.
     With prefix ARG, speaks the rest of the sexp  from point.
     Negative prefix arg speaks from start of sexp to point.

     (fn &optional ARG)

12.172.1.88 emacspeak-speak-sexp-interactively
..............................................

 -- Command: emacspeak-speak-sexp-interactively

     Speak the start of, rest of, or the entire sexp.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire sexp.

12.172.1.89 emacspeak-speak-show-active-network-interfaces
..........................................................

 -- Command: emacspeak-speak-show-active-network-interfaces (&optional
          address)
     ‘C-e I’
     ‘<fn> I’

     Shows all active network interfaces in the echo area.
     With interactive prefix argument ADDRESS it prompts for a
     specific interface and shows its address. The address is
     also copied to the kill ring for convenient yanking.

     (fn &optional ADDRESS)

12.172.1.90 emacspeak-speak-skim-buffer
.......................................

 -- Command: emacspeak-speak-skim-buffer

     Skim the current buffer  a paragraph at a time.

12.172.1.91 emacspeak-speak-skim-next-paragraph
...............................................

 -- Command: emacspeak-speak-skim-next-paragraph

     Skim next paragraph.

12.172.1.92 emacspeak-speak-skim-paragraph
..........................................

 -- Command: emacspeak-speak-skim-paragraph

     Skim paragraph.
     Skimming a paragraph results in the speech speeding up after
     the first clause.
     Speech is scaled by the value of dtk-speak-skim-scale

12.172.1.93 emacspeak-speak-spaces-at-point
...........................................

 -- Command: emacspeak-speak-spaces-at-point
     ‘C-e C-M-SPC’
     ‘C-e C-M-@’
     ‘<fn> C-M-SPC’
     ‘<fn> C-M-@’

     Speak the white space at point.

12.172.1.94 emacspeak-speak-spell-current-word
..............................................

 -- Command: emacspeak-speak-spell-current-word

     Spell word at  point.

12.172.1.95 emacspeak-speak-text-range
......................................

 -- Command: emacspeak-speak-text-range (property)

     Speak text range identified by this PROPERTY.

     (fn PROPERTY)

12.172.1.96 emacspeak-speak-this-face-chunk
...........................................

 -- Command: emacspeak-speak-this-face-chunk

     Speak chunk of text around point that has current face.

12.172.1.97 emacspeak-speak-this-personality-chunk
..................................................

 -- Command: emacspeak-speak-this-personality-chunk

     Speak chunk of text around point that has current
     personality.

12.172.1.98 emacspeak-speak-time
................................

 -- Command: emacspeak-speak-time (&optional world)
     ‘C-e t’
     ‘<fn> t’

     Speak the time.
     Optional interactive prefix arg ‘C-u’invokes world clock.
     Timezone is specified using minibuffer completion.
     Second interactive prefix sets clock to new timezone.

     (fn &optional WORLD)

12.172.1.99 emacspeak-speak-version
...................................

 -- Command: emacspeak-speak-version (&optional speak-rev)
     ‘C-e V’
     ‘<fn> V’

     Announce version information for running emacspeak.
     Optional interactive prefix arg ‘speak-rev’ speaks only the Git revision number.

     (fn &optional SPEAK-REV)

12.172.1.100 emacspeak-speak-visual-line
........................................

 -- Command: emacspeak-speak-visual-line

     Speaks current visual line.
     Cues the start of a physical line with auditory icon ‘left’.

12.172.1.101 emacspeak-speak-voice-annotate-paragraphs
......................................................

 -- Command: emacspeak-speak-voice-annotate-paragraphs

     Locate paragraphs and voice annotate the first word.
     Here, paragraph is taken to mean a chunk of text preceded by a blank line.
     Useful to do this before you listen to an entire buffer.

12.172.1.102 emacspeak-speak-which-function
...........................................

 -- Command: emacspeak-speak-which-function
     ‘C-e M-w’
     ‘<fn> M-w’

     Speak which function we are on.  Uses which-function from
     which-func without turning that mode on.  We actually use
     semantic to do the work.

12.172.1.103 emacspeak-speak-window-information
...............................................

 -- Command: emacspeak-speak-window-information
     ‘C-e C-w’
     ‘<fn> C-w’

     Speaks information about current window.

12.172.1.104 emacspeak-speak-word
.................................

 -- Command: emacspeak-speak-word (&optional arg)
     ‘C-e w’
     ‘<fn> w’

     Speak current word.
     With prefix ARG, speaks the rest of the word from point.
     Negative prefix arg speaks from start of word to point.
     If executed  on the same buffer position a second time, the word is
     spelled out  instead of being spoken.

     (fn &optional ARG)

12.172.1.105 emacspeak-speak-word-interactively
...............................................

 -- Command: emacspeak-speak-word-interactively

     Speak the start of, rest of, or the entire word.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire word.

12.172.1.106 emacspeak-speak-world-clock
........................................

 -- Command: emacspeak-speak-world-clock (zone &optional set)

     Display current date and time  for specified zone.
     Optional second arg ‘set’ sets the TZ environment variable as well.

     (fn ZONE &optional SET)

12.172.1.107 emacspeak-switch-to-reference-buffer
.................................................

 -- Command: emacspeak-switch-to-reference-buffer

     Switch back to buffer that generated completions.

12.172.1.108 emacspeak-toggle-action-mode
.........................................

 -- Command: emacspeak-toggle-action-mode (&optional prefix)

     Toggle state of  Emacspeak  action mode.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.109 emacspeak-toggle-audio-indentation
...............................................

 -- Command: emacspeak-toggle-audio-indentation (&optional prefix)
     ‘C-e d i’
     ‘<fn> d i’

     Toggle state of  Emacspeak  audio indentation.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.
     Specifying the method of indentation as ‘tones’
     results in the Dectalk producing a tone whose length is a function of the
     line’s indentation.  Specifying ‘speak’
     results in the number of initial spaces being spoken.

12.172.1.110 emacspeak-toggle-character-echo
............................................

 -- Command: emacspeak-toggle-character-echo (&optional prefix)
     ‘C-e d k’
     ‘<fn> d k’

     Toggle state of  Emacspeak  character echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.111 emacspeak-toggle-comint-autospeak
..............................................

 -- Command: emacspeak-toggle-comint-autospeak (&optional prefix)

     Toggle state of Emacspeak comint autospeak.
     When turned on, comint output is automatically spoken.  Turn this on if
     you want your shell to speak its results.  Interactive
     PREFIX arg means toggle the global default value, and then
     set the current local value to the result.

12.172.1.112 emacspeak-toggle-comint-output-monitor
...................................................

 -- Command: emacspeak-toggle-comint-output-monitor (&optional prefix)
     ‘C-e o’
     ‘<fn> o’

     Toggle state of Emacspeak comint monitor.
     When turned on, comint output is automatically spoken.  Turn this on if
     you want your shell to speak its results.  Interactive
     PREFIX arg means toggle the global default value, and then
     set the current local value to the result.

12.172.1.113 emacspeak-toggle-header-line
.........................................

 -- Command: emacspeak-toggle-header-line

     Toggle Emacspeak’s default header line.

12.172.1.114 emacspeak-toggle-inaudible-or-comint-autospeak
...........................................................

 -- Command: emacspeak-toggle-inaudible-or-comint-autospeak
     ‘C-e C-q’
     ‘<fn> C-q’

     Toggle comint-autospeak when in a comint buffer.
     Otherwise call voice-setup-toggle-silence-personality which toggles the
     personality under point.

12.172.1.115 emacspeak-toggle-line-echo
.......................................

 -- Command: emacspeak-toggle-line-echo (&optional prefix)
     ‘C-e d l’
     ‘<fn> d l’

     Toggle state of  Emacspeak  line echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.116 emacspeak-toggle-mail-alert
........................................

 -- Command: emacspeak-toggle-mail-alert (&optional prefix)
     ‘C-e M-m’
     ‘<fn> M-m’

     Toggle state of  Emacspeak  mail alert.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.
     Turning on this option results in Emacspeak producing an auditory icon
     indicating the arrival  of new mail when displaying the mode line.

12.172.1.117 emacspeak-toggle-show-point
........................................

 -- Command: emacspeak-toggle-show-point (&optional prefix)
     ‘C-e C-d’
     ‘<fn> C-d’

     Toggle state of  Emacspeak-show-point.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.118 emacspeak-toggle-speak-line-invert-filter
......................................................

 -- Command: emacspeak-toggle-speak-line-invert-filter (&optional
          prefix)
     ‘C-e \’
     ‘<fn> \’

     Toggle state of   how column filter is interpreted.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.119 emacspeak-toggle-speak-messages
............................................

 -- Command: emacspeak-toggle-speak-messages (&optional prefix)
     ‘C-e q’
     ‘<fn> q’

     Toggle the state of whether emacspeak echoes messages.

12.172.1.120 emacspeak-toggle-word-echo
.......................................

 -- Command: emacspeak-toggle-word-echo (&optional prefix)
     ‘C-e d w’
     ‘<fn> d w’

     Toggle state of  Emacspeak  word echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.172.1.121 emacspeak-use-customized-blink-paren
.................................................

 -- Command: emacspeak-use-customized-blink-paren

     A customized blink-paren to speak  matching opening paren.
     We need to call this in case Emacs is anal and loads its own
     builtin blink-paren function which does not talk.

12.172.1.122 emacspeak-view-notifications
.........................................

 -- Command: emacspeak-view-notifications
     ‘C-h T’
     ‘<f1> T’
     ‘<help> T’

     Display notifications.

12.172.1.123 emacspeak-voiceify-rectangle
.........................................

 -- Command: emacspeak-voiceify-rectangle (start end &optional
          personality)

     Voicify the current rectangle.
     When calling from a program,arguments are
     START END personality
     Prompts for PERSONALITY  with completion when called interactively.

     (fn START END &optional PERSONALITY)

12.172.1.124 emacspeak-voiceify-region
......................................

 -- Command: emacspeak-voiceify-region (start end &optional personality)

     Voicify the current region.
     When calling from a program,arguments are
     START END personality.
     Prompts for PERSONALITY  with completion when called interactively.

     (fn START END &optional PERSONALITY)

12.172.1.125 emacspeak-zap-tts
..............................

 -- Command: emacspeak-zap-tts
     ‘C-e d z’
     ‘<fn> d z’

     Send this command to the TTS directly.

12.172.2 emacspeak-speak Options
--------------------------------

 -- Variable: User Option emacspeak-audio-indentation
     Option indicating if line indentation is cued.  If non-nil , then
     speaking a line indicates its indentation.  You can use command
     ‘emacspeak-toggle-audio-indentation’ bound to C-e d i to toggle
     this setting..

 -- Variable: User Option emacspeak-audio-indentation-method
     Current technique used to cue indentation.  Default is ‘speak’.
     You can specify ‘tone’ for producing a beep indicating the
     indentation.  Automatically becomes local in any buffer where it is
     set.

 -- Variable: User Option emacspeak-character-echo
     If t, then emacspeak echoes characters as you type.  You can use
     C-e d k to toggle this setting.

 -- Variable: User Option emacspeak-comint-autospeak
     Says if comint output is automatically spoken.  You can use
     ‘emacspeak-toggle-comint-autospeak‘ bound to M-x
     emacspeak-toggle-comint-autospeak to toggle this setting.

 -- Variable: User Option emacspeak-line-echo
     If t, then emacspeak echoes lines as you type.  You can use C-e d l
     to set this option.

 -- Variable: User Option emacspeak-mail-alert
     Option to indicate cueing of new mail.  If t, emacspeak will alert
     you about newly arrived mail with an auditory icon when displaying
     the mode line.  You can use command ‘emacspeak-toggle-mail-alert’
     bound to C-e M-m to set this option.  If you have online access to
     a voicemail drop, you can have a voice-mail alert set up by
     specifying the location of the voice-mail drop via custom option
     emacspeak-voicemail-spool-file.

 -- Variable: User Option emacspeak-mail-alert-interval
     Interval in seconds between mail alerts for the same pending
     message.

 -- Variable: User Option emacspeak-mail-spool-file
     Mail spool file examined to alert you about newly arrived mail.

 -- Variable: User Option emacspeak-search
     Default search engine.

 -- Variable: User Option emacspeak-silence-hook
     Functions run after emacspeak-silence is called.

 -- Variable: User Option emacspeak-speak-default-os-coding-system
     List of coding systems on this platform.

 -- Variable: User Option emacspeak-speak-directory-settings
     Name of file that holds directory specific settings.

 -- Variable: User Option emacspeak-speak-embedded-url-pattern
     Pattern to recognize embedded URLs.

 -- Variable: User Option emacspeak-speak-filter-persistent-store
     File where emacspeak filters are persisted.

 -- Variable: User Option emacspeak-speak-line-column-filter
     List that specifies columns to be filtered.  The list when set
     holds pairs of start-col.end-col pairs that specifies the columns
     that should not be spoken.  Each column contains a single character
     –this is inspired by cut -c on UNIX.

 -- Variable: User Option
          emacspeak-speak-load-directory-settings-quietly
     User option that affects loading of directory specific settings.
     If set to T,Emacspeak will not prompt before loading directory
     specific settings.

 -- Variable: User Option emacspeak-speak-maximum-line-length
     Threshold for determining ‘long’ lines.  Emacspeak will ask for
     confirmation before speaking lines that are longer than this
     length.  This is to avoid accidentally opening a binary file and
     torturing the speech synthesizer with a long string of gibberish.

 -- Variable: User Option emacspeak-speak-messages
     Option indicating if messages are spoken.  If nil, emacspeak will
     not speak messages as they are echoed to the message area.  You can
     use command ‘emacspeak-toggle-speak-messages’ bound to C-e q.

 -- Variable: User Option emacspeak-speak-paragraph-personality
     Personality used to mark start of paragraph.

 -- Variable: User Option emacspeak-speak-time-format-string
     Format string that specifies how the time should be spoken.  See
     the documentation for function ‘format-time-string’

 -- Variable: User Option emacspeak-speak-zoneinfo-directory
     Directory containing timezone data.

 -- Variable: User Option emacspeak-use-header-line
     Use default header line defined by Emacspeak for buffers that dont
     customize the header.

 -- Variable: User Option emacspeak-voicemail-spool-file
     Mail spool file examined to alert you about newly arrived
     voicemail.

 -- Variable: User Option emacspeak-word-echo
     If t, then emacspeak echoes words as you type.  You can use C-e d w
     to toggle this option.


File: emacspeak.info,  Node: emacspeak-speedbar,  Next: emacspeak-sql,  Prev: emacspeak-speak,  Up: Emacspeak Commands And Options

12.173 emacspeak-speedbar
=========================

This module advises speedbar.el for use with Emacs.  The latest speedbar
can be obtained from ftp://ftp.ultranet.com/pub/zappo/ This module
ensures that speedbar works smoothly outside a windowing system in
addition to speech enabling all interactive commands.  Emacspeak also
adds an Emacspeak environment specific entry point to speedbar
–emacspeak-speedbar-goto-speedbar– and binds this

12.173.1 emacspeak-speedbar Commands
------------------------------------

12.173.1.1 emacspeak-speedbar-click
...................................

 -- Command: emacspeak-speedbar-click

     Does the equivalent of the mouse click from the keyboard

12.173.1.2 emacspeak-speedbar-goto-speedbar
...........................................

 -- Command: emacspeak-speedbar-goto-speedbar

     Switch to the speedbar

12.173.2 emacspeak-speedbar Options
-----------------------------------

 -- Variable: User Option emacspeak-speedbar-button-personality
     personality used for speedbar buttons

 -- Variable: User Option emacspeak-speedbar-default-personality
     Default personality used in speedbar buffers

 -- Variable: User Option emacspeak-speedbar-directory-personality
     Speedbar personality for directory buttons

 -- Variable: User Option emacspeak-speedbar-file-personality
     Personality used for file buttons

 -- Variable: User Option emacspeak-speedbar-highlight-personality
     Personality used for for speedbar highlight.

 -- Variable: User Option emacspeak-speedbar-selected-personality
     Personality used to indicate speedbar selection

 -- Variable: User Option emacspeak-speedbar-tag-personality
     Personality used for speedbar tags


File: emacspeak.info,  Node: emacspeak-sql,  Next: emacspeak-sudoku,  Prev: emacspeak-speedbar,  Up: Emacspeak Commands And Options

12.174 emacspeak-sql
====================

This module speech enables sql-mode– available from
http://paddington.ic.uva.nl/public/sql-modes.zip sql-mode.el implemented
by the above package sets up an Emacs to SQL interface where you can
interactively evaluate SQL expressions.


File: emacspeak.info,  Node: emacspeak-sudoku,  Next: emacspeak-supercite,  Prev: emacspeak-sql,  Up: Emacspeak Commands And Options

12.175 emacspeak-sudoku
=======================

Playing SuDoku using speech output.  Written to discover what type of
feedback one needs for this task.  See
http://emacspeak.blogspot.com/2006/02/playing-sudoku-using-auditory-feedback.html

12.175.1 emacspeak-sudoku Commands
----------------------------------

12.175.1.1 emacspeak-sudoku-board-columns-summarize
...................................................

 -- Command: emacspeak-sudoku-board-columns-summarize

     Summarize columns — speaks number of remaining cells.

12.175.1.2 emacspeak-sudoku-board-distribution-summarize
........................................................

 -- Command: emacspeak-sudoku-board-distribution-summarize

     Shows distribution of filled numbers.

12.175.1.3 emacspeak-sudoku-board-rows-summarize
................................................

 -- Command: emacspeak-sudoku-board-rows-summarize

     Summarize rows — speaks number of remaining cells.

12.175.1.4 emacspeak-sudoku-board-sub-squares-summarize
.......................................................

 -- Command: emacspeak-sudoku-board-sub-squares-summarize

     Summarize sub-squares — speaks number of remaining cells.

12.175.1.5 emacspeak-sudoku-board-summarizer
............................................

 -- Command: emacspeak-sudoku-board-summarizer

     Dispatch to  appropriate summarizer.

     d   Number Distribution
     r   Row Distribution
     c   Column Distribution
     s   Sub-square Distribution.


12.175.1.6 emacspeak-sudoku-down-sub-square
...........................................

 -- Command: emacspeak-sudoku-down-sub-square

     Move to top-left corner of  sub-square below current one.

12.175.1.7 emacspeak-sudoku-erase-current-column
................................................

 -- Command: emacspeak-sudoku-erase-current-column

     Erase current column.

12.175.1.8 emacspeak-sudoku-erase-current-row
.............................................

 -- Command: emacspeak-sudoku-erase-current-row

     Erase current row.

12.175.1.9 emacspeak-sudoku-erase-current-sub-square
....................................................

 -- Command: emacspeak-sudoku-erase-current-sub-square

     Erase current sub-square.

12.175.1.10 emacspeak-sudoku-hint
.................................

 -- Command: emacspeak-sudoku-hint

     Provide hint for current cell.

12.175.1.11 emacspeak-sudoku-history-pop
........................................

 -- Command: emacspeak-sudoku-history-pop

     Pop saved state off stack and redraw board.

12.175.1.12 emacspeak-sudoku-history-push
.........................................

 -- Command: emacspeak-sudoku-history-push

     Push current state on to history stack.

12.175.1.13 emacspeak-sudoku-how-many-remaining
...............................................

 -- Command: emacspeak-sudoku-how-many-remaining

     Speak number of remaining squares to fill.

12.175.1.14 emacspeak-sudoku-next-sub-square
............................................

 -- Command: emacspeak-sudoku-next-sub-square

     Move to top-left corner of next sub-square.

12.175.1.15 emacspeak-sudoku-previous-sub-square
................................................

 -- Command: emacspeak-sudoku-previous-sub-square

     Move to top-left corner of previous sub-square.

12.175.1.16 emacspeak-sudoku-speak-current-cell-coordinates
...........................................................

 -- Command: emacspeak-sudoku-speak-current-cell-coordinates

     speak current cell coordinates.

12.175.1.17 emacspeak-sudoku-speak-current-cell-value
.....................................................

 -- Command: emacspeak-sudoku-speak-current-cell-value

     Speak value in current cell.

12.175.1.18 emacspeak-sudoku-speak-current-column
.................................................

 -- Command: emacspeak-sudoku-speak-current-column

     Speak current column.

12.175.1.19 emacspeak-sudoku-speak-current-row
..............................................

 -- Command: emacspeak-sudoku-speak-current-row

     Speak current row.

12.175.1.20 emacspeak-sudoku-speak-current-sub-square
.....................................................

 -- Command: emacspeak-sudoku-speak-current-sub-square

     Speak current sub-square.

12.175.1.21 emacspeak-sudoku-speak-remaining-in-column
......................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-column

     Speaks number of remaining cells in current column.

12.175.1.22 emacspeak-sudoku-speak-remaining-in-row
...................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-row

     Speaks number of remaining cells in current row.

12.175.1.23 emacspeak-sudoku-speak-remaining-in-sub-square
..........................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-sub-square

     Speaks number of remaining cells in current sub-square.

12.175.1.24 emacspeak-sudoku-up-sub-square
..........................................

 -- Command: emacspeak-sudoku-up-sub-square

     Move to top-left corner of  sub-square above current one.


File: emacspeak.info,  Node: emacspeak-supercite,  Next: emacspeak-table,  Prev: emacspeak-sudoku,  Up: Emacspeak Commands And Options

12.176 emacspeak-supercite
==========================

Speech-enable supercite.


File: emacspeak.info,  Node: emacspeak-table,  Next: emacspeak-table-ui,  Prev: emacspeak-supercite,  Up: Emacspeak Commands And Options

12.177 emacspeak-table
======================

Implements a module that provides a high level interface to tabulated
information.


File: emacspeak.info,  Node: emacspeak-table-ui,  Next: emacspeak-tabulate,  Prev: emacspeak-table,  Up: Emacspeak Commands And Options

12.178 emacspeak-table-ui
=========================

User interface to tables

12.178.1 emacspeak-table-ui Commands
------------------------------------

12.178.1.1 emacspeak-table-copy-current-element-to-kill-ring
............................................................

 -- Command: emacspeak-table-copy-current-element-to-kill-ring
     ‘C-e C-t w’
     ‘<fn> C-t w’

     Copy current table element to kill ring.

12.178.1.2 emacspeak-table-copy-current-element-to-register
...........................................................

 -- Command: emacspeak-table-copy-current-element-to-register (register)
     ‘C-e C-t x’
     ‘<fn> C-t x’

     Copy current table element to specified register.

     (fn REGISTER)

12.178.1.3 emacspeak-table-copy-to-clipboard
............................................

 -- Command: emacspeak-table-copy-to-clipboard
     ‘C-e C-t k’
     ‘<fn> C-t k’

     Copy table in current buffer to the table clipboard.
     Current buffer must be in emacspeak-table mode.

12.178.1.4 emacspeak-table-display-table-in-region
..................................................

 -- Command: emacspeak-table-display-table-in-region (start end)
     ‘C-e M-i’
     ‘<fn> M-i’

     Recognize tabular data in current region and display it in table
     browsing mode in a a separate buffer.
     emacspeak table mode is designed to let you browse tabular data using
     all the power of the two-dimensional spatial layout while giving you
     sufficient contextual information.  The tables subdirectory of the
     emacspeak distribution contains some sample tables –these are the
     CalTrain schedules.  Execute command ‘describe-mode’ bound to
     C-h m in a buffer that is in emacspeak table mode to read
     the documentation on the table browser.

     (fn START END)

12.178.1.5 emacspeak-table-find-csv-file
........................................

 -- Command: emacspeak-table-find-csv-file (filename)
     ‘C-e C-t ,’
     ‘<fn> C-t ,’

     Process a csv (comma separated values) file.
     The processed  data is presented using emacspeak table navigation.

     (fn FILENAME)

12.178.1.6 emacspeak-table-find-file
....................................

 -- Command: emacspeak-table-find-file (filename)

     Open a file containing table data and display it in table mode.
     emacspeak table mode is designed to let you browse tabular data using
     all the power of the two-dimensional spatial layout while giving you
     sufficient contextual information.  The etc/tables subdirectory of the
     emacspeak distribution contains some sample tables –these are the
     CalTrain schedules.  Execute command ‘describe-mode’ bound to
     C-h m in a buffer that is in emacspeak table mode to read
     the documentation on the table browser.

     (fn FILENAME)

12.178.1.7 emacspeak-table-goto
...............................

 -- Command: emacspeak-table-goto (row column)
     ‘C-e C-t j’
     ‘<fn> C-t j’

     Prompt for a table cell coordinates and jump to it.

     (fn ROW COLUMN)

12.178.1.8 emacspeak-table-goto-bottom
......................................

 -- Command: emacspeak-table-goto-bottom
     ‘C-e C-t B’
     ‘<fn> C-t B’
     ‘C-e C-t M->’
     ‘<fn> C-t M->’

     Goes to the bottom of the current column.

12.178.1.9 emacspeak-table-goto-left
....................................

 -- Command: emacspeak-table-goto-left
     ‘C-e C-t A’
     ‘C-e C-t <’
     ‘<fn> C-t A’
     ‘<fn> C-t <’

     Goes to the left of the current row.

12.178.1.10 emacspeak-table-goto-right
......................................

 -- Command: emacspeak-table-goto-right
     ‘C-e C-t E’
     ‘C-e C-t >’
     ‘<fn> C-t E’
     ‘<fn> C-t >’

     Goes to the right of the current row.

12.178.1.11 emacspeak-table-goto-top
....................................

 -- Command: emacspeak-table-goto-top
     ‘C-e C-t T’
     ‘<fn> C-t T’
     ‘C-e C-t M-<’
     ‘<fn> C-t M-<’

     Goes to the top of the current column.

12.178.1.12 emacspeak-table-mode
................................

 -- Command: emacspeak-table-mode

     Major mode for browsing tables.
     Table mode is designed to allow speech users to browse tabular data
     with full contextual feedback while retaining all the power of the
     two-dimensional spatial layout of tables.

     In table mode, the arrow keys move between cells of the table.
     Emacspeak speaks the cell contents in a user-customizable way.  The
     visual display is kept in sync with the speech you hear; however
     Emacspeak is examining the entire table in order to speak the current
     cell content intelligently.

     You can interactively specify that emacspeak should speak either the row or
     column header (or both) while speaking each cell.  You can also specify a row
     or column filter that should be applied when speaking entire rows or columns
     –this lets you view slices of a table.  You can move to a specific row or
     column by searching the cell contents or by searching the row or column
     headers to locate items of interest.

     Here is a short description of the special commands provided in this mode.

     The next four commands help you move to the edges of the table:

     E               emacspeak-table-goto-right
     A               emacspeak-table-goto-left
     B               emacspeak-table-goto-bottom
     T               emacspeak-table-goto-top

     The next two commands let you search the table.
     The commands ask you if you want to search rows or columns.
     When searching headers remember that row 0 is the column header, and that column 0 is the row header.

     h               emacspeak-table-search-headers
     s               emacspeak-table-search

     The next command lets you specify how cell contents should be spoken.  Specify
     one of: ‘b’ for both, ‘c’ for column, ‘r’ for row, ‘f’ for row filtering and
     ‘g’ for column filtering. –table cells with then be spoken with both (or
     either)row and column headers, or with the filter applied.

     a               emacspeak-table-select-automatic-speaking-method

     The next set of commands speak the current table cell:

     .               emacspeak-table-speak-coordinates
     b               emacspeak-table-speak-both-headers-and-element
     SPC             emacspeak-table-speak-current-element
     c               emacspeak-table-speak-column-header-and-element
     r               e macspeak-table-speak-row-header-and-element

     The next set of commands navigate the table:

     right               emacspeak-table-next-column
     left               emacspeak-table-previous-column
     down               emacspeak-table-next-row
     up               emacspeak-table-previous-row
     j               emacspeak-table-goto
     S-tab               emacspeak-table-previous-column
     TAB               emacspeak-table-next-column

     Row and Column Filtering

     Filtering is designed to let you view slices of a table.
     They are specified as lists of numbers and strings.
     The concept is best explained with an example.

     A row filter specifies which of the entries in the current row should be
     spoken.Entries are numbered starting with 0.  Thus, when working with a table
     having 8 columns, a row filter of (1 2 3) will speak only entries 1 2 and 3.
     Use the sample tables in etc/tables   to familiarize yourself with this
     feature. Note that you can intersperse meaningful strings in the list that
     specifies the filter.

     Full List Of Keybindings:
     key             binding
     —             ——-

     C-b		emacspeak-table-previous-column
     C-f		emacspeak-table-next-column
     TAB		emacspeak-table-next-column
     C-n		emacspeak-table-next-row
     C-p		emacspeak-table-previous-row
     ESC		Prefix Command
     SPC		emacspeak-table-speak-current-element
     #		emacspeak-table-sort-on-current-column
     ,		emacspeak-table-find-csv-file
     .		emacspeak-table-speak-coordinates
     <		emacspeak-table-goto-left
     =		emacspeak-table-speak-dimensions
     >		emacspeak-table-goto-right
     A		emacspeak-table-goto-left
     B		emacspeak-table-goto-bottom
     C		emacspeak-table-search-column
     E		emacspeak-table-goto-right
     Q		emacspeak-kill-buffer-quietly
     R		emacspeak-table-search-row
     T		emacspeak-table-goto-top
     a		emacspeak-table-select-automatic-speaking-method
     b		emacspeak-table-speak-both-headers-and-element
     c		emacspeak-table-speak-column-header-and-element
     f		emacspeak-table-speak-row-filtered
     g		emacspeak-table-speak-column-filtered
     h		emacspeak-table-search-headers
     j		emacspeak-table-goto
     k		emacspeak-table-copy-to-clipboard
     n		emacspeak-table-next-row
     p		emacspeak-table-previous-row
     q		quit-window
     r		emacspeak-table-speak-row-header-and-element
     s		emacspeak-table-search
     v		emacspeak-table-view-csv-buffer
     w		emacspeak-table-copy-current-element-to-kill-ring
     x		emacspeak-table-copy-current-element-to-register
     <S-tab>		emacspeak-table-previous-column
     <down>		emacspeak-table-next-row
     <left>		emacspeak-table-previous-column
     <right>		emacspeak-table-next-column
     <up>		emacspeak-table-previous-row

     M-<		emacspeak-table-goto-top
     M->		emacspeak-table-goto-bottom
     M-l		emacspeak-table-ui-filter-load
     M-s		emacspeak-table-ui-filter-save

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘emacspeak-table-mode-hook’, as the final or penultimate step
     during initialization.

12.178.1.13 emacspeak-table-next-column
.......................................

 -- Command: emacspeak-table-next-column (&optional count)
     ‘C-e C-t TAB’
     ‘C-e C-t C-f’
     ‘C-e C-t <right>’
     ‘<fn> C-t TAB’
     ‘<fn> C-t C-f’
     ‘<fn> C-t <right>’

     Move to the next column if possible

     (fn &optional COUNT)

12.178.1.14 emacspeak-table-next-row
....................................

 -- Command: emacspeak-table-next-row (&optional count)
     ‘C-e C-t n’
     ‘C-e C-t C-n’
     ‘C-e C-t <down>’
     ‘<fn> C-t n’
     ‘<fn> C-t C-n’
     ‘<fn> C-t <down>’

     Move to the next row if possible

     (fn &optional COUNT)

12.178.1.15 emacspeak-table-paste-from-clipboard
................................................

 -- Command: emacspeak-table-paste-from-clipboard

     Paste the emacspeak table clipboard into the current buffer.
     Use the major  mode of this buffer to  decide what kind of table
     markup to use.

12.178.1.16 emacspeak-table-previous-column
...........................................

 -- Command: emacspeak-table-previous-column (&optional count)
     ‘C-e C-t C-b’
     ‘C-e C-t <left>’
     ‘C-e C-t <S-tab>’
     ‘<fn> C-t C-b’
     ‘<fn> C-t <left>’
     ‘<fn> C-t <S-tab>’

     Move to the previous column  if possible

     (fn &optional COUNT)

12.178.1.17 emacspeak-table-previous-row
........................................

 -- Command: emacspeak-table-previous-row (&optional count)
     ‘C-e C-t p’
     ‘C-e C-t C-p’
     ‘C-e C-t <up>’
     ‘<fn> C-t p’
     ‘<fn> C-t C-p’
     ‘<fn> C-t <up>’

     Move to the previous row if possible

     (fn &optional COUNT)

12.178.1.18 emacspeak-table-search
..................................

 -- Command: emacspeak-table-search (&optional what)
     ‘C-e C-t s’
     ‘<fn> C-t s’

     Search the table for matching elements.  Interactively prompts for
     row or column to search and pattern to look for.    If there is a match, makes
     the matching cell current. When called from a program, ‘what’ can
       be either ‘row’ or ‘column’.

     (fn &optional WHAT)

12.178.1.19 emacspeak-table-search-column
.........................................

 -- Command: emacspeak-table-search-column
     ‘C-e C-t C’
     ‘<fn> C-t C’

     Search in current table column.

12.178.1.20 emacspeak-table-search-headers
..........................................

 -- Command: emacspeak-table-search-headers
     ‘C-e C-t h’
     ‘<fn> C-t h’

     Search the table row or column headers.  Interactively prompts for
     row or column to search and pattern to look for.  If there is a
     match, makes the matching row or column current.

12.178.1.21 emacspeak-table-search-row
......................................

 -- Command: emacspeak-table-search-row
     ‘C-e C-t R’
     ‘<fn> C-t R’

     Search in current table row.

12.178.1.22 emacspeak-table-select-automatic-speaking-method
............................................................

 -- Command: emacspeak-table-select-automatic-speaking-method
     ‘C-e C-t a’
     ‘<fn> C-t a’

     Interactively select the kind of automatic speech to produce when
     browsing table elements

12.178.1.23 emacspeak-table-sort-on-current-column
..................................................

 -- Command: emacspeak-table-sort-on-current-column
     ‘C-e C-t #’
     ‘<fn> C-t #’

     Sort table on current column.

12.178.1.24 emacspeak-table-speak-both-headers-and-element
..........................................................

 -- Command: emacspeak-table-speak-both-headers-and-element
     ‘C-e C-t b’
     ‘<fn> C-t b’

     Speak  both row and column header and table element

12.178.1.25 emacspeak-table-speak-column-filtered
.................................................

 -- Command: emacspeak-table-speak-column-filtered (&optional prefix)
     ‘C-e C-t g’
     ‘<fn> C-t g’

     Speaks a table column after applying a specified column filter.
     Optional prefix arg prompts for a new filter.

     (fn &optional PREFIX)

12.178.1.26 emacspeak-table-speak-column-header-and-element
...........................................................

 -- Command: emacspeak-table-speak-column-header-and-element
     ‘C-e C-t c’
     ‘<fn> C-t c’

     Speak  column header and table element

12.178.1.27 emacspeak-table-speak-coordinates
.............................................

 -- Command: emacspeak-table-speak-coordinates
     ‘C-e C-t .’
     ‘<fn> C-t .’

     Speak current table coordinates.

12.178.1.28 emacspeak-table-speak-current-element
.................................................

 -- Command: emacspeak-table-speak-current-element
     ‘C-e C-t SPC’
     ‘<fn> C-t SPC’

     Speak current table element

12.178.1.29 emacspeak-table-speak-dimensions
............................................

 -- Command: emacspeak-table-speak-dimensions
     ‘C-e C-t =’
     ‘<fn> C-t =’

     Speak current table dimensions.

12.178.1.30 emacspeak-table-speak-row-filtered
..............................................

 -- Command: emacspeak-table-speak-row-filtered (&optional prefix)
     ‘C-e C-t f’
     ‘<fn> C-t f’

     Speaks a table row after applying a specified row filter.
     Optional prefix arg prompts for a new filter.

     (fn &optional PREFIX)

12.178.1.31 emacspeak-table-speak-row-header-and-element
........................................................

 -- Command: emacspeak-table-speak-row-header-and-element
     ‘C-e C-t r’
     ‘<fn> C-t r’

     Speak  row header and table element

12.178.1.32 emacspeak-table-ui-filter-load
..........................................

 -- Command: emacspeak-table-ui-filter-load (file)
     ‘C-e C-t M-l’
     ‘<fn> C-t M-l’

     Load saved filter settings.

     (fn FILE)

12.178.1.33 emacspeak-table-ui-filter-save
..........................................

 -- Command: emacspeak-table-ui-filter-save (file)
     ‘C-e C-t M-s’
     ‘<fn> C-t M-s’

     Save out filter settings.

     (fn FILE)

12.178.1.34 emacspeak-table-view-csv-buffer
...........................................

 -- Command: emacspeak-table-view-csv-buffer (&optional buffer-name)
     ‘C-e C-t v’
     ‘<fn> C-t v’

     Process a csv (comma separated values) data.
     The processed  data is  presented using emacspeak table navigation.

     (fn &optional BUFFER-NAME)

12.178.1.35 emacspeak-table-view-csv-url
........................................

 -- Command: emacspeak-table-view-csv-url (url &optional buffer-name)

     Process a csv (comma separated values) data at  ‘URL’.
     The processed  data is  presented using emacspeak table navigation.

     (fn URL &optional BUFFER-NAME)


File: emacspeak.info,  Node: emacspeak-tabulate,  Next: emacspeak-tapestry,  Prev: emacspeak-table-ui,  Up: Emacspeak Commands And Options

12.179 emacspeak-tabulate
=========================

This module is a simple table recognizer.  Can recognize the columns in
tabulated output, e.g.  ps, ls output

12.179.1 emacspeak-tabulate Commands
------------------------------------

12.179.1.1 emacspeak-tabulate-region
....................................

 -- Command: emacspeak-tabulate-region (start end &optional mark-fields)
     ‘C-e i’
     ‘<fn> i’

     Voicifies the white-space of a table if one found.  Optional interactive prefix
     arg mark-fields specifies if the header row information is used to mark fields
     in the white-space.

     (fn START END &optional MARK-FIELDS)


File: emacspeak.info,  Node: emacspeak-tapestry,  Next: emacspeak-tar,  Prev: emacspeak-tabulate,  Up: Emacspeak Commands And Options

12.180 emacspeak-tapestry
=========================

emacspeak extensions to speak window widnow layouts

12.180.1 emacspeak-tapestry Commands
------------------------------------

12.180.1.1 emacspeak-speak-window-layout
........................................

 -- Command: emacspeak-speak-window-layout (&optional details)

     Describe the current layout of visible buffers in current frame.
     Use interactive prefix arg to get coordinate positions of the
     displayed buffers.

     (fn &optional DETAILS)

12.180.1.2 emacspeak-tapestry-describe-tapestry
...............................................

 -- Command: emacspeak-tapestry-describe-tapestry (&optional details)
     ‘C-e M-t’
     ‘<fn> M-t’

     Describe the current layout of visible buffers in current frame.
     Use interactive prefix arg to get coordinate positions of the
     displayed buffers.

     (fn &optional DETAILS)

12.180.1.3 emacspeak-tapestry-select-window-by-name
...................................................

 -- Command: emacspeak-tapestry-select-window-by-name (buffer-name)
     ‘C-e W’
     ‘<fn> W’

     Select window by the name of the buffer it displays.
     This is useful when using modes like ECB or the new GDB UI where
       you want to preserve the window layout
     but quickly switch to a window by name.

     (fn BUFFER-NAME)


File: emacspeak.info,  Node: emacspeak-tar,  Next: emacspeak-tcl,  Prev: emacspeak-tapestry,  Up: Emacspeak Commands And Options

12.181 emacspeak-tar
====================

Auditory interface to tar mode

12.181.1 emacspeak-tar Commands
-------------------------------

12.181.1.1 emacspeak-tar-speak-file-date
........................................

 -- Command: emacspeak-tar-speak-file-date

     Speak date of file current entry

12.181.1.2 emacspeak-tar-speak-file-permissions
...............................................

 -- Command: emacspeak-tar-speak-file-permissions

     Speak permissions of file current entry

12.181.1.3 emacspeak-tar-speak-file-size
........................................

 -- Command: emacspeak-tar-speak-file-size

     Speak size of file current entry


File: emacspeak.info,  Node: emacspeak-tcl,  Next: emacspeak-tdtd,  Prev: emacspeak-tar,  Up: Emacspeak Commands And Options

12.182 emacspeak-tcl
====================

Provide additional advice to tcl-mode


File: emacspeak.info,  Node: emacspeak-tdtd,  Next: emacspeak-tempo,  Prev: emacspeak-tcl,  Up: Emacspeak Commands And Options

12.183 emacspeak-tdtd
=====================

tdtd is an emacs package for authoring and maintaining XML and SGML DTDs
tdtd is at http://www.mulberrytech.com/tdtd/index.html this module
speech-enables tdtd


File: emacspeak.info,  Node: emacspeak-tempo,  Next: emacspeak-tetris,  Prev: emacspeak-tdtd,  Up: Emacspeak Commands And Options

12.184 emacspeak-tempo
======================

tempo.el provides the infrastructure for building up templates.  This is
used by html-helper-mode to allow for easy writing of HTML This module
extends Emacspeak to provide fluent spoken feedback


File: emacspeak.info,  Node: emacspeak-tetris,  Next: emacspeak-texinfo,  Prev: emacspeak-tempo,  Up: Emacspeak Commands And Options

12.185 emacspeak-tetris
=======================

Speech-enables tetris.

12.185.1 emacspeak-tetris Commands
----------------------------------

12.185.1.1 emacspeak-tetris-goto-bottom-row
...........................................

 -- Command: emacspeak-tetris-goto-bottom-row

     Move to and speak bottom row

12.185.1.2 emacspeak-tetris-goto-top-row
........................................

 -- Command: emacspeak-tetris-goto-top-row

     Move to and speak the top row

12.185.1.3 emacspeak-tetris-speak-column
........................................

 -- Command: emacspeak-tetris-speak-column (&optional x)

     Speak  column –default is to speak current column

     (fn &optional X)

12.185.1.4 emacspeak-tetris-speak-coordinates
.............................................

 -- Command: emacspeak-tetris-speak-coordinates

     Speak current position

12.185.1.5 emacspeak-tetris-speak-current-shape
...............................................

 -- Command: emacspeak-tetris-speak-current-shape

     Speak current shape

12.185.1.6 emacspeak-tetris-speak-current-shape-and-coordinates
...............................................................

 -- Command: emacspeak-tetris-speak-current-shape-and-coordinates

     Speak shape orientation and coordinates

12.185.1.7 emacspeak-tetris-speak-next-shape
............................................

 -- Command: emacspeak-tetris-speak-next-shape

     Speak next shape

12.185.1.8 emacspeak-tetris-speak-row
.....................................

 -- Command: emacspeak-tetris-speak-row

     Speak current tetris row

12.185.1.9 emacspeak-tetris-speak-row-number
............................................

 -- Command: emacspeak-tetris-speak-row-number

     Speak where on the tetris board we are

12.185.1.10 emacspeak-tetris-speak-score
........................................

 -- Command: emacspeak-tetris-speak-score

     Speak the score

12.185.1.11 emacspeak-tetris-speak-x-coordinate
...............................................

 -- Command: emacspeak-tetris-speak-x-coordinate

     Speak current position


File: emacspeak.info,  Node: emacspeak-texinfo,  Next: emacspeak-threes,  Prev: emacspeak-tetris,  Up: Emacspeak Commands And Options

12.186 emacspeak-texinfo
========================

This module speech enables net-texinfo mode


File: emacspeak.info,  Node: emacspeak-threes,  Next: emacspeak-tide,  Prev: emacspeak-texinfo,  Up: Emacspeak Commands And Options

12.187 emacspeak-threes
=======================

THREES == threes game.  This module speech-enable the game.
<https://en.wikipedia.org/wiki/Threes> for history of the game and
details of game play.  This module adds additional convenience
keybindings to the default arrow-key bindings implemented in threes.el.
In addition, this module implements commands that speak the board as
well as getting a column-specific view of the board.

‘f’
     Move right
‘b’
     Move left
‘n’
     Move down
‘p’
     Move up
‘SPC’
     Speak the board
‘/’
     Speak board by column.
‘.’
     Speak current score.
‘s’
     Save current state
‘u’
     Pop state from stack
‘?’
     Speak next tile
   The updated board is spoken after each turn.  The next upcoming tile
is spoken after the current state of the board.  You can use ‘SPC’ and
‘/’ to review the board.

12.187.1 emacspeak-threes Commands
----------------------------------

12.187.1.1 emacspeak-threes-1
.............................

 -- Command: emacspeak-threes-1

     Set next tile.

12.187.1.2 emacspeak-threes-2
.............................

 -- Command: emacspeak-threes-2

     Set next tile.

12.187.1.3 emacspeak-threes-3
.............................

 -- Command: emacspeak-threes-3

     Set next tile.

12.187.1.4 emacspeak-threes-export
..................................

 -- Command: emacspeak-threes-export (&optional prompt)

     Exports game stack to a file.
     Optional interactive prefix arg prompts for a file.
     Note that the file is overwritten silently.

     (fn &optional PROMPT)

12.187.1.5 emacspeak-threes-import
..................................

 -- Command: emacspeak-threes-import (&optional prompt)

     Import game.
     Optional interactive prefix arg prompts for a filename.

     (fn &optional PROMPT)

12.187.1.6 emacspeak-threes-pop-state
.....................................

 -- Command: emacspeak-threes-pop-state

     Reset state from stack.

12.187.1.7 emacspeak-threes-prune-stack
.......................................

 -- Command: emacspeak-threes-prune-stack (drop)

     Prune game stack to specified length.

     (fn DROP)

12.187.1.8 emacspeak-threes-push-state
......................................

 -- Command: emacspeak-threes-push-state

     Push current game state on stack.

12.187.1.9 emacspeak-threes-score
.................................

 -- Command: emacspeak-threes-score

     Speak the score.

12.187.1.10 emacspeak-threes-speak-board
........................................

 -- Command: emacspeak-threes-speak-board

     Speak the board.

12.187.1.11 emacspeak-threes-speak-next
.......................................

 -- Command: emacspeak-threes-speak-next

     Speak upcoming tile.

12.187.1.12 emacspeak-threes-speak-transposed-board
...................................................

 -- Command: emacspeak-threes-speak-transposed-board

     Speak the board by columns.


File: emacspeak.info,  Node: emacspeak-tide,  Next: emacspeak-todo-mode,  Prev: emacspeak-threes,  Up: Emacspeak Commands And Options

12.188 emacspeak-tide
=====================

TIDE == Typescript IDE for emacs.  This module speech-enables both tide
and typescript-mode.

12.188.1 emacspeak-tide Options
-------------------------------

 -- Variable: User Option emacspeak-tide-file-voice
     Personality used for tide-file This personality uses voice-lighten
     whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-tide-hl-identifier-personality
     Personality used for tide-hl-identifier-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option emacspeak-tide-imenu-type-personality
     Personality used for tide-imenu-type-face This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option emacspeak-tide-line-number-voice
     Personality used for tide-line-number This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option emacspeak-tide-match-voice
     Personality used for tide-match This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.


File: emacspeak.info,  Node: emacspeak-todo-mode,  Next: emacspeak-twittering,  Prev: emacspeak-tide,  Up: Emacspeak Commands And Options

12.189 emacspeak-todo-mode
==========================

todo-mode (part of Emacs 21) provides todo-lists that can be integrated
with the Emacs calendar.  This module speech-enables todo-mode


File: emacspeak.info,  Node: emacspeak-twittering,  Next: emacspeak-typo,  Prev: emacspeak-todo-mode,  Up: Emacspeak Commands And Options

12.190 emacspeak-twittering
===========================

module twittering-mode.el is found on the emacs wiki This module
speech-enables twittering-mode which works using oauth for
authentication.  Note: As of Thu Sep 2 08:11:25 PDT 2010 twit.el is
broken.

   Advises interactive functions to speak

12.190.1 emacspeak-twittering Commands
--------------------------------------

12.190.1.1 emacspeak-twittering-jump-to-following-url
.....................................................

 -- Command: emacspeak-twittering-jump-to-following-url

     Move to and open closest URI  following point.

12.190.1.2 emacspeak-twittering-speak-this-tweet
................................................

 -- Command: emacspeak-twittering-speak-this-tweet (&optional
          copy-as-kill)

     Speak tweet under point.
     With interactive prefix arg ‘copy-as-kill’, copy it to kill ring as well.

     (fn &optional COPY-AS-KILL)


File: emacspeak.info,  Node: emacspeak-typo,  Next: emacspeak-url-template,  Prev: emacspeak-twittering,  Up: Emacspeak Commands And Options

12.191 emacspeak-typo
=====================

TYPO == Typographical Editing This module speech-enables typo-mode.
Typo-mode’s magic insertion commands are speech-enabled to speak the
inserted char.


File: emacspeak.info,  Node: emacspeak-url-template,  Next: emacspeak-vdiff,  Prev: emacspeak-typo,  Up: Emacspeak Commands And Options

12.192 emacspeak-url-template
=============================

It is often useful to have “parametrized hot list entries” i.e., hotlist
entries that are “templates” for the actual URL. The user provides
values for the parametrized portions of the URL e.g.  the date.  See
*Note URL Templates::, for details on the URL templates that are
presently defined.

12.192.1 emacspeak-url-template Commands
----------------------------------------

12.192.1.1 emacspeak-url-template-fetch
.......................................

 -- Command: emacspeak-url-template-fetch (&optional documentation)
     ‘C-e u’
     ‘C-; u’
     ‘<fn> u’
     ‘C-x @ h u’

     Fetch a pre-defined resource.
     Use Emacs completion to obtain a list of available resources.
     Resources typically prompt for the relevant information
     before completing the request.
     Optional interactive prefix arg displays documentation for specified resource.

     (fn &optional DOCUMENTATION)

12.192.1.2 emacspeak-url-template-help
......................................

 -- Command: emacspeak-url-template-help

     Display documentation for a URL template.
     Use Emacs completion to obtain a list of available
     resources.

12.192.1.3 emacspeak-url-template-load
......................................

 -- Command: emacspeak-url-template-load (file)

     Load URL template resources from specified location.

     (fn FILE)

12.192.1.4 emacspeak-url-template-nls-add-to-wishlist
.....................................................

 -- Command: emacspeak-url-template-nls-add-to-wishlist (book)

     Add book under point to wishlist.

     (fn BOOK)

12.192.1.5 emacspeak-url-template-save
......................................

 -- Command: emacspeak-url-template-save (file)

     Save out url templates.

     (fn FILE)


File: emacspeak.info,  Node: emacspeak-vdiff,  Next: emacspeak-view,  Prev: emacspeak-url-template,  Up: Emacspeak Commands And Options

12.193 emacspeak-vdiff
======================

VDIFF == vimdiff Installable from melpa, vdiff enables synchronized
movement through diff buffers without resorting to an extra
control-panel as is the case with ediff.  In addition to speech-enabling
interactive commands and setting up face->voice mappings, this module
provides commands that speak the current hunk.  These are bound in
‘vdiff-mode-prefix-map’.
   • ‘emacspeak-vdiff-speak-this-hunk’ bound to ‘SPC’.
   • ‘emacspeak-vdiff-speak-other-hunk’ bound to ‘C-SPC’.
   • ‘emacspeak-vdiff-speak-other-line’ bound to ‘l’.

12.193.1 emacspeak-vdiff Commands
---------------------------------

12.193.1.1 emacspeak-vdiff-speak-other-hunk
...........................................

 -- Command: emacspeak-vdiff-speak-other-hunk

     Speak corresponding hunk from other buffer.

12.193.1.2 emacspeak-vdiff-speak-other-line
...........................................

 -- Command: emacspeak-vdiff-speak-other-line

     Speak corresponding line from other buffer.

12.193.1.3 emacspeak-vdiff-speak-this-hunk
..........................................

 -- Command: emacspeak-vdiff-speak-this-hunk

     Speak VDiff hunk under point.

12.193.2 emacspeak-vdiff Options
--------------------------------

 -- Variable: User Option emacspeak-vdiff-addition-personality
     Personality used for vdiff-addition-face This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option emacspeak-vdiff-change-personality
     Personality used for vdiff-change-face This personality uses
     voice-lock-overlay-1 whose effect can be changed globally by
     customizing voice-lock-overlay-1-settings.

 -- Variable: User Option emacspeak-vdiff-closed-fold-personality
     Personality used for vdiff-closed-fold-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-vdiff-open-fold-personality
     Personality used for vdiff-open-fold-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-vdiff-refine-added-voice
     Personality used for vdiff-refine-added This personality uses
     voice-lock-overlay-0 whose effect can be changed globally by
     customizing voice-lock-overlay-0-settings.

 -- Variable: User Option emacspeak-vdiff-refine-changed-voice
     Personality used for vdiff-refine-changed This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option emacspeak-vdiff-subtraction-fringe-personality
     Personality used for vdiff-subtraction-fringe-face This personality
     uses voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option emacspeak-vdiff-subtraction-personality
     Personality used for vdiff-subtraction-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option emacspeak-vdiff-target-personality
     Personality used for vdiff-target-face This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.


File: emacspeak.info,  Node: emacspeak-view,  Next: emacspeak-vlc,  Prev: emacspeak-vdiff,  Up: Emacspeak Commands And Options

12.194 emacspeak-view
=====================

Provide additional advice to view-mode

12.194.1 emacspeak-view Commands
--------------------------------

12.194.1.1 emacspeak-view-line-to-top
.....................................

 -- Command: emacspeak-view-line-to-top

     Moves current line to top of window


File: emacspeak.info,  Node: emacspeak-vlc,  Next: emacspeak-vm,  Prev: emacspeak-view,  Up: Emacspeak Commands And Options

12.195 emacspeak-vlc
====================

An Emacspeak Front-End For VLC Interaction.

12.195.1 emacspeak-vlc Commands
-------------------------------

12.195.1.1 emacspeak-vlc
........................

 -- Command: emacspeak-vlc
     ‘C-. '’
     ‘C-' '’
     ‘C-x @ s '’

     Start or control Emacspeak VLC player.

     Uses current context to prompt for media to play.
     Controls media playback when already playing a stream.

     key             binding
     —             ——-

     SPC		emacspeak-vlc-pause
     ’		emacspeak-vlc-pop-to-player
     +		emacspeak-vlc-volume-up
     ,		emacspeak-vlc-backward-10s
     -		emacspeak-vlc-volume-down
     .		emacspeak-vlc-forward-10s
     <		emacspeak-vlc-backward-1min
     =		emacspeak-vlc-volume-up
     >		emacspeak-vlc-forward-1min
     G		emacspeak-vlc-seek-percentage
     Q		emacspeak-vlc-quit
     [		emacspeak-vlc-slower
     ]		emacspeak-vlc-faster
     g		emacspeak-vlc-seek-absolute
     k		emacspeak-vlc-quit
     n		emacspeak-vlc-next-track
     p		emacspeak-vlc-previous-track
     q		bury-buffer
     r		emacspeak-vlc-seek-relative
     s		emacspeak-vlc-scale-speed
     t		emacspeak-vlc-play-tracks-jump
     v		emacspeak-vlc-volume-change
     {		emacspeak-vlc-half-speed
     }		emacspeak-vlc-double-speed
     DEL		emacspeak-vlc-reset-speed
     <down>		emacspeak-vlc-forward-1min
     <end>		emacspeak-vlc-end-of-track
     <home>		emacspeak-vlc-beginning-of-track
     <left>		emacspeak-vlc-backward-10s
     <next>		emacspeak-vlc-forward-10min
     <prior>		emacspeak-vlc-backward-10min
     <right>		emacspeak-vlc-forward-10s
     <up>		emacspeak-vlc-backward-1min

     .

12.195.1.2 emacspeak-vlc-command
................................

 -- Command: emacspeak-vlc-command (key)

     Invoke VLC commands.

     (fn KEY)

12.195.1.3 emacspeak-vlc-mode
.............................

 -- Command: emacspeak-vlc-mode

     Major mode for vlc interaction.

     key             binding
     —             ——-

     SPC		emacspeak-vlc-pause
     ’		emacspeak-vlc-pop-to-player
     +		emacspeak-vlc-volume-up
     ,		emacspeak-vlc-backward-10s
     -		emacspeak-vlc-volume-down
     .		emacspeak-vlc-forward-10s
     <		emacspeak-vlc-backward-1min
     =		emacspeak-vlc-volume-up
     >		emacspeak-vlc-forward-1min
     G		emacspeak-vlc-seek-percentage
     Q		emacspeak-vlc-quit
     [		emacspeak-vlc-slower
     ]		emacspeak-vlc-faster
     g		emacspeak-vlc-seek-absolute
     k		emacspeak-vlc-quit
     n		emacspeak-vlc-next-track
     p		emacspeak-vlc-previous-track
     q		bury-buffer
     r		emacspeak-vlc-seek-relative
     s		emacspeak-vlc-scale-speed
     t		emacspeak-vlc-play-tracks-jump
     v		emacspeak-vlc-volume-change
     {		emacspeak-vlc-half-speed
     }		emacspeak-vlc-double-speed
     DEL		emacspeak-vlc-reset-speed
     <down>		emacspeak-vlc-forward-1min
     <end>		emacspeak-vlc-end-of-track
     <home>		emacspeak-vlc-beginning-of-track
     <left>		emacspeak-vlc-backward-10s
     <next>		emacspeak-vlc-forward-10min
     <prior>		emacspeak-vlc-backward-10min
     <right>		emacspeak-vlc-forward-10s
     <up>		emacspeak-vlc-backward-1min

     In addition to any hooks its parent mode ‘comint-mode’ might have run,
     this mode runs the hook ‘emacspeak-vlc-mode-hook’, as the final or penultimate step
     during initialization.

12.195.1.4 emacspeak-vlc-player
...............................

 -- Command: emacspeak-vlc-player (resource)

     Play specified resource using vlc.
     Resource is a media resource or playlist containing media resources.
     The player is placed in a buffer in emacspeak-vlc-mode.

     (fn RESOURCE)

12.195.1.5 emacspeak-vlc-pop-to-player
......................................

 -- Command: emacspeak-vlc-pop-to-player

     Pop to vlc buffer.

12.195.1.6 emacspeak-vlc-quit
.............................

 -- Command: emacspeak-vlc-quit

     Quit VLC

12.195.1.7 emacspeak-vlc-url
............................

 -- Command: emacspeak-vlc-url (url)

     Call emacspeak-vlc with specified URL.

     (fn URL)

12.195.2 emacspeak-vlc Options
------------------------------

 -- Variable: User Option emacspeak-vlc-options
     Options passed to VLC.

 -- Variable: User Option emacspeak-vlc-program
     VLC player program.


File: emacspeak.info,  Node: emacspeak-vm,  Next: emacspeak-wdired,  Prev: emacspeak-vlc,  Up: Emacspeak Commands And Options

12.196 emacspeak-vm
===================

This module extends the mail reader vm.  Uses voice locking for message
headers and cited messages

12.196.1 emacspeak-vm Commands
------------------------------

12.196.1.1 emacspeak-vm-browse-message
......................................

 -- Command: emacspeak-vm-browse-message

     Browse an email message –read it paragraph at a time.

12.196.1.2 emacspeak-vm-catch-up-all-messages
.............................................

 -- Command: emacspeak-vm-catch-up-all-messages

     Mark all messages in folder to be deleted. Use with caution.

12.196.1.3 emacspeak-vm-locate-subject-line
...........................................

 -- Command: emacspeak-vm-locate-subject-line

     Locates the subject line in a message being read.
     Useful when you’re reading a message
     that has been forwarded multiple times.

12.196.1.4 emacspeak-vm-mode-line
.................................

 -- Command: emacspeak-vm-mode-line

     VM mode line information.

12.196.1.5 emacspeak-vm-speak-labels
....................................

 -- Command: emacspeak-vm-speak-labels

     Speak a message’s labels

12.196.1.6 emacspeak-vm-speak-message
.....................................

 -- Command: emacspeak-vm-speak-message

     Move point to the message body.

12.196.1.7 emacspeak-vm-toggle-html-mime-demotion
.................................................

 -- Command: emacspeak-vm-toggle-html-mime-demotion

     Toggle state of HTML Mime Demotion.

12.196.1.8 emacspeak-vm-yank-header
...................................

 -- Command: emacspeak-vm-yank-header

     Yank specified header into kill ring.

12.196.2 emacspeak-vm Options
-----------------------------

 -- Variable: User Option emacspeak-vm-cal2text
     Executable that converts calendar invitations on standard input to
     plain text.

 -- Variable: User Option emacspeak-vm-customize-mime-settings
     Non-nil will cause Emacspeak to configure VM mime settings to match
     what the author of Emacspeak uses.

 -- Variable: User Option emacspeak-vm-doc2text
     Executable that converts MSWord documents on standard input to
     plain text using wvText.

 -- Variable: User Option emacspeak-vm-headers-strip-octals
     Specify whether non-ascii chars should be stripped when speaking
     email headers.

 -- Variable: User Option emacspeak-vm-pdf2text
     Executable that converts PDF on standard input to plain text using
     pdftotext.

 -- Variable: User Option emacspeak-vm-ppt2html
     Executable that converts MSPPT documents on standard input to HTML
     using xlhtml.

 -- Variable: User Option emacspeak-vm-use-raman-settings
     Should VM use the customizations used by the author of Emacspeak.

 -- Variable: User Option emacspeak-vm-voice-loc
     Set this to T if you want messages automatically voice locked.
     Note that some badly formed mime messages cause trouble.

 -- Variable: User Option emacspeak-vm-xls2html
     Executable that converts MSXL documents on standard input to HTML
     using xlhtml.


File: emacspeak.info,  Node: emacspeak-wdired,  Next: emacspeak-we,  Prev: emacspeak-vm,  Up: Emacspeak Commands And Options

12.197 emacspeak-wdired
=======================

Speech-enable wdired to permit in-place renaming of groups of files.


File: emacspeak.info,  Node: emacspeak-we,  Next: emacspeak-websearch,  Prev: emacspeak-wdired,  Up: Emacspeak Commands And Options

12.198 emacspeak-we
===================

we is for webedit Invoke XSLT to edit/transform Web pages before they
get rendered.  we makes emacspeak’s webedit layer independent of a given
Emacs web browser EWW This module will use the abstraction provided by
browse-url to handle Web pages.  Module emacspeak-webutils provides the
needed additional abstractions not already covered by browse-url

12.198.1 emacspeak-we Commands
------------------------------

12.198.1.1 emacspeak-we-class-filter-and-follow
...............................................

 -- Command: emacspeak-we-class-filter-and-follow (class url &optional
          prompt)
     ‘C-e x e y’
     ‘<fn> x e y’

     Follow url and point, and filter the result by specified class.
     Class can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn CLASS URL &optional PROMPT)

12.198.1.2 emacspeak-we-class-filter-and-follow-link
....................................................

 -- Command: emacspeak-we-class-filter-and-follow-link (&optional
          prompt)
     ‘C-e x e v’
     ‘<fn> x e v’

     Follow url and point, and filter the result by specified class.
     Class can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.198.1.3 emacspeak-we-count-matches
.....................................

 -- Command: emacspeak-we-count-matches (url locator)
     ‘C-e x e C-f’
     ‘<fn> x e C-f’

     Count matches for locator  in Web page.

     (fn URL LOCATOR)

12.198.1.4 emacspeak-we-count-nested-tables
...........................................

 -- Command: emacspeak-we-count-nested-tables (url)
     ‘C-e x e C-x’
     ‘<fn> x e C-x’

     Count nested tables in Web page.

     (fn URL)

12.198.1.5 emacspeak-we-count-tables
....................................

 -- Command: emacspeak-we-count-tables (url)
     ‘C-e x e C-t’
     ‘<fn> x e C-t’

     Count  tables in Web page.

     (fn URL)

12.198.1.6 emacspeak-we-extract-by-class
........................................

 -- Command: emacspeak-we-extract-by-class (class url &optional speak)
     ‘C-e x e c’
     ‘<fn> x e c’

     Extract elements having specified class attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of class values as completion.

     (fn CLASS URL &optional SPEAK)

12.198.1.7 emacspeak-we-extract-by-class-list
.............................................

 -- Command: emacspeak-we-extract-by-class-list (classes url &optional
          speak)
     ‘C-e x e C’
     ‘<fn> x e C’

     Extract elements having class specified in list ‘classes’ from HTML.
     Extracts specified elements from current WWW page and displays it
     in a separate buffer.  Interactive use provides list of class
     values as completion.

     (fn CLASSES URL &optional SPEAK)

12.198.1.8 emacspeak-we-extract-by-id
.....................................

 -- Command: emacspeak-we-extract-by-id (id url &optional speak)
     ‘C-e x e i’
     ‘<fn> x e i’

     Extract elements having specified id attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer.
     Interactive use provides list of id values as completion.

     (fn ID URL &optional SPEAK)

12.198.1.9 emacspeak-we-extract-by-id-list
..........................................

 -- Command: emacspeak-we-extract-by-id-list (ids url &optional speak)
     ‘C-e x e I’
     ‘<fn> x e I’

     Extract elements having id specified in list ‘ids’ from HTML.
     Extracts specified elements from current WWW page and displays it in a
     separate buffer. Interactive use provides list of id values as completion.

     (fn IDS URL &optional SPEAK)

12.198.1.10 emacspeak-we-extract-by-role
........................................

 -- Command: emacspeak-we-extract-by-role (role url &optional speak)
     ‘C-e x e r’
     ‘<fn> x e r’

     Extract elements having specified role attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of role values as completion.

     (fn ROLE URL &optional SPEAK)

12.198.1.11 emacspeak-we-extract-id-list-text
.............................................

 -- Command: emacspeak-we-extract-id-list-text (ids url &optional speak)

     Extract text nodes from elements having id specified in list ‘ids’ from HTML.
     Extracts specified elements from current WWW page and displays it in a
     separate buffer. Interactive use provides list of id values as completion.

     (fn IDS URL &optional SPEAK)

12.198.1.12 emacspeak-we-extract-id-text
........................................

 -- Command: emacspeak-we-extract-id-text (id url &optional speak)

     Extract text nodes from elements having specified id attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer.
     Interactive use provides list of id values as completion.

     (fn ID URL &optional SPEAK)

12.198.1.13 emacspeak-we-extract-matching-urls
..............................................

 -- Command: emacspeak-we-extract-matching-urls (pattern url &optional
          speak)
     ‘C-e x e u’
     ‘<fn> x e u’

     Extracts links whose URL matches pattern.

     (fn PATTERN URL &optional SPEAK)

12.198.1.14 emacspeak-we-extract-media-streams
..............................................

 -- Command: emacspeak-we-extract-media-streams (url &optional speak)

     Extract links to media streams.
     operate on current web page when in a browser buffer; otherwise
      prompt for url.  Optional arg ‘speak’ specifies if the result
      should be spoken automatically.

     (fn URL &optional SPEAK)

12.198.1.15 emacspeak-we-extract-media-streams-under-point
..........................................................

 -- Command: emacspeak-we-extract-media-streams-under-point

     In browser buffers, extract media streams from url under point.

12.198.1.16 emacspeak-we-extract-nested-table
.............................................

 -- Command: emacspeak-we-extract-nested-table (index url &optional
          speak)
     ‘C-e x e x’
     ‘<fn> x e x’

     Extract nested table specified by ‘table-index’. Default is to
     operate on current web page when in a browser buffer; otherwise
     prompt for URL. Optional arg ‘speak’ specifies if the result should be
     spoken automatically.

     (fn INDEX URL &optional SPEAK)

12.198.1.17 emacspeak-we-extract-nested-table-list
..................................................

 -- Command: emacspeak-we-extract-nested-table-list (tables url
          &optional speak)
     ‘C-e x e X’
     ‘<fn> x e X’

     Extract specified list of tables from a Web page.

     (fn TABLES URL &optional SPEAK)

12.198.1.18 emacspeak-we-extract-print-streams
..............................................

 -- Command: emacspeak-we-extract-print-streams (url &optional speak)

     Extract links to printable  streams.
     operate on current web page when in a browser buffer; otherwise
      prompt for url.  Optional arg ‘speak’ specifies if the result
      should be spoken automatically.

     (fn URL &optional SPEAK)

12.198.1.19 emacspeak-we-extract-table-by-match
...............................................

 -- Command: emacspeak-we-extract-table-by-match (match url &optional
          speak)
     ‘C-e x e m’
     ‘<fn> x e m’

     Extract table containing  specified match.
      Optional arg url specifies the page to extract content from.

     (fn MATCH URL &optional SPEAK)

12.198.1.20 emacspeak-we-extract-table-by-position
..................................................

 -- Command: emacspeak-we-extract-table-by-position (pos url &optional
          speak)
     ‘C-e x e t’
     ‘<fn> x e t’

     Extract table at specified pos.
     Default is to extract from current page.

     (fn POS URL &optional SPEAK)

12.198.1.21 emacspeak-we-extract-tables-by-match-list
.....................................................

 -- Command: emacspeak-we-extract-tables-by-match-list (match-list url
          &optional speak)
     ‘C-e x e M’
     ‘<fn> x e M’

     Extract specified  tables from a WWW page.
     Tables are specified by containing  match pattern
      found in the match list.

     (fn MATCH-LIST URL &optional SPEAK)

12.198.1.22 emacspeak-we-extract-tables-by-position-list
........................................................

 -- Command: emacspeak-we-extract-tables-by-position-list (positions url
          &optional speak)
     ‘C-e x e T’
     ‘<fn> x e T’

     Extract specified list of nested tables from a WWW page.
     Tables are specified by their position in the list
      of nested tables found in the page.

     (fn POSITIONS URL &optional SPEAK)

12.198.1.23 emacspeak-we-follow-and-extract-main
................................................

 -- Command: emacspeak-we-follow-and-extract-main (&optional speak)
     ‘C-e x e P’
     ‘<fn> x e P’

     Follow URL, then extract role=main.

     (fn &optional SPEAK)

12.198.1.24 emacspeak-we-follow-and-filter-by-id
................................................

 -- Command: emacspeak-we-follow-and-filter-by-id (id prompt)
     ‘C-e x e b’
     ‘<fn> x e b’

     Follow url and point, and filter the result by specified id.
     Id can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn ID PROMPT)

12.198.1.25 emacspeak-we-junk-by-class
......................................

 -- Command: emacspeak-we-junk-by-class (class url &optional speak)
     ‘C-e x e d’
     ‘<fn> x e d’

     Extract elements not having specified class attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of class values as completion.

     (fn CLASS URL &optional SPEAK)

12.198.1.26 emacspeak-we-junk-by-class-list
...........................................

 -- Command: emacspeak-we-junk-by-class-list (classes url &optional
          speak)
     ‘C-e x e D’
     ‘C-e x e C-c’
     ‘<fn> x e D’
     ‘<fn> x e C-c’

     Extract elements not having class specified in list ‘classes’ from HTML.
     Extracts specified elements from current WWW page and displays it
     in a separate buffer.  Interactive use provides list of class
     values as completion.

     (fn CLASSES URL &optional SPEAK)

12.198.1.27 emacspeak-we-style-filter
.....................................

 -- Command: emacspeak-we-style-filter (style url &optional speak)
     ‘C-e x e S’
     ‘<fn> x e S’

     Extract elements matching specified style
     from HTML.  Extracts specified elements from current WWW
     page and displays it in a separate buffer.  Optional arg url
     specifies the page to extract contents  from.

     (fn STYLE URL &optional SPEAK)

12.198.1.28 emacspeak-we-toggle-xsl-keep-result
...............................................

 -- Command: emacspeak-we-toggle-xsl-keep-result
     ‘C-e x e k’
     ‘<fn> x e k’

     Toggle xsl keep result flag.

12.198.1.29 emacspeak-we-url-expand-and-execute
...............................................

 -- Command: emacspeak-we-url-expand-and-execute (&optional prefix)
     ‘C-e x e e’
     ‘<fn> x e e’

     Applies buffer-specific URL expander/executor function.

     (fn &optional PREFIX)

12.198.1.30 emacspeak-we-url-rewrite-and-follow
...............................................

 -- Command: emacspeak-we-url-rewrite-and-follow (&optional prompt)

     Apply a url rewrite rule as specified in the current buffer
     before following link under point.  If no rewrite rule is
     defined, first prompt for one.  Rewrite rules are of the
     form ‘(from to)’ where from and to are strings.  Typically, the
     rewrite rule is automatically set up by Emacspeak tools like
     websearch where a rewrite rule is known.  Rewrite rules are
     useful in jumping directly to the printer friendly version of an
     article for example.  Optional interactive prefix arg prompts for
     a rewrite rule even if one is already defined.

     (fn &optional PROMPT)

12.198.1.31 emacspeak-we-xpath-filter-and-follow
................................................

 -- Command: emacspeak-we-xpath-filter-and-follow (&optional prompt)
     ‘C-e x e p’
     ‘<fn> x e p’

     Follow url and point, and filter the result by specified xpath.
     XPath can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.198.1.32 emacspeak-we-xpath-junk-and-follow
..............................................

 -- Command: emacspeak-we-xpath-junk-and-follow (&optional prompt)
     ‘C-e x e C-p’
     ‘<fn> x e C-p’

     Follow url and point, and filter the result by junking
     elements specified by xpath.
     XPath can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.198.1.33 emacspeak-we-xsl-toggle
...................................

 -- Command: emacspeak-we-xsl-toggle
     ‘C-e x e o’
     ‘<fn> x e o’

     Toggle  application of XSL transformations.

12.198.1.34 emacspeak-we-xslt-apply
...................................

 -- Command: emacspeak-we-xslt-apply (xsl)
     ‘C-e x e a’
     ‘<fn> x e a’

     Apply specified transformation to current Web page.

     (fn XSL)

12.198.1.35 emacspeak-we-xslt-filter
....................................

 -- Command: emacspeak-we-xslt-filter (path url &optional speak)
     ‘C-e x e f’
     ‘<fn> x e f’

     Extract elements matching specified XPath path locator
     from Web page – default is the current page being viewed.

     (fn PATH URL &optional SPEAK)

12.198.1.36 emacspeak-we-xslt-junk
..................................

 -- Command: emacspeak-we-xslt-junk (path url &optional speak)
     ‘C-e x e j’
     ‘<fn> x e j’

     Junk elements matching specified locator.

     (fn PATH URL &optional SPEAK)

12.198.1.37 emacspeak-we-xslt-select
....................................

 -- Command: emacspeak-we-xslt-select (xsl)
     ‘C-e x e s’
     ‘<fn> x e s’

     Select XSL transformation applied to Web pages before they are displayed .

     (fn XSL)

12.198.2 emacspeak-we Options
-----------------------------

 -- Variable: User Option emacspeak-we-cleanup-bogus-quotes
     Clean up bogus Unicode chars for magic quotes.

 -- Variable: User Option emacspeak-we-filters-rename-buffer
     Set to T if you want the buffer name to contain the applied filter.

 -- Variable: User Option emacspeak-we-media-stream-suffixes
     Suffixes that identify URLs to media streams.

 -- Variable: User Option emacspeak-we-xsl-p
     T means we apply XSL before displaying HTML.

 -- Variable: User Option emacspeak-we-xsl-transform
     Specifies transform to use before displaying a page.  Default is to
     apply sort-tables.


File: emacspeak.info,  Node: emacspeak-websearch,  Next: emacspeak-webspace,  Prev: emacspeak-we,  Up: Emacspeak Commands And Options

12.199 emacspeak-websearch
==========================

This module provides utility functions for searching the WWW

12.199.1 emacspeak-websearch Commands
-------------------------------------

12.199.1.1 emacspeak-websearch-accessible-google
................................................

 -- Command: emacspeak-websearch-accessible-google (query &optional
          options)

     Use Google Lite (Experimental).
     Optional prefix arg prompts for toolbelt options.

     (fn QUERY &optional OPTIONS)

12.199.1.2 emacspeak-websearch-amazon-search
............................................

 -- Command: emacspeak-websearch-amazon-search

     Amazon search.

12.199.1.3 emacspeak-websearch-ask-jeeves
.........................................

 -- Command: emacspeak-websearch-ask-jeeves (query)

     Ask Jeeves for the answer.

     (fn QUERY)

12.199.1.4 emacspeak-websearch-biblio-search
............................................

 -- Command: emacspeak-websearch-biblio-search (query)

     Search Computer Science Bibliographies.

     (fn QUERY)

12.199.1.5 emacspeak-websearch-citeseer-search
..............................................

 -- Command: emacspeak-websearch-citeseer-search (term)

     Perform a CiteSeer search.

     (fn TERM)

12.199.1.6 emacspeak-websearch-company-news
...........................................

 -- Command: emacspeak-websearch-company-news (ticker &optional prefix)

     Perform an company news lookup.
     Retrieves company news, research, profile, insider trades,  or upgrades/downgrades.

     (fn TICKER &optional PREFIX)

12.199.1.7 emacspeak-websearch-cpan-search
..........................................

 -- Command: emacspeak-websearch-cpan-search (query)

     Search CPAN  Comprehensive Perl Archive Network   Site.

     (fn QUERY)

12.199.1.8 emacspeak-websearch-ctan-search
..........................................

 -- Command: emacspeak-websearch-ctan-search (query)

     Search CTAN Comprehensive TeX Archive Network   Site.

     (fn QUERY)

12.199.1.9 emacspeak-websearch-dispatch
.......................................

 -- Command: emacspeak-websearch-dispatch
     ‘C-e ?’
     ‘<fn> ?’

      Press ‘?’ to list available search engines.
     When using supported browsers,  this interface attempts to speak the most relevant information on the result page.

12.199.1.10 emacspeak-websearch-exchange-rate-converter
.......................................................

 -- Command: emacspeak-websearch-exchange-rate-converter
          (conversion-spec)

     Currency converter.

     (fn CONVERSION-SPEC)

12.199.1.11 emacspeak-websearch-foldoc-search
.............................................

 -- Command: emacspeak-websearch-foldoc-search (query)

     Perform a FolDoc search.

     (fn QUERY)

12.199.1.12 emacspeak-websearch-google
......................................

 -- Command: emacspeak-websearch-google (query &optional flag)

     Perform a Google search.  First optional interactive prefix arg
     ‘flag’ prompts for additional search options. Second interactive
     prefix arg is equivalent to hitting the I’m Feeling Lucky button on Google.

     (fn QUERY &optional FLAG)

12.199.1.13 emacspeak-websearch-google-category-news
....................................................

 -- Command: emacspeak-websearch-google-category-news

     Browse Google News by category.

12.199.1.14 emacspeak-websearch-google-feeling-lucky
....................................................

 -- Command: emacspeak-websearch-google-feeling-lucky (query)

     Do a I’m Feeling Lucky Google search.

     (fn QUERY)

12.199.1.15 emacspeak-websearch-google-mobile
.............................................

 -- Command: emacspeak-websearch-google-mobile (query &optional flag)

     Perform a Google Mobile search.  First optional interactive prefix arg
     ‘flag’ prompts for additional search options. Second interactive
     prefix arg is equivalent to hitting the I’m Feeling Lucky button on Google.

     (fn QUERY &optional FLAG)

12.199.1.16 emacspeak-websearch-google-news
...........................................

 -- Command: emacspeak-websearch-google-news

     Invoke Google News url template.

12.199.1.17 emacspeak-websearch-google-regional-news
....................................................

 -- Command: emacspeak-websearch-google-regional-news

     Browse Google News by region.

12.199.1.18 emacspeak-websearch-google-search-in-date-range
...........................................................

 -- Command: emacspeak-websearch-google-search-in-date-range

     Use this from inside the calendar to do Google date-range searches.

12.199.1.19 emacspeak-websearch-google-specialize
.................................................

 -- Command: emacspeak-websearch-google-specialize (specialize query)

     Perform a specialized Google search. See the Google site for
       what is possible here:
     https://www.google.com/options/specialsearches.html

     (fn SPECIALIZE QUERY)

12.199.1.20 emacspeak-websearch-google-with-toolbelt
....................................................

 -- Command: emacspeak-websearch-google-with-toolbelt (query)

     Launch Google search with toolbelt.

     (fn QUERY)

12.199.1.21 emacspeak-websearch-gutenberg
.........................................

 -- Command: emacspeak-websearch-gutenberg (type query)

     Perform an Gutenberg search

     (fn TYPE QUERY)

12.199.1.22 emacspeak-websearch-help
....................................

 -- Command: emacspeak-websearch-help

     Displays key mapping used by Emacspeak Websearch.

12.199.1.23 emacspeak-websearch-merriam-webster-search
......................................................

 -- Command: emacspeak-websearch-merriam-webster-search (query)

     Search the Merriam Webster Dictionary.

     (fn QUERY)

12.199.1.24 emacspeak-websearch-news-yahoo
..........................................

 -- Command: emacspeak-websearch-news-yahoo (query &optional rss)

     Perform an Yahoo News search.
     Optional prefix arg  avoids scraping  information from HTML.

     (fn QUERY &optional RSS)

12.199.1.25 emacspeak-websearch-open-directory-search
.....................................................

 -- Command: emacspeak-websearch-open-directory-search (query)

     Perform an Open Directory search

     (fn QUERY)

12.199.1.26 emacspeak-websearch-software-search
...............................................

 -- Command: emacspeak-websearch-software-search

     Search SourceForge, Freshmeat and other sites.

12.199.1.27 emacspeak-websearch-sourceforge-search
..................................................

 -- Command: emacspeak-websearch-sourceforge-search (query)

     Search SourceForge Site.

     (fn QUERY)

12.199.1.28 emacspeak-websearch-weather
.......................................

 -- Command: emacspeak-websearch-weather (query)

     Get weather forecast for specified zip code.

     (fn QUERY)

12.199.1.29 emacspeak-websearch-wikipedia-search
................................................

 -- Command: emacspeak-websearch-wikipedia-search (query)

     Search Wikipedia using Google.

     (fn QUERY)

12.199.1.30 emacspeak-websearch-yahoo
.....................................

 -- Command: emacspeak-websearch-yahoo (query)

     Perform an Yahoo  search

     (fn QUERY)

12.199.1.31 emacspeak-websearch-yahoo-exchange-rate-converter
.............................................................

 -- Command: emacspeak-websearch-yahoo-exchange-rate-converter
          (conversion-spec)

     Currency converter.

     (fn CONVERSION-SPEC)

12.199.1.32 emacspeak-websearch-yahoo-historical-chart
......................................................

 -- Command: emacspeak-websearch-yahoo-historical-chart (ticker
          &optional as-html)

     Look up historical stock data.
     Optional second arg as-html processes the results as HTML rather than data.

     (fn TICKER &optional AS-HTML)

12.199.1.33 emacspeak-websearch-youtube-search
..............................................

 -- Command: emacspeak-websearch-youtube-search (query)

     YouTube search.

     (fn QUERY)

12.199.2 emacspeak-websearch Options
------------------------------------

 -- Variable: User Option emacspeak-websearch-google-number-of-results
     Number of results to return from google search.

 -- Variable: User Option emacspeak-websearch-google-options
     Additional options to pass to Google e.g.  &xx=yy...

 -- Variable: User Option emacspeak-websearch-google-use-https
     Specify whether we use secure connections for Google search.


File: emacspeak.info,  Node: emacspeak-webspace,  Next: emacspeak-webutils,  Prev: emacspeak-websearch,  Up: Emacspeak Commands And Options

12.200 emacspeak-webspace
=========================

WEBSPACE == Smart Web Gadgets For The Emacspeak Desktop

12.200.1 emacspeak-webspace Commands
------------------------------------

12.200.1.1 emacspeak-webspace-feed-reader
.........................................

 -- Command: emacspeak-webspace-feed-reader (&optional refresh)
     ‘C-. R’
     ‘C-' R’
     ‘C-x @ s R’

     Display Feed Reader Feed list in a WebSpace buffer.
     Optional interactive prefix arg forces a refresh.

     (fn &optional REFRESH)

12.200.1.2 emacspeak-webspace-filter
....................................

 -- Command: emacspeak-webspace-filter

     Open headline at point by following its link property and filter for content.

12.200.1.3 emacspeak-webspace-headlines
.......................................

 -- Command: emacspeak-webspace-headlines
     ‘C-; SPC h’
     ‘C-x @ h SPC h’

     Startup Headlines ticker using RSS/Atom  feeds.

12.200.1.4 emacspeak-webspace-headlines-browse
..............................................

 -- Command: emacspeak-webspace-headlines-browse
     ‘C-; SPC SPC’
     ‘C-x @ h SPC SPC’

     Display buffer of browsable headlines.

12.200.1.5 emacspeak-webspace-headlines-update
..............................................

 -- Command: emacspeak-webspace-headlines-update

     Setup news updates.
     Updated headlines found in emacspeak-webspace-headlines.

12.200.1.6 emacspeak-webspace-knowledge-search
..............................................

 -- Command: emacspeak-webspace-knowledge-search (query &optional limit)
     ‘C-; k’
     ‘C-x @ h k’

     Perform a Google Knowledge Graph search.
     Optional interactive prefix arg ‘limit’ prompts for number of results, default is 1.

     (fn QUERY &optional LIMIT)

12.200.1.7 emacspeak-webspace-mode
..................................

 -- Command: emacspeak-webspace-mode

     Major mode for Webspace interaction.

     key             binding
     —             ——-

     TAB		forward-button
     ESC		Prefix Command
     ’		emacspeak-speak-rest-of-buffer
     .		emacspeak-webspace-filter
     /		search-forward
     <		beginning-of-buffer
     >		end-of-buffer
     ?		search-backward
     b		backward-button
     f		forward-button
     n		forward-button
     p		backward-button
     q		bury-buffer
     y		emacspeak-webspace-yank-link
     <backtab>	backward-button

     C-M-i		backward-button

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘emacspeak-webspace-mode-hook’, as the final or penultimate step
     during initialization.

12.200.1.8 emacspeak-webspace-open
..................................

 -- Command: emacspeak-webspace-open

     Open headline at point by following its link property.

12.200.1.9 emacspeak-webspace-transcode
.......................................

 -- Command: emacspeak-webspace-transcode

     Transcode headline at point by following its link property.

12.200.1.10 emacspeak-webspace-yank-link
........................................

 -- Command: emacspeak-webspace-yank-link

     Yank link under point into kill ring.

12.200.2 emacspeak-webspace Options
-----------------------------------

 -- Variable: User Option emacspeak-webspace-kg-key
     API Key for Google Knowledge Graph.


File: emacspeak.info,  Node: emacspeak-webutils,  Next: emacspeak-widget,  Prev: emacspeak-webspace,  Up: Emacspeak Commands And Options

12.201 emacspeak-webutils
=========================

This module provides common Web utilities for emacspeak.  This is to
avoid duplication of code in web support libraries

12.201.1 emacspeak-webutils Commands
------------------------------------

12.201.1.1 emacspeak-webutils-curl-play-media-at-point
......................................................

 -- Command: emacspeak-webutils-curl-play-media-at-point

     Use Curl to pull a URL, then pass
     the first line to MPlayer as a playlist.
     Useful in handling double-redirect from TuneIn.

12.201.1.2 emacspeak-webutils-google-extract-from-cache
.......................................................

 -- Command: emacspeak-webutils-google-extract-from-cache (&optional
          prefix)

     Extract current  page from the Google cache.
     With a prefix argument, extracts url under point.

     (fn &optional PREFIX)

12.201.1.3 emacspeak-webutils-google-on-this-site
.................................................

 -- Command: emacspeak-webutils-google-on-this-site

     Perform a google search restricted to the current WWW site.

12.201.1.4 emacspeak-webutils-google-similar-to-this-page
.........................................................

 -- Command: emacspeak-webutils-google-similar-to-this-page (url)

     Ask Google to find documents similar to this one.

     (fn URL)

12.201.1.5 emacspeak-webutils-google-who-links-to-this-page
...........................................................

 -- Command: emacspeak-webutils-google-who-links-to-this-page

     Perform a google search to locate documents that link to the
     current page.

12.201.1.6 emacspeak-webutils-jump-to-title-in-content
......................................................

 -- Command: emacspeak-webutils-jump-to-title-in-content

     Jumps to the title in web document.
     The first time it is called, it jumps to the first
     instance  of the title.  Repeated calls jump to further
     instances.

12.201.1.7 emacspeak-webutils-play-media-at-point
.................................................

 -- Command: emacspeak-webutils-play-media-at-point (&optional
          playlist-p)
     ‘C-e M-;’
     ‘<fn> M-;’

     Play media url under point.
     Optional interactive prefix arg ‘playlist-p’ says to treat the link as a playlist.
      A second interactive prefix arg adds mplayer option -allow-dangerous-playlist-parsing

     (fn &optional PLAYLIST-P)

12.201.1.8 emacspeak-webutils-transcode-current-url-via-google
..............................................................

 -- Command: emacspeak-webutils-transcode-current-url-via-google
          (&optional untranscode)

     Transcode current URL via Google.
       Reverse effect with prefix arg.

     (fn &optional UNTRANSCODE)

12.201.1.9 emacspeak-webutils-transcode-via-google
..................................................

 -- Command: emacspeak-webutils-transcode-via-google (&optional
          untranscode)

     Transcode URL under point via Google.
      Reverse effect with prefix arg for links on a transcoded page.

     (fn &optional UNTRANSCODE)

12.201.2 emacspeak-webutils Options
-----------------------------------

 -- Variable: User Option emacspeak-webutils-charent-alist
     Entities to unescape when treating badly escaped XML.


File: emacspeak.info,  Node: emacspeak-widget,  Next: emacspeak-windmove,  Prev: emacspeak-webutils,  Up: Emacspeak Commands And Options

12.202 emacspeak-widget
=======================

This module implements the necessary extensions to provide talking
widgets.

12.202.1 emacspeak-widget Commands
----------------------------------

12.202.1.1 emacspeak-widget-browse-widget-interactively
.......................................................

 -- Command: emacspeak-widget-browse-widget-interactively

     Allows you to browse a widget

12.202.1.2 emacspeak-widget-help
................................

 -- Command: emacspeak-widget-help

     Speak help for widget under point.

12.202.1.3 emacspeak-widget-summarize-parent
............................................

 -- Command: emacspeak-widget-summarize-parent

     Summarize parent of widget at point.

12.202.1.4 emacspeak-widget-summarize-widget-under-point
........................................................

 -- Command: emacspeak-widget-summarize-widget-under-point (&optional
          level)

     Summarize a widget if any under point.
     Optional interactive prefix specifies how many levels to go up from current
     widget before summarizing.

     (fn &optional LEVEL)

12.202.1.5 emacspeak-widget-update-from-minibuffer
..................................................

 -- Command: emacspeak-widget-update-from-minibuffer (pos)

     Sets widget at ‘pos’ by invoking its prompter.

     (fn POS)


File: emacspeak.info,  Node: emacspeak-windmove,  Next: emacspeak-winring,  Prev: emacspeak-widget,  Up: Emacspeak Commands And Options

12.203 emacspeak-windmove
=========================

Package windmove (bundled with Emacs 21) provides commands for
navigating to windows based on relative position.


File: emacspeak.info,  Node: emacspeak-winring,  Next: emacspeak-wizards,  Prev: emacspeak-windmove,  Up: Emacspeak Commands And Options

12.204 emacspeak-winring
========================

window configurations in emacs are very useful you can display the same
file in different windows, and have different portions of the file
displayed.  winring allows you to manage window configurations, and this
module speech-enables it.


File: emacspeak.info,  Node: emacspeak-wizards,  Next: emacspeak-woman,  Prev: emacspeak-winring,  Up: Emacspeak Commands And Options

12.205 emacspeak-wizards
========================

Contains various wizards for the Emacspeak desktop.

12.205.1 emacspeak-wizards Commands
-----------------------------------

12.205.1.1 emacspeak-annotate-add-annotation
............................................

 -- Command: emacspeak-annotate-add-annotation (&optional reset)

     Add annotation to the annotation working buffer.
     Prompt for annotation buffer if not already set.
     Interactive prefix arg ‘reset’ prompts for the annotation
     buffer even if one is already set.
     Annotation is entered in a temporary buffer and the
     annotation is inserted into the working buffer when complete.

     (fn &optional RESET)

12.205.1.2 emacspeak-clipboard-copy
...................................

 -- Command: emacspeak-clipboard-copy (start end &optional prompt)
     ‘C-e C-c’
     ‘<fn> C-c’

     Copy contents of the region to the emacspeak clipboard. Previous
     contents of the clipboard will be overwritten. The Emacspeak clipboard
     is a convenient way of sharing information between independent
     Emacspeak sessions running on the same or different machines. Do not
     use this for sharing information within an Emacs session –Emacs’
     register commands are far more efficient and light-weight. Optional
     interactive prefix arg results in Emacspeak prompting for the
     clipboard file to use. Argument START and END specifies
     region. Optional argument PROMPT specifies whether we prompt for the
     name of a clipboard file.

     (fn START END &optional PROMPT)

12.205.1.3 emacspeak-clipboard-paste
....................................

 -- Command: emacspeak-clipboard-paste (&optional paste-table)
     ‘C-e C-y’
     ‘<fn> C-y’

     Yank contents of the Emacspeak clipboard at point.
     The Emacspeak clipboard is a convenient way of sharing information between
     independent Emacspeak sessions running on the same or different
     machines.  Do not use this for sharing information within an Emacs
     session –Emacs’ register commands are far more efficient and
     light-weight.  Optional interactive prefix arg pastes from
     the emacspeak table clipboard instead.

     (fn &optional PASTE-TABLE)

12.205.1.4 emacspeak-copy-current-file
......................................

 -- Command: emacspeak-copy-current-file
     ‘C-e M-c’
     ‘<fn> M-c’

     Copy file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when copying.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Asks for confirmation if the copy will result in an
       existing file being overwritten.

12.205.1.5 emacspeak-curl
.........................

 -- Command: emacspeak-curl (url)

     Grab URL using Curl, and preview it with a browser .

     (fn URL)

12.205.1.6 emacspeak-customize
..............................

 -- Command: emacspeak-customize
     ‘C-e C’
     ‘<fn> C’

     Customize Emacspeak.

12.205.1.7 emacspeak-emergency-tts-restart
..........................................

 -- Command: emacspeak-emergency-tts-restart
     ‘C-e <insert>’
     ‘<fn> <insert>’
     ‘C-e x s’
     ‘<fn> x s’

     For use in an emergency.
     Will start TTS engine specified by
     emacspeak-emergency-tts-server.

12.205.1.8 emacspeak-frame-label-or-switch-to-labelled-frame
............................................................

 -- Command: emacspeak-frame-label-or-switch-to-labelled-frame
          (&optional prefix)
     ‘C-e M-f’
     ‘<fn> M-f’

     Switch to labelled frame.
     With optional PREFIX argument, label current frame.

     (fn &optional PREFIX)

12.205.1.9 emacspeak-kill-buffer-quietly
........................................

 -- Command: emacspeak-kill-buffer-quietly
     ‘C-e C-t Q’
     ‘<fn> C-t Q’

     Kill current buffer without asking for confirmation.

12.205.1.10 emacspeak-learn-emacs-mode
......................................

 -- Command: emacspeak-learn-emacs-mode
     ‘C-e <f1>’
     ‘C-h C-l’
     ‘<fn> <f1>’
     ‘<f1> C-l’
     ‘<help> C-l’

     Helps you learn the keys.  You can press keys and hear what they do.
     To leave, press C-g.

12.205.1.11 emacspeak-link-current-file
.......................................

 -- Command: emacspeak-link-current-file
     ‘C-e M-l’
     ‘<fn> M-l’

     Link (hard link) file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when linking.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Signals an error if target already exists.

12.205.1.12 emacspeak-links
...........................

 -- Command: emacspeak-links (url)

     Launch links on  specified URL in a new terminal.

     (fn URL)

12.205.1.13 emacspeak-lynx
..........................

 -- Command: emacspeak-lynx (url)

     Launch lynx on  specified URL in a new terminal.

     (fn URL)

12.205.1.14 emacspeak-next-frame-or-buffer
..........................................

 -- Command: emacspeak-next-frame-or-buffer (&optional frame)
     ‘<C-right>’

     Move to next buffer.
     With optional interactive prefix arg ‘frame’, move to next frame instead.

     (fn &optional FRAME)

12.205.1.15 emacspeak-previous-frame-or-buffer
..............................................

 -- Command: emacspeak-previous-frame-or-buffer (&optional frame)
     ‘<C-left>’

     Move to previous buffer.
     With optional interactive prefix arg ‘frame’, move to previous frame instead.

     (fn &optional FRAME)

12.205.1.16 emacspeak-select-this-buffer-next-display
.....................................................

 -- Command: emacspeak-select-this-buffer-next-display
     ‘C-e <C-<right>’
     ‘<fn> <C-<right>’

     Select this buffer as displayed in a ‘next’ frame.
     See documentation for command
     ‘emacspeak-select-this-buffer-other-window-display’ for the
     meaning of ‘next’.

12.205.1.17 emacspeak-select-this-buffer-other-window-display
.............................................................

 -- Command: emacspeak-select-this-buffer-other-window-display
          (&optional arg)

     Switch  to this buffer as displayed in a different frame.  Emacs
     allows you to display the same buffer in multiple windows or
     frames.  These different windows can display different
     portions of the buffer.  This is equivalent to leaving a
     book open at multiple places at once.  This command allows you to
     move to the places where you have left the book open.  The
     number used to invoke this command specifies which of the
     displays you wish to select.  Typically you will have two or
     at most three such displays open.  The current display is 0,
     the next is 1, and so on.  Optional argument ARG specifies
     the display to select.

     (fn &optional ARG)

12.205.1.18 emacspeak-select-this-buffer-previous-display
.........................................................

 -- Command: emacspeak-select-this-buffer-previous-display
     ‘C-e <C-<left>’
     ‘<fn> <C-<left>’

     Select this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-select-this-buffer-other-window-display’ for the
     meaning of ‘previous’.

12.205.1.19 emacspeak-show-personality-at-point
...............................................

 -- Command: emacspeak-show-personality-at-point
     ‘C-e M-v’
     ‘<fn> M-v’

     Show value of property personality (and possibly face)
     at point.

12.205.1.20 emacspeak-show-property-at-point
............................................

 -- Command: emacspeak-show-property-at-point (&optional property)
     ‘C-e M-p’
     ‘<fn> M-p’

     Show value of PROPERTY at point.
     If optional arg property is not supplied, read it interactively.
     Provides completion based on properties at point.
     If no property is set, show a message and exit.

     (fn &optional PROPERTY)

12.205.1.21 emacspeak-skip-blank-lines-backward
...............................................

 -- Command: emacspeak-skip-blank-lines-backward
     ‘<S-up>’

     Move backward  across blank lines.
     The line under point is   then spoken.
     Signals beginning  of buffer.

12.205.1.22 emacspeak-skip-blank-lines-forward
..............................................

 -- Command: emacspeak-skip-blank-lines-forward
     ‘<S-down>’

     Move forward across blank lines.
     The line under point is then spoken.
     Signals end of buffer.

12.205.1.23 emacspeak-speak-popup-messages
..........................................

 -- Command: emacspeak-speak-popup-messages
     ‘C-h M’
     ‘<f1> M’
     ‘<help> M’

     Pop up messages buffer.
     If it is already selected then hide it and try to restore
     previous window configuration.

12.205.1.24 emacspeak-speak-telephone-directory
...............................................

 -- Command: emacspeak-speak-telephone-directory (&optional edit)
     ‘C-e x t’
     ‘<fn> x t’

     Lookup and display a phone number.
     With prefix arg, opens the phone book for editing.

     (fn &optional EDIT)

12.205.1.25 emacspeak-speak-this-buffer-next-display
....................................................

 -- Command: emacspeak-speak-this-buffer-next-display
     ‘C-e <right>’
     ‘<fn> <right>’

     Speak this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-speak-this-buffer-other-window-display’ for the
     meaning of ‘next’.

12.205.1.26 emacspeak-speak-this-buffer-other-window-display
............................................................

 -- Command: emacspeak-speak-this-buffer-other-window-display (&optional
          arg)
     ‘C-e /’
     ‘<fn> /’

     Speak this buffer as displayed in a different frame.  Emacs
     allows you to display the same buffer in multiple windows or
     frames.  These different windows can display different
     portions of the buffer.  This is equivalent to leaving a
     book open at places at once.  This command allows you to
     listen to the places where you have left the book open.  The
     number used to invoke this command specifies which of the
     displays you wish to speak.  Typically you will have two or
     at most three such displays open.  The current display is 0,
     the next is 1, and so on.  Optional argument ARG specifies
     the display to speak.

     (fn &optional ARG)

12.205.1.27 emacspeak-speak-this-buffer-previous-display
........................................................

 -- Command: emacspeak-speak-this-buffer-previous-display
     ‘C-e <left>’
     ‘<fn> <left>’

     Speak this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-speak-this-buffer-other-window-display’ for the
     meaning of ‘previous’.

12.205.1.28 emacspeak-ssh-tts-restart
.....................................

 -- Command: emacspeak-ssh-tts-restart
     ‘C-e <delete>’
     ‘C-e <(deletechar>’
     ‘<fn> <delete>’
     ‘<fn> <(deletechar>’

     Restart specified ssh tts server.

12.205.1.29 emacspeak-symlink-current-file
..........................................

 -- Command: emacspeak-symlink-current-file
     ‘C-e M-s’
     ‘<fn> M-s’

     Link (symbolic link) file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when linking.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Signals an error if target already exists.

12.205.1.30 emacspeak-view-emacspeak-news
.........................................

 -- Command: emacspeak-view-emacspeak-news
     ‘C-e N’
     ‘<fn> N’

     Display emacspeak News for a given version.

12.205.1.31 emacspeak-view-emacspeak-tips
.........................................

 -- Command: emacspeak-view-emacspeak-tips
     ‘C-e T’
     ‘<fn> T’

     Browse  Emacspeak productivity tips.

12.205.1.32 emacspeak-wizards-add-autoload-cookies
..................................................

 -- Command: emacspeak-wizards-add-autoload-cookies (&optional f)

     Add autoload cookies to file f.
     Default is to add autoload cookies to current file.

     (fn &optional F)

12.205.1.33 emacspeak-wizards-alpha-vantage-quotes
..................................................

 -- Command: emacspeak-wizards-alpha-vantage-quotes (ticker &optional
          custom)

     Retrieve stock quote data from Alpha Vantage. Prompts for ‘ticker’
     — a stock symbol. Optional interactive prefix arg ‘custom’ provides
     access to the various functions provided by alpha-vantage.

     (fn TICKER &optional CUSTOM)

12.205.1.34 emacspeak-wizards-bash-completion-toggle
....................................................

 -- Command: emacspeak-wizards-bash-completion-toggle

     Toggle bash completion from package bash-completion in this shell.

12.205.1.35 emacspeak-wizards-braille
.....................................

 -- Command: emacspeak-wizards-braille (s)

     Insert Braille string at point.

     (fn S)

12.205.1.36 emacspeak-wizards-byte-compile-current-buffer
.........................................................

 -- Command: emacspeak-wizards-byte-compile-current-buffer

     byte compile current buffer

12.205.1.37 emacspeak-wizards-cleanup-shell-path
................................................

 -- Command: emacspeak-wizards-cleanup-shell-path

     Cleans up duplicates in shell path env variable.

12.205.1.38 emacspeak-wizards-color-at-point
............................................

 -- Command: emacspeak-wizards-color-at-point
     ‘C-h ,’
     ‘<f1> ,’
     ‘<help> ,’

     Echo foreground/background color at point.

12.205.1.39 emacspeak-wizards-color-diff-at-point
.................................................

 -- Command: emacspeak-wizards-color-diff-at-point (&optional set)
     ‘C-h \’
     ‘<f1> \’
     ‘<help> \’

     Meaningfully speak difference between background and foreground color at point.
     With interactive prefix arg, set foreground and background color first.

     (fn &optional SET)

12.205.1.40 emacspeak-wizards-color-wheel
.........................................

 -- Command: emacspeak-wizards-color-wheel (start)
     ‘C-e x c’
     ‘<fn> x c’

     Interactively manipulate a simple color wheel and display the name
       and shade of the resulting color.  This makes for a fun color
       exploration tool with verbal descriptions of the colors from package
       name-this-color. Prompts for a color from which to start exploration.

     Keyboard Commands During Interaction:
     Up/Down: Increase/Decrement along current axis using specified step-size.
     =: Set value on current axis to number read from minibuffer.
     Left/Right: Switch color axis along which to move.
     b/f: Quit  wheel after setting background/foreground color to current value.
     n: Read color name from minibuffer.
     c: Complement  current color.
     s: Set stepsize to number read from minibuffer.
     q: Quit color wheel, after copying current hex value to kill-ring.

     (fn START)

12.205.1.41 emacspeak-wizards-colors
....................................

 -- Command: emacspeak-wizards-colors
     ‘C-e x C’
     ‘<fn> x C’

     Display list of colors and setup a callback to activate color
     under point as either the foreground or background color.

12.205.1.42 emacspeak-wizards-comma-at-end-of-word
..................................................

 -- Command: emacspeak-wizards-comma-at-end-of-word

     Move to the end of current word and add a comma.

12.205.1.43 emacspeak-wizards-count-slides-in-region
....................................................

 -- Command: emacspeak-wizards-count-slides-in-region (start end)

     Count slides starting from point.

     (fn START END)

12.205.1.44 emacspeak-wizards-customize-saved
.............................................

 -- Command: emacspeak-wizards-customize-saved (pattern)
     ‘C-h C-s’
     ‘<f1> C-s’
     ‘<help> C-s’

     Customize saved options matching ‘pattern’.  This command enables
     updating custom settings for a specific package or group of packages.

     (fn PATTERN)

12.205.1.45 emacspeak-wizards-cycle-to-next-buffer
..................................................

 -- Command: emacspeak-wizards-cycle-to-next-buffer
     ‘C-, n’
     ‘C-x @ a n’

     Cycles to next buffer having same mode.

12.205.1.46 emacspeak-wizards-cycle-to-previous-buffer
......................................................

 -- Command: emacspeak-wizards-cycle-to-previous-buffer
     ‘C-, p’
     ‘C-x @ a p’

     Cycles to previous buffer having same mode.

12.205.1.47 emacspeak-wizards-display-pod-as-manpage
....................................................

 -- Command: emacspeak-wizards-display-pod-as-manpage (filename)

     Create a virtual manpage in Emacs from the Perl Online Documentation.

     (fn FILENAME)

12.205.1.48 emacspeak-wizards-dvi-display
.........................................

 -- Command: emacspeak-wizards-dvi-display

     Called to set up preview of an DVI file.
     Assumes we are in a buffer visiting a .DVI file.
     Previews those contents as text and nukes the buffer
     visiting the DVI file.

12.205.1.49 emacspeak-wizards-dvi-mode
......................................

 -- Command: emacspeak-wizards-dvi-mode

     Major mode for browsing DVI files.

     DVI files  are converted to text and previewed using text mode.

     This mode runs the hook ‘emacspeak-wizards-dvi-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.205.1.50 emacspeak-wizards-end-of-word
.........................................

 -- Command: emacspeak-wizards-end-of-word (arg)

     move to end of word

     (fn ARG)

12.205.1.51 emacspeak-wizards-enumerate-matching-commands
.........................................................

 -- Command: emacspeak-wizards-enumerate-matching-commands (pattern)

     Return list of commands whose names match pattern.

     (fn PATTERN)

12.205.1.52 emacspeak-wizards-enumerate-matching-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-matching-faces (pattern)

     Enumerate  faces matching pattern.

     (fn PATTERN)

12.205.1.53 emacspeak-wizards-enumerate-obsolete-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-obsolete-faces

     utility function to enumerate old, obsolete maps that we have still
     mapped to voices.

12.205.1.54 emacspeak-wizards-enumerate-uncovered-commands
..........................................................

 -- Command: emacspeak-wizards-enumerate-uncovered-commands (pattern
          &optional bound-only)

     Enumerate unadvised commands matching pattern.
     Optional interactive prefix arg ‘bound-only’
     filters out commands that dont have an active key-binding.

     (fn PATTERN &optional BOUND-ONLY)

12.205.1.55 emacspeak-wizards-enumerate-unmapped-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-unmapped-faces (&optional
          pattern)

     Enumerate unmapped faces matching pattern.

     (fn &optional PATTERN)

12.205.1.56 emacspeak-wizards-espeak-line
.........................................

 -- Command: emacspeak-wizards-espeak-line

     Speak line using espeak polyglot wizard.

12.205.1.57 emacspeak-wizards-espeak-region
...........................................

 -- Command: emacspeak-wizards-espeak-region (start end)

     Speak region using ESpeak polyglot wizard.

     (fn START END)

12.205.1.58 emacspeak-wizards-espeak-string
...........................................

 -- Command: emacspeak-wizards-espeak-string (string)

     Speak string in lang via ESpeak.
     Lang is obtained from property ‘lang’ on string, or  via an interactive prompt.

     (fn STRING)

12.205.1.59 emacspeak-wizards-eww-buffer-list
.............................................

 -- Command: emacspeak-wizards-eww-buffer-list

     Display list of open EWW buffers.

12.205.1.60 emacspeak-wizards-execute-asynchronously
....................................................

 -- Command: emacspeak-wizards-execute-asynchronously (key)
     ‘C-. a’
     ‘C-' a’
     ‘C-x @ s a’

     Read key-sequence, then execute its command on a new thread.

     (fn KEY)

12.205.1.61 emacspeak-wizards-finance-google-search
...................................................

 -- Command: emacspeak-wizards-finance-google-search (ticker)

     Google Finance Search

     (fn TICKER)

12.205.1.62 emacspeak-wizards-find-emacspeak-source
...................................................

 -- Command: emacspeak-wizards-find-emacspeak-source

     Like find-file, but binds default-directory to emacspeak-directory.

12.205.1.63 emacspeak-wizards-find-file-as-root
...............................................

 -- Command: emacspeak-wizards-find-file-as-root (file)

     Like ‘ido-find-file, but automatically edit the file with
     root-privileges (using tramp/sudo), if the file is not writable by
     user.

     (fn FILE)

12.205.1.64 emacspeak-wizards-find-grep
.......................................

 -- Command: emacspeak-wizards-find-grep (glob pattern)

     Run compile using find and grep.
     Interactive  arguments specify filename pattern and search pattern.

     (fn GLOB PATTERN)

12.205.1.65 emacspeak-wizards-find-longest-line-in-region
.........................................................

 -- Command: emacspeak-wizards-find-longest-line-in-region (start end)
     ‘C-e x =’
     ‘<fn> x =’

     Find longest line in region.
     Moves to the longest line when called interactively.

     (fn START END)

12.205.1.66 emacspeak-wizards-find-longest-paragraph-in-region
..............................................................

 -- Command: emacspeak-wizards-find-longest-paragraph-in-region (start
          end)

     Find longest paragraph in region.
     Moves to the longest paragraph when called interactively.

     (fn START END)

12.205.1.67 emacspeak-wizards-find-shortest-line-in-region
..........................................................

 -- Command: emacspeak-wizards-find-shortest-line-in-region (start end)

     Find shortest line in region.
     Moves to the shortest line when called interactively.

     (fn START END)

12.205.1.68 emacspeak-wizards-finder-find
.........................................

 -- Command: emacspeak-wizards-finder-find (directory)

     Run find-dired on specified switches after prompting for the
     directory to where find is to be launched.

     (fn DIRECTORY)

12.205.1.69 emacspeak-wizards-finder-mode
.........................................

 -- Command: emacspeak-wizards-finder-mode

     Emacspeak Finder

     This mode runs the hook ‘emacspeak-wizards-finder-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.205.1.70 emacspeak-wizards-fix-read-only-text
................................................

 -- Command: emacspeak-wizards-fix-read-only-text (start end)

     Nuke read-only property on text range.

     (fn START END)

12.205.1.71 emacspeak-wizards-fix-typo
......................................

 -- Command: emacspeak-wizards-fix-typo (ext word correction)

     Search and replace  recursively in all files with extension ‘ext’
     for ‘word’ and replace it with correction.
     Use with caution.

     (fn EXT WORD CORRECTION)

12.205.1.72 emacspeak-wizards-frame-colors
..........................................

 -- Command: emacspeak-wizards-frame-colors

     Display frame’s foreground/background color seetting.

12.205.1.73 emacspeak-wizards-gen-fn-decl
.........................................

 -- Command: emacspeak-wizards-gen-fn-decl (f &optional ext)

     Generate declare-function call for function ‘f’.
     Optional interactive prefix arg ext says this comes from an
     external package.

     (fn F &optional EXT)

12.205.1.74 emacspeak-wizards-generate-finder
.............................................

 -- Command: emacspeak-wizards-generate-finder

     Generate a widget-enabled finder wizard.

12.205.1.75 emacspeak-wizards-generate-voice-sampler
....................................................

 -- Command: emacspeak-wizards-generate-voice-sampler (step)

     Generate a buffer that shows a sample line in all the ACSS settings
     for the current voice family.

     (fn STEP)

12.205.1.76 emacspeak-wizards-get-table-content-from-file
.........................................................

 -- Command: emacspeak-wizards-get-table-content-from-file (file depth
          count)

     Extract table specified by depth and count from HTML
     content at file.
     Extracted content is sent to STDOUT.

     (fn FILE DEPTH COUNT)

12.205.1.77 emacspeak-wizards-get-table-content-from-url
........................................................

 -- Command: emacspeak-wizards-get-table-content-from-url (url depth
          count)

     Extract table specified by depth and count from HTML
     content at URL.
     Extracted content is placed as a csv file in task.csv.

     (fn URL DEPTH COUNT)

12.205.1.78 emacspeak-wizards-google-headlines
..............................................

 -- Command: emacspeak-wizards-google-headlines
     ‘C-. C-n’
     ‘C-' C-n’
     ‘C-x @ s C-n’

     Display just the headlines from Google News for fast loading.

12.205.1.79 emacspeak-wizards-google-news
.........................................

 -- Command: emacspeak-wizards-google-news
     ‘C-. n’
     ‘C-' n’
     ‘C-x @ s n’

     Clean up news.google.com for  skimming the news.

12.205.1.80 emacspeak-wizards-google-transcode
..............................................

 -- Command: emacspeak-wizards-google-transcode

     View Web through Google Transcoder.

12.205.1.81 emacspeak-wizards-how-many-matches
..............................................

 -- Command: emacspeak-wizards-how-many-matches (start end &optional
          prefix)
     ‘C-e x h’
     ‘<fn> x h’

     If you define a file local variable
     called ‘emacspeak-occur-pattern’ that holds a regular expression
     that matches  lines of interest, you can use this command to conveniently
     run ‘how-many’ to count  matching header lines.
     With interactive prefix arg, prompts for and remembers the file local pattern.

     (fn START END &optional PREFIX)

12.205.1.82 emacspeak-wizards-iex-show-financials
.................................................

 -- Command: emacspeak-wizards-iex-show-financials (symbol &optional
          refresh)

     Show financials for specified ticker.
     Checks cache, then makes API call if needed.
     Optional interactive prefix arg refreshes cache.

     (fn SYMBOL &optional REFRESH)

12.205.1.83 emacspeak-wizards-iex-show-news
...........................................

 -- Command: emacspeak-wizards-iex-show-news (symbol &optional refresh)

     Show news for specified ticker.
     Checks cache, then makes API call if needed.
     Optional interactive prefix arg refreshes cache.

     (fn SYMBOL &optional REFRESH)

12.205.1.84 emacspeak-wizards-iex-show-price
............................................

 -- Command: emacspeak-wizards-iex-show-price (symbol)
     ‘C-, q’
     ‘C-x @ a q’

     Quick Quote: Just stock price from IEX Trading.

     (fn SYMBOL)

12.205.1.85 emacspeak-wizards-iex-show-quote
............................................

 -- Command: emacspeak-wizards-iex-show-quote (&optional refresh)
     ‘C-. q’
     ‘C-' q’
     ‘C-x @ s q’

     Show portfolio  data from cache.
     Optional interactive prefix arg forces cache refresh.

     The quotes view uses emacspeak’s table mode.
     In addition,  the following  keys are available :

     F: Show financials for current stock.
     N: Show news for current stock.
     P: Show live price for current stock.

     (fn &optional REFRESH)

12.205.1.86 emacspeak-wizards-iex-this-financials
.................................................

 -- Command: emacspeak-wizards-iex-this-financials

     Show financials for symbol in current row

12.205.1.87 emacspeak-wizards-iex-this-google-finance
.....................................................

 -- Command: emacspeak-wizards-iex-this-google-finance

     Lookup this ticker on Google Finance

12.205.1.88 emacspeak-wizards-iex-this-news
...........................................

 -- Command: emacspeak-wizards-iex-this-news

     Show news for symbol in current row

12.205.1.89 emacspeak-wizards-iex-this-price
............................................

 -- Command: emacspeak-wizards-iex-this-price

     Show price for symbol in current row

12.205.1.90 emacspeak-wizards-iheart
....................................

 -- Command: emacspeak-wizards-iheart (q)
     ‘C-, i’
     ‘C-x @ a i’

     Perform IHeart Radio search and display clickable results.

     (fn Q)

12.205.1.91 emacspeak-wizards-iheart-radio-play
...............................................

 -- Command: emacspeak-wizards-iheart-radio-play (id)

     Play specified   station from IHeart Radio.

     (fn ID)

12.205.1.92 emacspeak-wizards-lacheck-buffer-file
.................................................

 -- Command: emacspeak-wizards-lacheck-buffer-file

     Run Lacheck on current buffer.

12.205.1.93 emacspeak-wizards-load-current-file
...............................................

 -- Command: emacspeak-wizards-load-current-file

     load file into emacs

12.205.1.94 emacspeak-wizards-mlb-standings
...........................................

 -- Command: emacspeak-wizards-mlb-standings (&optional raw)

     Display MLB standings as of today.
     Optional interactive prefix arg shows  unprocessed results.

     (fn &optional RAW)

12.205.1.95 emacspeak-wizards-move-and-speak
............................................

 -- Command: emacspeak-wizards-move-and-speak (command count)

     Speaks a chunk of text bounded by point and a target position.
     Target position is specified using a navigation command and a
     count that specifies how many times to execute that command
     first.  Point is left at the target position.  Interactively,
     command is specified by pressing the key that invokes the
     command.

     (fn COMMAND COUNT)

12.205.1.96 emacspeak-wizards-nba-standings
...........................................

 -- Command: emacspeak-wizards-nba-standings (&optional raw)

     Display NBA standings as of today.
     Optional interactive prefix arg shows  unprocessed results.

     (fn &optional RAW)

12.205.1.97 emacspeak-wizards-next-bullet
.........................................

 -- Command: emacspeak-wizards-next-bullet

     Navigate to and speak next ‘bullet’.

12.205.1.98 emacspeak-wizards-next-interactive-defun
....................................................

 -- Command: emacspeak-wizards-next-interactive-defun

     Move point to the next interactive defun

12.205.1.99 emacspeak-wizards-next-shell
........................................

 -- Command: emacspeak-wizards-next-shell

     Switch to next shell.

12.205.1.100 emacspeak-wizards-noaa-weather
...........................................

 -- Command: emacspeak-wizards-noaa-weather (&optional ask)
     ‘C-e x w’
     ‘<fn> x w’

     Display weather information using NOAA Weather API.
     Data is retrieved only once, subsequent calls switch to previously
     displayed results. Kill that buffer or use an interactive prefix
     arg (C-u) to get new data.  Optional second interactive prefix
     arg (C-u C-u) asks for location address; Default is to display
     weather for ‘gweb-my-address’.

     (fn &optional ASK)

12.205.1.101 emacspeak-wizards-occur-header-lines
.................................................

 -- Command: emacspeak-wizards-occur-header-lines (&optional prefix)
     ‘C-e x o’
     ‘<fn> x o’

     If you define a file local variable called
     ‘emacspeak-occur-pattern’ that holds a regular expression that
     matches header lines, you can use this command to conveniently
     run ‘occur’ to find matching header lines. With prefix arg,
     prompts for and sets value of the file local pattern.

     (fn &optional PREFIX)

12.205.1.102 emacspeak-wizards-pdf-open
.......................................

 -- Command: emacspeak-wizards-pdf-open (filename &optional ask-pwd)
     ‘C-; p’
     ‘C-x @ h p’

     Open pdf file as text.
     Optional interactive prefix arg ask-pwd prompts for password.

     (fn FILENAME &optional ASK-PWD)

12.205.1.103 emacspeak-wizards-popup-input-buffer
.................................................

 -- Command: emacspeak-wizards-popup-input-buffer (mode)

     Provide an input buffer in a specified mode.

     (fn MODE)

12.205.1.104 emacspeak-wizards-ppt-display
..........................................

 -- Command: emacspeak-wizards-ppt-display

     Called to set up preview of an PPT file.
     Assumes we are in a buffer visiting a .ppt file.
     Previews those contents as HTML and nukes the buffer
     visiting the ppt file.

12.205.1.105 emacspeak-wizards-ppt-mode
.......................................

 -- Command: emacspeak-wizards-ppt-mode

     Major mode for browsing PPT slides.

     PPT files  are converted to HTML and previewed using a browser.

     In addition to any hooks its parent mode ‘text-mode’ might have run,
     this mode runs the hook ‘emacspeak-wizards-ppt-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.205.1.106 emacspeak-wizards-previous-bullet
..............................................

 -- Command: emacspeak-wizards-previous-bullet

     Navigate to and speak previous ‘bullet’.

12.205.1.107 emacspeak-wizards-previous-shell
.............................................

 -- Command: emacspeak-wizards-previous-shell

     Switch to previous shell.

12.205.1.108 emacspeak-wizards-quick-weather
............................................

 -- Command: emacspeak-wizards-quick-weather
     ‘C-; w’
     ‘C-x @ h w’

     Bring up weather forecast for current location.

12.205.1.109 emacspeak-wizards-quote
....................................

 -- Command: emacspeak-wizards-quote (&optional refresh)
     ‘C-e x q’
     ‘<fn> x q’

     Top-level dispatch for looking up Stock Market information.

     Key:Action
     f: Financials
     G: finance Google Search
     n: News
     p: Price
     q: Quotes

     (fn &optional REFRESH)

12.205.1.110 emacspeak-wizards-rivo
...................................

 -- Command: emacspeak-wizards-rivo (when channel stop-time output
          directory)

     Rivo wizard.
     Prompts for relevant information and schedules a rivo job using
       UNIX At scheduling facility.
     RIVO is implemented by rivo.pl —
      a Perl script  that can be used to launch streaming media and record
        streaming media for  a specified duration.

     (fn WHEN CHANNEL STOP-TIME OUTPUT DIRECTORY)

12.205.1.111 emacspeak-wizards-rpm-query-in-dired
.................................................

 -- Command: emacspeak-wizards-rpm-query-in-dired

     Run rpm -qi on current dired entry.

12.205.1.112 emacspeak-wizards-scratch
......................................

 -- Command: emacspeak-wizards-scratch
     ‘C-. SPC’
     ‘C-' SPC’
     ‘C-x @ s SPC’

     Switch to *scratch* buffer, creating it if necessary.

12.205.1.113 emacspeak-wizards-set-colors
.........................................

 -- Command: emacspeak-wizards-set-colors

     Interactively prompt for foreground and background colors.

12.205.1.114 emacspeak-wizards-shell
....................................

 -- Command: emacspeak-wizards-shell (&optional prefix)
     ‘C-; s’
     ‘C-x @ h s’

     Run Emacs built-in ‘shell’ command when not in a shell buffer, or
     when called with a prefix argument. When called from a shell buffer,
     switches to ‘next’ shell buffer. When called from outside a shell
     buffer, find the most ‘appropriate shell’ and switch to it. Once
     switched, set default directory in that target shell to the directory
     of the source buffer.

     (fn &optional PREFIX)

12.205.1.115 emacspeak-wizards-shell-by-key
...........................................

 -- Command: emacspeak-wizards-shell-by-key (&optional prefix)
     ‘C-e x 9’
     ‘C-e x 8’
     ‘C-e x 7’
     ‘C-e x 6’
     ‘C-e x 5’
     ‘C-e x 4’
     ‘C-e x 3’
     ‘C-e x 2’
     ‘C-e x 1’
     ‘C-e x 0’
     ‘<fn> x 9’
     ‘<fn> x 8’
     ‘<fn> x 7’
     ‘<fn> x 6’
     ‘<fn> x 5’
     ‘<fn> x 4’
     ‘<fn> x 3’
     ‘<fn> x 2’
     ‘<fn> x 1’
     ‘<fn> x 0’

     Switch to shell buffer by key. This provides a predictable means for
       switching to a specific shell buffer. When invoked from a
       non-shell-mode buffer that is visiting a file, invokes ‘cd ’ in the
       shell to change to the value of ‘default-directory’ — if called with  a
       prefix-arg. When already in a shell buffer,
       interactive prefix arg ‘prefix’ causes this shell to be re-keyed if
       appropriate — see M-x emacspeak-wizards-shell-re-key for an
       explanation of how re-keying works.

     (fn &optional PREFIX)

12.205.1.116 emacspeak-wizards-shell-command-on-current-file
............................................................

 -- Command: emacspeak-wizards-shell-command-on-current-file (command)
     ‘C-e &’
     ‘<fn> &’

     Prompts for and runs shell command on current file.

     (fn COMMAND)

12.205.1.117 emacspeak-wizards-shell-directory-reset
....................................................

 -- Command: emacspeak-wizards-shell-directory-reset
     ‘C-. .’
     ‘C-' .’
     ‘C-e x .’
     ‘<fn> x .’
     ‘C-x @ s .’

     Set current directory to this shell’s initial directory if one was defined.

12.205.1.118 emacspeak-wizards-shell-directory-set
..................................................

 -- Command: emacspeak-wizards-shell-directory-set
     ‘C-e x ,’
     ‘<fn> x ,’

     Define current directory as this shell’s project directory.

12.205.1.119 emacspeak-wizards-shell-toggle
...........................................

 -- Command: emacspeak-wizards-shell-toggle
     ‘C-e <f11>’
     ‘C-; j’
     ‘<fn> <f11>’
     ‘C-x @ h j’

     Switch to the shell buffer and cd to
      the directory of the current buffer.

12.205.1.120 emacspeak-wizards-show-commentary
..............................................

 -- Command: emacspeak-wizards-show-commentary (&optional file)

     Display commentary. Default is to display commentary from current buffer.

     (fn &optional FILE)

12.205.1.121 emacspeak-wizards-show-defined-voices
..................................................

 -- Command: emacspeak-wizards-show-defined-voices

     Display a buffer with sample text in the defined voices.

12.205.1.122 emacspeak-wizards-show-environment-variable
........................................................

 -- Command: emacspeak-wizards-show-environment-variable (v)

     Display value of specified environment variable.

     (fn V)

12.205.1.123 emacspeak-wizards-show-eval-result
...............................................

 -- Command: emacspeak-wizards-show-eval-result (form)
     ‘M-ESC :’

     Convenience command to pretty-print and view Lisp evaluation results.

     (fn FORM)

12.205.1.124 emacspeak-wizards-show-face
........................................

 -- Command: emacspeak-wizards-show-face (face)

     Show salient properties of specified face.

     (fn FACE)

12.205.1.125 emacspeak-wizards-show-memory-used
...............................................

 -- Command: emacspeak-wizards-show-memory-used

     Convenience command to view state of memory used in this session so far.

12.205.1.126 emacspeak-wizards-speak-iso-datetime
.................................................

 -- Command: emacspeak-wizards-speak-iso-datetime (iso)

     Make ISO date-time speech friendly.

     (fn ISO)

12.205.1.127 emacspeak-wizards-spot-words
.........................................

 -- Command: emacspeak-wizards-spot-words (ext word)

     Searches recursively in all files with extension ‘ext’
     for ‘word’ and displays hits in a compilation buffer.

     (fn EXT WORD)

12.205.1.128 emacspeak-wizards-squeeze-blanks
.............................................

 -- Command: emacspeak-wizards-squeeze-blanks (start end)
     ‘C-e x |’
     ‘<fn> x |’

     Squeeze multiple blank lines in current buffer.

     (fn START END)

12.205.1.129 emacspeak-wizards-sunrise-sunset
.............................................

 -- Command: emacspeak-wizards-sunrise-sunset (address &optional arg)

     Display sunrise/sunset for specified address.

     (fn ADDRESS &optional ARG)

12.205.1.130 emacspeak-wizards-swap-fg-and-bg
.............................................

 -- Command: emacspeak-wizards-swap-fg-and-bg
     ‘C-h =’
     ‘<f1> =’
     ‘<help> =’

     Swap foreground and background.

12.205.1.131 emacspeak-wizards-term
...................................

 -- Command: emacspeak-wizards-term (create)
     ‘C-; a’
     ‘C-x @ h a’

     Switch to an ansi-term buffer or create one.
     With prefix arg, always creates a new terminal.
     Otherwise cycles through existing terminals, creating the first
     term if needed.

     (fn CREATE)

12.205.1.132 emacspeak-wizards-terminal
.......................................

 -- Command: emacspeak-wizards-terminal (program)

     Launch terminal and rename buffer appropriately.

     (fn PROGRAM)

12.205.1.133 emacspeak-wizards-tex-tie-current-word
...................................................

 -- Command: emacspeak-wizards-tex-tie-current-word (n)

     Tie the next n  words.

     (fn N)

12.205.1.134 emacspeak-wizards-thanks-mail-signature
....................................................

 -- Command: emacspeak-wizards-thanks-mail-signature

     insert thanks , –Raman at the end of mail message

12.205.1.135 emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer
................................................................

 -- Command: emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer

     Toggle pronunciation of mm-dd-yyyy dates.

12.205.1.136 emacspeak-wizards-toggle-yyyymmdd-date-pronouncer
..............................................................

 -- Command: emacspeak-wizards-toggle-yyyymmdd-date-pronouncer

     Toggle pronunciation of yyyymmdd  dates.

12.205.1.137 emacspeak-wizards-tramp-open-location
..................................................

 -- Command: emacspeak-wizards-tramp-open-location (name)

     Open specified tramp location.
     Location is specified by name.

     (fn NAME)

12.205.1.138 emacspeak-wizards-tune-in-radio-browse
...................................................

 -- Command: emacspeak-wizards-tune-in-radio-browse (&optional category)
     ‘C-, t’
     ‘C-x @ a t’

     Browse Tune-In Radio.
     Optional interactive prefix arg ‘category’ prompts for a category.

     (fn &optional CATEGORY)

12.205.1.139 emacspeak-wizards-tune-in-radio-search
...................................................

 -- Command: emacspeak-wizards-tune-in-radio-search
     ‘C-, s’
     ‘C-x @ a s’

     Search Tune-In Radio.

12.205.1.140 emacspeak-wizards-unhex-uri
........................................

 -- Command: emacspeak-wizards-unhex-uri (uri)

     UnEscape URI

     (fn URI)

12.205.1.141 emacspeak-wizards-units
....................................

 -- Command: emacspeak-wizards-units
     ‘C-e x u’
     ‘<fn> x u’

     Run units in a comint sub-process.

12.205.1.142 emacspeak-wizards-vc-n
...................................

 -- Command: emacspeak-wizards-vc-n

     Accelerator for VC viewer.

12.205.1.143 emacspeak-wizards-vc-viewer
........................................

 -- Command: emacspeak-wizards-vc-viewer (console)
     ‘C-e x v’
     ‘<fn> x v’

     View contents of specified virtual console.

     (fn CONSOLE)

12.205.1.144 emacspeak-wizards-vc-viewer-mode
.............................................

 -- Command: emacspeak-wizards-vc-viewer-mode

     Major mode for interactively viewing virtual console contents.

     key             binding
     —             ——-

     C-l		emacspeak-wizards-vc-viewer-refresh

     This mode runs the hook ‘emacspeak-wizards-vc-viewer-mode-hook’, as the final or penultimate step
     during initialization.

12.205.1.145 emacspeak-wizards-vc-viewer-refresh
................................................

 -- Command: emacspeak-wizards-vc-viewer-refresh

     Refresh view of VC we’re viewing.

12.205.1.146 emacspeak-wizards-vi-as-su-file
............................................

 -- Command: emacspeak-wizards-vi-as-su-file (file)

     Launch sudo vi on specified file in a terminal.

     (fn FILE)

12.205.1.147 emacspeak-wizards-view-buffers-filtered-by-m-player-mode
.....................................................................

 -- Command: emacspeak-wizards-view-buffers-filtered-by-m-player-mode
     ‘C-; :’
     ‘C-x @ h :’

     Buffer menu filtered by  m-player mode.

12.205.1.148 emacspeak-wizards-view-buffers-filtered-by-mode
............................................................

 -- Command: emacspeak-wizards-view-buffers-filtered-by-mode (mode)

     Display list of buffers filtered by specified mode.

     (fn MODE)

12.205.1.149 emacspeak-wizards-view-buffers-filtered-by-this-mode
.................................................................

 -- Command: emacspeak-wizards-view-buffers-filtered-by-this-mode
     ‘C-. m’
     ‘C-' m’
     ‘C-, c’
     ‘C-x @ a c’
     ‘C-x @ s m’

     Buffer menu filtered by  mode of current-buffer.

12.205.1.150 emacspeak-wizards-voice-sampler
............................................

 -- Command: emacspeak-wizards-voice-sampler (personality)

     Read a personality  and apply it to the current line.

     (fn PERSONALITY)

12.205.1.151 emacspeak-wizards-wc-2018
......................................

 -- Command: emacspeak-wizards-wc-2018 (team)

     Display Soccer World Cup Card From Google.

     (fn TEAM)

12.205.1.152 emacspeak-wizards-web-clean-up-processes
.....................................................

 -- Command: emacspeak-wizards-web-clean-up-processes
     ‘C-; /’
     ‘C-x @ h /’

     Delete stale Web connections.

12.205.1.153 emacspeak-wizards-xl-display
.........................................

 -- Command: emacspeak-wizards-xl-display

     Called to set up preview of an XL file.
     Assumes we are in a buffer visiting a .xls file.
     Previews those contents as HTML and nukes the buffer
     visiting the xls file.

12.205.1.154 emacspeak-wizards-xl-mode
......................................

 -- Command: emacspeak-wizards-xl-mode

     Major mode for browsing XL spreadsheets.

     XL Sheets are converted to HTML and previewed using a browser.

     In addition to any hooks its parent mode ‘text-mode’ might have run,
     this mode runs the hook ‘emacspeak-wizards-xl-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.205.1.155 emacspeak-wizards-yql-lookup
.........................................

 -- Command: emacspeak-wizards-yql-lookup (symbols)

     Lookup quotes for specified stock symbols.
     Symbols are separated by whitespace.

     (fn SYMBOLS)

12.205.1.156 emacspeak-wizards-yql-quotes
.........................................

 -- Command: emacspeak-wizards-yql-quotes

     Display quotes using YQL API.
     Symbols are taken from ‘emacspeak-wizards-personal-portfolio’.

12.205.2 emacspeak-wizards Options
----------------------------------

 -- Variable: User Option emacspeak-clipboard-file
     File used to save Emacspeak clipboard.  The emacspeak clipboard
     provides a convenient mechanism for exchanging information between
     different Emacs sessions.

 -- Variable: User Option emacspeak-curl-cookie-store
     Cookie store used by Curl.

 -- Variable: User Option emacspeak-emergency-tts-server
     TTS server to use in an emergency.  Set this to a TTS server that
     is known to work at all times.  If you are debugging another speech
     server and that server gets wedged for some reason, you can use
     command emacspeak-emergency-tts-restart to get speech back using
     the reliable TTS server.  It’s useful to bind the above command to
     a convenient key.

 -- Variable: User Option emacspeak-speak-telephone-directory
     File holding telephone directory.  This is just a text file, and we
     use grep to search it.

 -- Variable: User Option emacspeak-speak-telephone-directory-command
     Command used to look up names in the telephone directory.

 -- Variable: User Option emacspeak-ssh-tts-server
     SSH TTS server to use by default.

 -- Variable: User Option emacspeak-wizards-alpha-vantage-api-key
     API Key used to retrieve stock data from alpha-vantage.  Visit
     https://www.alphavantage.co/support/#api-key to get your key.

 -- Variable: User Option emacspeak-wizards-curl-program
     Name of curl executable.

 -- Variable: User Option emacspeak-wizards-dvi2txt-program
     Program for converting dvi to txt.  Set this to nil if you do not
     want to use the DVI wizard.

 -- Variable: User Option
          emacspeak-wizards-find-switches-that-need-quoting
     Find switches whose args need quoting.

 -- Variable: User Option emacspeak-wizards-find-switches-widget
     Widget to get find switch.

 -- Variable: User Option emacspeak-wizards-iex-quotes-row-filter
     Template used to audio-format rows.

 -- Variable: User Option emacspeak-wizards-links-program
     Name of links executable.

 -- Variable: User Option emacspeak-wizards-lynx-program
     Lynx executable.

 -- Variable: User Option emacspeak-wizards-pdf-to-text-options
     options to Command for running pdftotext.

 -- Variable: User Option emacspeak-wizards-pdf-to-text-program
     Command for running pdftotext.

 -- Variable: User Option emacspeak-wizards-personal-portfolio
     Set this to the stock tickers you want to check.  Default is GAFA.
     Tickers are separated by white-space and are automatically sorted
     in lexical order with duplicates removed when saving.

 -- Variable: User Option emacspeak-wizards-ppthtml-program
     Program for converting PPT to HTML. Set this to nil if you do not
     want to use the PPTHTML wizard.

 -- Variable: User Option emacspeak-wizards-project-shells
     List of shell-name/initial-directory pairs.

 -- Variable: User Option emacspeak-wizards-spot-words-extension
     Default file extension used when spotting words.

 -- Variable: User Option emacspeak-wizards-tramp-locations
     Tramp locations used by Emacspeak tramp wizard.  Locations added
     here via custom can be opened using command
     emacspeak-wizards-tramp-open-location bound to M-x
     emacspeak-wizards-tramp-open-location.

 -- Variable: User Option emacspeak-wizards-vc-viewer-command
     Command line for dumping out virtual console.  Make sure you have
     access to /dev/vcs* by adding yourself to the appropriate group.
     On Ubuntu and Debian this is group ‘tty’.

 -- Variable: User Option emacspeak-wizards-xlhtml-program
     Program for converting XL to HTML. Set this to nil if you do not
     want to use the XLHTML wizard.

 -- Variable: User Option emacspeak-wizards-yql-quotes-row-filter
     Template used to audio-format rows.


File: emacspeak.info,  Node: emacspeak-woman,  Next: emacspeak-xkcd,  Prev: emacspeak-wizards,  Up: Emacspeak Commands And Options

12.206 emacspeak-woman
======================

WOMAN == Man pages implemented in Emacs Lisp


File: emacspeak.info,  Node: emacspeak-xkcd,  Next: emacspeak-xml-shell,  Prev: emacspeak-woman,  Up: Emacspeak Commands And Options

12.207 emacspeak-xkcd
=====================

XKCD == XKCD In Emacs View XKCD comics in Emacs.  Speech enables package
xkcd Augments it by displaying the alt text and the transcript.

12.207.1 emacspeak-xkcd Commands
--------------------------------

12.207.1.1 emacspeak-xkcd-open-explanation-browser
..................................................

 -- Command: emacspeak-xkcd-open-explanation-browser

     Open explanation of current xkcd in default browser


File: emacspeak.info,  Node: emacspeak-xml-shell,  Next: emacspeak-xref,  Prev: emacspeak-xkcd,  Up: Emacspeak Commands And Options

12.208 emacspeak-xml-shell
==========================

Use xmllint from package libxml2 to implement an XML browser.  Uses the
interactive shell provided by xmllint to do the hard work.  Results of
traversal are transformed using xsltproc from libxslt

12.208.1 emacspeak-xml-shell Commands
-------------------------------------

12.208.1.1 emacspeak-xml-shell
..............................

 -- Command: emacspeak-xml-shell (system-id)

     Start Xml-Shell on contents of system-id.

     (fn SYSTEM-ID)

12.208.1.2 emacspeak-xml-shell-browse-current
.............................................

 -- Command: emacspeak-xml-shell-browse-current

     Display current node.

12.208.1.3 emacspeak-xml-shell-browse-result
............................................

 -- Command: emacspeak-xml-shell-browse-result (xpath)

     Display XPath  and display its result using EWW.

     (fn XPATH)

12.208.1.4 emacspeak-xml-shell-goto-children
............................................

 -- Command: emacspeak-xml-shell-goto-children

     Navigate down to the children of current node.

12.208.1.5 emacspeak-xml-shell-goto-next-child
..............................................

 -- Command: emacspeak-xml-shell-goto-next-child

     Navigate forward  to the next child  of current node.

12.208.1.6 emacspeak-xml-shell-goto-parent
..........................................

 -- Command: emacspeak-xml-shell-goto-parent

     Navigate up to the parent of current node.

12.208.1.7 emacspeak-xml-shell-goto-previous-child
..................................................

 -- Command: emacspeak-xml-shell-goto-previous-child

     Navigate backward  to the previous child  of current node.

12.208.1.8 emacspeak-xml-shell-mode
...................................

 -- Command: emacspeak-xml-shell-mode

     XML Shell

     Interactive XML browser.
     key             binding
     —             ——-

     C-c		Prefix Command
     <down>		emacspeak-xml-shell-goto-children
     <left>		emacspeak-xml-shell-goto-previous-child
     <right>		emacspeak-xml-shell-goto-next-child
     <up>		emacspeak-xml-shell-goto-parent

     C-c C-v		emacspeak-xml-shell-browse-result
     C-c v		emacspeak-xml-shell-browse-current

     In addition to any hooks its parent mode ‘comint-mode’ might have run,
     this mode runs the hook ‘emacspeak-xml-shell-mode-hook’, as the final or penultimate step
     during initialization.

12.208.2 emacspeak-xml-shell Options
------------------------------------

 -- Variable: User Option emacspeak-xml-shell-command
     Executable that provides the XML browser shell.  Default is
     xmllint.  If you want an XML Shell on steroids get XSH and use
     emacs custom to customize the default to be xsh.

 -- Variable: User Option emacspeak-xml-shell-hooks
     Start up hooks run after XML browser process is started.

 -- Variable: User Option emacspeak-xml-shell-options
     Command-line options for XML browse command.

 -- Variable: User Option emacspeak-xml-shell-xslt
     XSL transform to apply when displaying current node.


File: emacspeak.info,  Node: emacspeak-xref,  Next: emacspeak-xslt,  Prev: emacspeak-xml-shell,  Up: Emacspeak Commands And Options

12.209 emacspeak-xref
=====================

XREF == Cross-references in source code.  This is part of Emacs 25.
This module speech-enables xref


File: emacspeak.info,  Node: emacspeak-xslt,  Next: emacspeak-yaml,  Prev: emacspeak-xref,  Up: Emacspeak Commands And Options

12.210 emacspeak-xslt
=====================

libxml and libxsl are XML libraries for GNOME. xsltproc is a xslt
processor using libxsl this module defines routines for applying xsl
transformations using xsltproc

12.210.1 emacspeak-xslt Commands
--------------------------------

12.210.1.1 emacspeak-xslt-view
..............................

 -- Command: emacspeak-xslt-view (style url)

     Browse URL with specified XSL style.

     (fn STYLE URL)

12.210.1.2 emacspeak-xslt-view-file
...................................

 -- Command: emacspeak-xslt-view-file (style file)

     Transform ‘file’ using ‘style’ and preview via browse-url.

     (fn STYLE FILE)

12.210.1.3 emacspeak-xslt-view-region
.....................................

 -- Command: emacspeak-xslt-view-region (style start end &optional
          unescape-charent)

     Browse XML region with specified XSL style.

     (fn STYLE START END &optional UNESCAPE-CHARENT)

12.210.1.4 emacspeak-xslt-view-xml
..................................

 -- Command: emacspeak-xslt-view-xml (style url &optional
          unescape-charent)

     Browse XML URL with specified XSL style.

     (fn STYLE URL &optional UNESCAPE-CHARENT)

12.210.2 emacspeak-xslt Options
-------------------------------

 -- Variable: User Option emacspeak-xslt-keep-errors
     If non-nil, xslt errors will be preserved in an errors buffer.

 -- Variable: User Option emacspeak-xslt-nuke-null-char
     If T null chars in the region will be nuked.  This is useful when
     handling bad HTML.

 -- Variable: User Option emacspeak-xslt-options
     Options passed to xsltproc.

 -- Variable: User Option emacspeak-xslt-program
     Name of XSLT transformation engine.


File: emacspeak.info,  Node: emacspeak-yaml,  Next: emacspeak-yasnippet,  Prev: emacspeak-xslt,  Up: Emacspeak Commands And Options

12.211 emacspeak-yaml
=====================

YAML == Yet Another Markup Language This module speech-enables
yaml-mode.


File: emacspeak.info,  Node: emacspeak-yasnippet,  Next: espeak-voices,  Prev: emacspeak-yaml,  Up: Emacspeak Commands And Options

12.212 emacspeak-yasnippet
==========================

YASNIPPET == Template based editing using snippets.

12.212.1 emacspeak-yasnippet Options
------------------------------------

 -- Variable: User Option emacspeak-yas-field-highlight-personality
     Personality used for yas-field-highlight-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.


File: emacspeak.info,  Node: espeak-voices,  Next: g,  Prev: emacspeak-yasnippet,  Up: Emacspeak Commands And Options

12.213 espeak-voices
====================

This module defines the various voices used in voice-lock mode by the
ESpeak TTS engine.

12.213.1 espeak-voices Commands
-------------------------------

12.213.1.1 espeak
.................

 -- Command: espeak
     ‘C-e d C-e’
     ‘<fn> d C-e’

     Start ESpeak engine.

12.213.2 espeak-voices Options
------------------------------

 -- Variable: User Option espeak-default-speech-rate
     Default speech rate for eSpeak.


File: emacspeak.info,  Node: g,  Next: g-utils,  Prev: espeak-voices,  Up: Emacspeak Commands And Options

12.214 g
========

Top-level bootstrap module for Google Client.  Loads in authentication
module and sets up per-service modules: gmaps: Google Maps gweb: Google
Web Search gblogger: Blogger gphoto: Google Photos


File: emacspeak.info,  Node: g-utils,  Next: gm-nnir,  Prev: g,  Up: Emacspeak Commands And Options

12.215 g-utils
==============

Common Code e.g.  helper functions.  Used by modules like gphoto,
gblogger etc.

12.215.1 g-utils Options
------------------------

 -- Variable: User Option g-atom-edit-filter
     XSLT transform used to tidy up an entry before posting.  For now,
     this is blogger specific.

 -- Variable: User Option g-atom-titles-xsl
     XSLT transform to convert Atom feed to alist of title/url pairs.

 -- Variable: User Option g-atom-view-xsl
     XSLT transform to convert Atom feed to HTML.

 -- Variable: User Option g-cookie-jar
     Cookie jar used for Google services.  Customize this to live on
     your local disk.

 -- Variable: User Option g-curl-common-options
     Common options to pass to all Curl invocations.

 -- Variable: User Option g-curl-debug
     Set to T to see Curl stderr output.

 -- Variable: User Option g-curl-program
     Name of CURL executable.

 -- Variable: User Option g-html-handler
     Function that processes HTML. Receives buffer containing HTML as
     its argument.

 -- Variable: User Option g-url-under-point
     Function used to get URL from current context.

 -- Variable: User Option g-xslt-program
     XSLT Processor.


File: emacspeak.info,  Node: gm-nnir,  Next: gmaps,  Prev: g-utils,  Up: Emacspeak Commands And Options

12.216 gm-nnir
==============

Makes search GMail more convenient.  IMap search operators, GMail search
extensions.

12.216.1 gm-nnir Commands
-------------------------

12.216.1.1 gm-nnir-group-make-gmail-group
.........................................

 -- Command: gm-nnir-group-make-gmail-group (query)

     Use GMail search syntax exclusively.
     See https://support.google.com/mail/answer/7190?hl=en for syntax.
      note: nnimap-address etc are available as local vars if needed in these functions.

     (fn QUERY)

12.216.1.2 gm-nnir-group-make-nnir-group
........................................

 -- Command: gm-nnir-group-make-nnir-group (q)

     GMail equivalent of gnus-group-make-nnir-group.
     This uses standard IMap search operators.

     (fn Q)


File: emacspeak.info,  Node: gmaps,  Next: ladspa,  Prev: gm-nnir,  Up: Emacspeak Commands And Options

12.217 gmaps
============

Implements the Google Maps API

12.217.1 gmaps Commands
-----------------------

12.217.1.1 gmaps
................

 -- Command: gmaps
     ‘C-; e’
     ‘C-x @ h e’

     :around advice: ‘ad-Advice-gmaps’

     Google Maps Interaction.

     (fn)

12.217.1.2 gmaps-bicycling-directions
.....................................

 -- Command: gmaps-bicycling-directions (origin destination)

     :around advice: ‘ad-Advice-gmaps-bicycling-directions’

     Biking directions from Google Maps.

     (fn ORIGIN DESTINATION)

12.217.1.3 gmaps-directions
...........................

 -- Command: gmaps-directions (origin destination mode)

     Display  directions obtained from Google Maps.

     (fn ORIGIN DESTINATION MODE)

12.217.1.4 gmaps-driving-directions
...................................

 -- Command: gmaps-driving-directions (origin destination)

     :around advice: ‘ad-Advice-gmaps-driving-directions’

     Driving directions from Google Maps.

     (fn ORIGIN DESTINATION)

12.217.1.5 gmaps-locations-load
...............................

 -- Command: gmaps-locations-load

     Load saved GMaps locations.

12.217.1.6 gmaps-locations-save
...............................

 -- Command: gmaps-locations-save

     Save GMaps Locations.

12.217.1.7 gmaps-mode
.....................

 -- Command: gmaps-mode

     A Google Maps front-end for the Emacspeak desktop.

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘gmaps-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-

     TAB		forward-button
     ESC		Prefix Command
     SPC		gmaps-place-details
     [		backward-page
     ]		forward-page
     b		gmaps-bicycling-directions
     c		gmaps-set-current-location
     d		gmaps-driving-directions
     f		gmaps-set-current-filter
     n		gmaps-places-nearby
     r		gmaps-set-current-radius
     s		gmaps-places-search
     t		gmaps-transit-directions
     w		gmaps-walking-directions

     M-i		backward-button


12.217.1.8 gmaps-place-details
..............................

 -- Command: gmaps-place-details

     :around advice: ‘ad-Advice-gmaps-place-details’

     Display details for place at point.
     Insert reviews if already displaying details.

     (fn)

12.217.1.9 gmaps-place-reviews
..............................

 -- Command: gmaps-place-reviews

     Display reviews for place at point.
     Place details need to have been expanded first.

12.217.1.10 gmaps-places-nearby
...............................

 -- Command: gmaps-places-nearby (&optional clear-filter)

     :around advice: ‘ad-Advice-gmaps-places-nearby’

     Find places near current location.
     Uses default radius. optional interactive prefix arg clears any active filters.

     (fn &optional CLEAR-FILTER)

12.217.1.11 gmaps-places-search
...............................

 -- Command: gmaps-places-search (query &optional clear-filter)

     :around advice: ‘ad-Advice-gmaps-places-search’

     Perform a places search.
     Use this only if you dont know the locality  of the place you’re looking for.
     Optional  prefix arg clears any active filters.

     (fn QUERY &optional CLEAR-FILTER)

12.217.1.12 gmaps-set-current-filter
....................................

 -- Command: gmaps-set-current-filter (&optional all)

     Set up filter in current buffer.
     Optional interactive prefix arg prompts for all filter fields.

     (fn &optional ALL)

12.217.1.13 gmaps-set-current-location
......................................

 -- Command: gmaps-set-current-location (address)

     :around advice: ‘ad-Advice-gmaps-set-current-location’

      Set current location.

     (fn ADDRESS)

12.217.1.14 gmaps-set-current-radius
....................................

 -- Command: gmaps-set-current-radius (radius)

     :around advice: ‘ad-Advice-gmaps-set-current-radius’

     Set current radius

     (fn RADIUS)

12.217.1.15 gmaps-transit-directions
....................................

 -- Command: gmaps-transit-directions (origin destination)

     :around advice: ‘ad-Advice-gmaps-transit-directions’

     Transit directions from Google Maps.

     (fn ORIGIN DESTINATION)

12.217.1.16 gmaps-walking-directions
....................................

 -- Command: gmaps-walking-directions (origin destination)

     :around advice: ‘ad-Advice-gmaps-walking-directions’

     Walking directions from Google Maps.

     (fn ORIGIN DESTINATION)

12.217.2 gmaps Options
----------------------

 -- Variable: User Option gmaps-places-key
     Places API key — goto https://code.google.com/apis/console to get
     one.

 -- Variable: User Option gweb-my-address
     Location address.  Setting this updates gweb-my-location
     coordinates via geocoding.


File: emacspeak.info,  Node: ladspa,  Next: mac-voices,  Prev: gmaps,  Up: Emacspeak Commands And Options

12.218 ladspa
=============

This module uses tools from the Ladspa SDK to expose Ladspa plugins in a
consistent way to elisp.  The goal is to make it easy to inspect Ladspa
Plugins, And invoke them easily from Ladspa host applications such as
MPlayer.  See
<http://emacspeak.blogspot.com/2015/12/a-ladspa-work-bench-for-emacspeak.html>
Some Ladspa Packages that provide plugins: sudo apt-get install
zam-plugins wah-plugins vco-plugins tap-plugins swh-plugins rev-plugins
mcp-plugins liquidsoap-plugin-ladspa ladspa-foo-plugins
invada-studio-plugins-ladspa fil-plugins

12.218.1 ladspa Commands
------------------------

12.218.1.1 ladspa
.................

 -- Command: ladspa (&optional refresh)

     Launch Ladspa workbench.

     (fn &optional REFRESH)

12.218.1.2 ladspa-analyse-plugin-at-point
.........................................

 -- Command: ladspa-analyse-plugin-at-point

     Analyse plugin at point.

12.218.1.3 ladspa-edit-control
..............................

 -- Command: ladspa-edit-control

     Edit Ladspa control  at point by prompting for control values.

12.218.1.4 ladspa-instantiate
.............................

 -- Command: ladspa-instantiate

     Instantiate plugin at point by prompting for control values.

12.218.1.5 ladspa-mode
......................

 -- Command: ladspa-mode

     A Ladspa workbench for the Emacspeak desktop.

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘ladspa-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-

     RET		ladspa-instantiate
     SPC		ladspa-analyse-plugin-at-point
     a		emacspeak-m-player-add-ladspa
     d		emacspeak-m-player-delete-ladspa
     e		ladspa-edit-control
     n		next-line
     p		previous-line



File: emacspeak.info,  Node: mac-voices,  Next: outloud-voices,  Prev: ladspa,  Up: Emacspeak Commands And Options

12.219 mac-voices
=================

This module defines the various voices used in voice-lock mode by Mac
TTS.

12.219.1 mac-voices Options
---------------------------

 -- Variable: User Option mac-default-speech-rate
     Default speech rate for mac.


File: emacspeak.info,  Node: outloud-voices,  Next: plain-voices,  Prev: mac-voices,  Up: Emacspeak Commands And Options

12.220 outloud-voices
=====================

This module defines the various voices used in voice-lock mode.  This
module is IBM ViaVoice Outloud specific.

12.220.1 outloud-voices Commands
--------------------------------

12.220.1.1 outloud
..................

 -- Command: outloud (&optional device)
     ‘C-e d C-o’
     ‘<fn> d C-o’

     Select Outloud server.

     (fn &optional DEVICE)

12.220.1.2 outloud-32
.....................

 -- Command: outloud-32

     Select 32-Outloud server.

12.220.2 outloud-voices Options
-------------------------------

 -- Variable: User Option outloud-default-speech-rate
     Default speech rate for outloud.


File: emacspeak.info,  Node: plain-voices,  Next: soundscape,  Prev: outloud-voices,  Up: Emacspeak Commands And Options

12.221 plain-voices
===================

This module defines the various voices used in voice-lock mode.  This
module is Plain i.e.  suitable for a device for which you haven’t yet
implemented appropriate voice-locking controls


File: emacspeak.info,  Node: soundscape,  Next: sox,  Prev: plain-voices,  Up: Emacspeak Commands And Options

12.222 soundscape
=================

Soundscapes <https://en.wikipedia.org/wiki/Soundscape> define an
acoustic environment.  Boodler at <http://boodler.org> is a Python-based
SoundScape generator.  To use this module, first install boodler.  Then
install the soundscape packages (*.boop) files available at
<http://boodler.org/lib>.  Make sure boodler works and produces audio in
your environment.  finally install the Boodler packages from
emacspeak/scapes from the Emacspeak GitHub repository by running ‘cd
emacspeak/scapes; make ’

   When boodler is set up and all packages installed, copy file
emacspeak/scapes/soundscapes to ~/.boodler/Collection.  The above file
lists all installed SoundScapes.  Directory emacspeak/scapes also
contains additional Boodler Agents and SoundScapes that I have created
for use with Emacspeak.

   Module soundscape.el defines Emacs conveniences for running
Soundscapes.  Main Entry Points:

   • M-x soundscape-toggle – Enables or disables automatic SoundScapes.
   • M-x soundscape – runs a named SoundScape
   • M-x soundscape-stop – Stops a specified running Soundscape.
   • M-x soundscape-kill – Kills all running Soundscapes.

   When automatic Soundscapes are enabled, SoundScapes are started and
stopped based on the current major mode.  Active Soundscape are
displayed as part of the minor-mode-alist.  Command
emacspeak-speak-minor-mode-line can be used to have this spoken.

   Thus, SoundScapes can be thought of as reflecting the _mood_ of the
current _mode_.  This package defines a single SOUNDSCAPE-DEFAULT-THEME
that is loaded using ‘(soundscape-load soundscape-default-theme)’.
Emacs modes that provide similar functionality e.g., communication ==
email, IM, ...  map to the same _mood_.

12.222.1 soundscape Commands
----------------------------

12.222.1.1 soundscape
.....................

 -- Command: soundscape (scape)
     ‘C-. s’
     ‘C-' s’
     ‘C-x @ s s’

     Play soundscape.

     (fn SCAPE)

12.222.1.2 soundscape-kill
..........................

 -- Command: soundscape-kill

     Stop all running soundscapes.

12.222.1.3 soundscape-listener
..............................

 -- Command: soundscape-listener (&optional restart)

     Start  a Soundscape listener.
     Listener is loaded with all Soundscapes defined in ‘soundscape-default-theme’ .
     Optional interactive prefix arg restarts the listener if already running.

     (fn &optional RESTART)

12.222.1.4 soundscape-listener-shutdown
.......................................

 -- Command: soundscape-listener-shutdown

     Shutdown listener.

12.222.1.5 soundscape-remote
............................

 -- Command: soundscape-remote (names)

     Activate scapes named ‘names’ — a list of strings.

     (fn NAMES)

12.222.1.6 soundscape-restart
.............................

 -- Command: soundscape-restart (&optional device)
     ‘C-. r’
     ‘C-' r’
     ‘C-x @ s r’

     Restart Soundscape  environment.
     With prefix arg ‘device’, prompt for a alsa/ladspa device.
     This is then saved to soundscape-device for future use.

     (fn &optional DEVICE)

12.222.1.7 soundscape-stop
..........................

 -- Command: soundscape-stop (scape)
     ‘C-. S’
     ‘C-' S’
     ‘C-x @ s S’

     Stop running Soundscape.

     (fn SCAPE)

12.222.1.8 soundscape-theme
...........................

 -- Command: soundscape-theme

     Shows default theme in a special buffer.

12.222.1.9 soundscape-toggle
............................

 -- Command: soundscape-toggle
     ‘C-. t’
     ‘C-' t’
     ‘C-x @ s t’

     Toggle automatic SoundScapes.
     When turned on, Soundscapes are automatically run based on current major mode.
     Run command M-x soundscape-theme to see the default mode->mood mapping.

12.222.1.10 soundscape-update-mood
..................................

 -- Command: soundscape-update-mood (&optional prompt-mode)
     ‘C-. u’
     ‘C-' u’
     ‘C-x @ s u’

     Update mood/scape mapping for current  mode.
     The  updated mapping is not persisted.
     Optional interactive prefix arg ‘prompt-mode’ prompts for the mode.

     (fn &optional PROMPT-MODE)

12.222.2 soundscape Options
---------------------------

 -- Variable: User Option soundscape-data
     Soundscape data directory.

 -- Variable: User Option soundscape-device
     Alsa sound device to use for soundscapes.

 -- Variable: User Option soundscape-idle-delay
     Number of seconds of idle time before soundscapes are synchronized
     with current mode.

 -- Variable: User Option soundscape-manager-options
     User customizable options list passed to boodler.  Defaults specify
     alsa as the output and set master volume to 0.5


File: emacspeak.info,  Node: sox,  Next: sox-gen,  Prev: soundscape,  Up: Emacspeak Commands And Options

12.223 sox
==========

This module defines a convenient speech-enabled interface for editing
mp3 and wav files using SoX.

   Launching M-x sox creates a special interaction buffer that provides
single keystroke commands for editing and applying effects to a selected
sound file.  For adding mp3 support to sox, do

   sudo apt-get libsox-fmt-mp3 install

   This module provides support for ladspa effects using module
ladspa.el.  To use ladspa effects with SoX, you need a relatively new
build of Sox; The stock SoX that is package for Debian/Ubuntu does not
always work.  This module can be used independent of Emacspeak.

12.223.1 sox Commands
---------------------

12.223.1.1 sox-add-effect
.........................

 -- Command: sox-add-effect (name)

     Adds  effect at the end of the effect list

     (fn NAME)

12.223.1.2 sox-delete-effect-at-point
.....................................

 -- Command: sox-delete-effect-at-point

     :around advice: ‘ad-Advice-sox-delete-effect-at-point’

     Delete effect at point.

     (fn)

12.223.1.3 sox-edit-effect-at-point
...................................

 -- Command: sox-edit-effect-at-point

     Edit effect at point.

12.223.1.4 sox-mode
...................

 -- Command: sox-mode

     An audio workbench for the Emacspeak desktop.

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘sox-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-


12.223.1.5 sox-open-file
........................

 -- Command: sox-open-file (snd-file)

     :around advice: ‘ad-Advice-sox-open-file’

     Open specified snd-file on the Audio Workbench.

     (fn SND-FILE)

12.223.1.6 sox-play
...................

 -- Command: sox-play

     Play sound from current context.

12.223.1.7 sox-refresh
......................

 -- Command: sox-refresh

     :around advice: ‘ad-Advice-sox-refresh’

     Redraw Audio Workbench.

     (fn)

12.223.1.8 sox-save
...................

 -- Command: sox-save (save-file)

     Save context to  file after prompting.

     (fn SAVE-FILE)

12.223.1.9 sox-set-effect
.........................

 -- Command: sox-set-effect (name)

     Set effect.

     (fn NAME)

12.223.1.10 sox-show-timestamp
..............................

 -- Command: sox-show-timestamp

     Show timestamp   in stream.

12.223.1.11 sox-stop
....................

 -- Command: sox-stop

     Stop currently playing  sound from current context.

12.223.2 sox Options
--------------------

 -- Variable: User Option sox-edit
     Location of SoX utility.

 -- Variable: User Option sox-play
     Location of play from SoX utility.


File: emacspeak.info,  Node: sox-gen,  Next: stack-f,  Prev: sox,  Up: Emacspeak Commands And Options

12.224 sox-gen
==============

Provides binaural audio along with pre-defined themes.  This module can
be used independent of Emacspeak.

12.224.1 Binaural Beats Using SoX
---------------------------------

A binaural beat is an auditory illusion perceived when two different
pure-tone sine waves, both with frequencies lower than 1500 Hz, with
less than a 40 Hz difference between them, are presented to a listener
dichotically (one through each ear).  For example, if a 530 Hz pure tone
is presented to a subject’s right ear, while a 520 Hz pure tone is
presented to the subject’s left ear, the listener will perceive the
auditory illusion of a third tone, in addition to the two pure-tones
presented to each ear.  The third sound is called a binaural beat, and
in this example would have a perceived pitch correlating to a frequency
of 10 Hz, that being the difference between the 530 Hz and 520 Hz pure
tones presented to each ear.  For more details, see
<https://en.wikipedia.org/wiki/Binaural_beats>.

   This module implements a set of user-facing commands for generating
binaural beats.  The commands are organized from high-level commands
that play predefined binaural beats to lower-level commands that can be
used to create new effect sequences.

   All binaural beat sequences are played with a relatively low gain —
they are designed to be heard in the background and when effective blend
fully into the background.  You can increase the overall volume of all
binaural beat sequences by customizing
 -- Variable: User Option sox-binaural-gain-offset to a positive value
   — default is 0.

12.224.1.1 High-Level Commands For Pre-Defined Binaural Beats
.............................................................

These commands can be called directly to play one of the predefined
binaural beats.

   • ‘sox-rev-up’: A set of binaural beats designed for use at the start
     of the day.  Transitions from _Dream_ -> _Think_ ->_Act_ ->
     _Focus_.
   • ‘sox-wind-down’: A set of binaural beats for winding down at the
     end of the day.  This can be thought of as the reverse of
     ‘sox-rev-up’ and the sequence transitions from _Act_ -> _Think_ ->
     _Dream_ ->_Sleep_.
   • ‘sox-turn-down’: Designed for falling asleep.  This sequence starts
     with a short period of _Dream_ before moving to _Sleep_.
   • ‘sox-relax’: A variant of the previous sequence, ‘sox-relax’ spends
     equal time in _Dream_ and _Sleep_.
   • ‘sox-binaural’: Provide a completion-based front-end to playing any
     one of the predefined binaural effects (_Delta_, _Theta_, _Alpha_,
     _Beta_, or _Gamma_.  The previously defined sequences are built up
     using these effects.
   • ‘sox-beats-binaural’: Plays a collection of binaural beats,
     prompting for carrier and beat frequencies for each tone.  The
     predefined sequences listed earlier were created after first
     generating experimental beat-sequences using this command.
   • ‘sox-slide-binaural’: Prompts for two binaural effects (see above)
     and generates a binaural beat that _slides_ from the first effect
     to the second over a specified duration.
   • ‘sox-chakras’: Pick amongst one of a predefined set of sequences
     designed for _Chakra_ meditation.
   • ‘sox-tone-binaural’: Generate a simple binaural beat with a single
     carrier frequency.
   • ‘sox-tone-slide-binaural’: Generate a tone that slides from one
     binaural beat to another.

12.224.2 sox-gen Commands
-------------------------

12.224.2.1 sox-beats-binaural
.............................

 -- Command: sox-beats-binaural (length beat-spec-list gain)

     Play binaural audio with beat-spec specifying the various tones.
     Param ‘beat-spec-list’ is a list of ‘(carrier beat) tupples.

     (fn LENGTH BEAT-SPEC-LIST GAIN)

12.224.2.2 sox-binaural
.......................

 -- Command: sox-binaural (name duration)
     ‘C-, b’
     ‘C-x @ a b’

     Play specified binaural effect.

     (fn NAME DURATION)

12.224.2.3 sox-chakras
......................

 -- Command: sox-chakras (theme duration)

     Play each chakra for specified duration.
     Parameter ‘theme’ specifies variant.

     (fn THEME DURATION)

12.224.2.4 sox-relax
....................

 -- Command: sox-relax (length)

     Play relax set of  binaural beats.
     Param ‘length’ specifies total duration.

     (fn LENGTH)

12.224.2.5 sox-rev-up
.....................

 -- Command: sox-rev-up (length)

     Play rev-up set of  binaural beats.
     Param ‘length’ specifies total duration.

     (fn LENGTH)

12.224.2.6 sox-slide-binaural
.............................

 -- Command: sox-slide-binaural (name-1 name-2 duration)

     Play specified binaural slide from ‘name-1’ to ‘name-2’.

     (fn NAME-1 NAME-2 DURATION)

12.224.2.7 sox-tone-binaural
............................

 -- Command: sox-tone-binaural (length freq beat gain)

     Play binaural audio with carrier frequency ‘freq’, beat ‘beat’, and
     gain ‘gain’.

     (fn LENGTH FREQ BEAT GAIN)

12.224.2.8 sox-tone-slide-binaural
..................................

 -- Command: sox-tone-slide-binaural (length freq beat-start beat-end
          gain)

     Play binaural audio with carrier frequency ‘freq’, beat
     ‘beat-start’ -> ‘beat-end’, and gain ‘gain’.

     (fn LENGTH FREQ BEAT-START BEAT-END GAIN)

12.224.2.9 sox-turn-down
........................

 -- Command: sox-turn-down (length)

     Play turn-down set of  binaural beats.
     Param ‘length’ specifies total duration.

     (fn LENGTH)

12.224.2.10 sox-wind-down
.........................

 -- Command: sox-wind-down (length)

     Play wind-down set of  binaural beats.
     Param ‘length’ specifies total duration.

     (fn LENGTH)

12.224.3 sox-gen Options
------------------------

 -- Variable: User Option sox-binaural-gain-offset
     User specified offset that is added to default gain when generating
     tones using SoX, e.g., for binaural beats.

 -- Variable: User Option sox-binaural-slider-scale
     Scale factor used to compute slide duration when moving from one
     binaural beat to another.

 -- Variable: User Option sox-gen-p
     Should sox-gen commands attempt to invoke SoX.


File: emacspeak.info,  Node: stack-f,  Next: tetris,  Prev: sox-gen,  Up: Emacspeak Commands And Options

12.225 stack-f
==============

The stack is implemented as a linked list with a tag ’STACK as the first
element.  All entries and removals are done using destructive functions.


File: emacspeak.info,  Node: tetris,  Next: toy-braille,  Prev: stack-f,  Up: Emacspeak Commands And Options

12.226 tetris
=============


File: emacspeak.info,  Node: toy-braille,  Next: tts,  Prev: tetris,  Up: Emacspeak Commands And Options

12.227 toy-braille
==================

This is a bit of toy code to write in braille.

   To try this, load this file (‘M-x load-file path/to/toy-braille.el’),
then do:

   M-: (get-toy-braille-string "just a test")

   That’s just a toy, meant as an excuse and maybe a tool to learn a bit
of braille, nothing more.

   Unicode fonts are needed.

   You can try:

   M-: (set-default-font "-*-unifont-*-*-*-*-*-*-*-*-*-*-*-*")

   or

   M-: (set-default-font "-*-clearlyu-*-*-*-*-*-*-*-*-*-*-iso10646-*")

   (it will only work if the relative font is installed and properly
configured).

   References:

   http://www.nbp.org/ic/nbp/braille/index.html

   http://www.unicode.org/Public/4.0-Update1/UnicodeData-4.0.1.txt


File: emacspeak.info,  Node: tts,  Next: tts-cmds,  Prev: toy-braille,  Up: Emacspeak Commands And Options

12.228 tts
==========

Define data structure and API for setting up, accessing and manipulating
TTS environment.  When complete, this will be used by the various engine
configuration functions to set everything in one structure.

12.228.1 tts Commands
---------------------

12.228.1.1 tts-set-chunk-separator
..................................

 -- Command: tts-set-chunk-separator (chunk-separator)

     Set tts chunk-separator.

     (fn CHUNK-SEPARATOR)

12.228.1.2 tts-set-punctuations
...............................

 -- Command: tts-set-punctuations (punctuations)

     Set tts punctuations.

     (fn PUNCTUATIONS)

12.228.1.3 tts-set-rate
.......................

 -- Command: tts-set-rate (rate)

     Set tts rate.

     (fn RATE)

12.228.1.4 tts-toggle-allcaps
.............................

 -- Command: tts-toggle-allcaps

     Toggle field allcaps in current tts-state.

12.228.1.5 tts-toggle-capitalize
................................

 -- Command: tts-toggle-capitalize

     Toggle field capitalize in current tts-state.

12.228.1.6 tts-toggle-quiet
...........................

 -- Command: tts-toggle-quiet

     Toggle field quiet in current tts-state.

12.228.1.7 tts-toggle-speak-nonprinting-chars
.............................................

 -- Command: tts-toggle-speak-nonprinting-chars

     Toggle field speak-nonprinting-chars in current tts-state.

12.228.1.8 tts-toggle-split-caps
................................

 -- Command: tts-toggle-split-caps

     Toggle field split-caps in current tts-state.

12.228.1.9 tts-toggle-strip-octals
..................................

 -- Command: tts-toggle-strip-octals

     Toggle field strip-octals in current tts-state.

12.228.1.10 tts-toggle-use-auditory-icons
.........................................

 -- Command: tts-toggle-use-auditory-icons

     Toggle field use-auditory-icons in current tts-state.


File: emacspeak.info,  Node: tts-cmds,  Next: voice-setup,  Prev: tts,  Up: Emacspeak Commands And Options

12.229 tts-cmds
===============

End-user TTS Commands implemented using tts-state.  If this works out,
these will eventually replace the commands implemented in dtk-speak.el

12.229.1 tts-cmds Commands
--------------------------

12.229.1.1 tts-cmd-set-rate
...........................

 -- Command: tts-cmd-set-rate (rate &optional prefix)

     Set speech rate.

     (fn RATE &optional PREFIX)


File: emacspeak.info,  Node: voice-setup,  Next: xbacklight,  Prev: tts-cmds,  Up: Emacspeak Commands And Options

12.230 voice-setup
==================

A voice is to audio as a font is to a visual display.  A personality is
to audio as a face is to a visual display.

   Voice-lock-mode is a minor mode that causes your comments to be
spoken in one personality, strings in another, reserved words in
another, documentation strings in another, and so on.

   Comments will be spoken in
‘emacspeak-voice-lock-comment-personality’.  Strings will be spoken in
‘emacspeak-voice-lock-string-personality’.  Function and variable names
(in their defining forms) will be spoken in
‘emacspeak-voice-lock-function-name-personality’.  Reserved words will
be spoken in ‘emacspeak-voice-lock-keyword-personality’.

   To make the text you type be voiceified, use M-x voice-lock-mode.
When this minor mode is on, the voices of the current line are updated
with every insertion or deletion.

   How faces map to voices: TTS engine specific modules e.g.,
dectalk-voices.el and outloud-voices.el define a standard set of voice
names.  This module maps standard "personality" names to these
pre-defined voices.  It does this via special form def-voice-font which
takes a personality name, a voice name and a face name to set up the
mapping between face and personality, and personality and voice.  Newer
Emacspeak modules should use voice-setup-add-map when defining
face->personality mappings.  Older code calls def-voice-font directly,
but over time those calls will be changed to the more succinct form
provided by voice-setup-add-map.  For use from other modules, also see
function voice-setup-map-face which is useful when mapping a single
face.  Both voice-setup-add-map and voice-setup-map-face call special
form def-voice-font.

   Special form def-voice-font sets up the personality name to be
available via custom.  new voices can be defined using CSS style
specifications see special form defvoice Voices defined via defvoice can
be customized via custom see the documentation for defvoice.

12.230.1 voice-setup Commands
-----------------------------

12.230.1.1 voice-lock-mode
..........................

 -- Command: voice-lock-mode (&optional arg)

     Toggle voice lock mode.

     If called interactively, enable Voice-Lock mode if ARG is positive, and
     disable it if ARG is zero or negative.  If called from Lisp,
     also enable the mode if ARG is omitted or nil, and toggle it
     if ARG is ‘toggle’; disable the mode otherwise.

     (fn &optional ARG)

12.230.1.2 voice-lock-toggle
............................

 -- Command: voice-lock-toggle
     ‘C-e d v’
     ‘<fn> d v’

     Interactively toggle voice lock.

12.230.1.3 voice-setup-describe-personality
...........................................

 -- Command: voice-setup-describe-personality (personality)
     ‘C-h C-v’
     ‘<f1> C-v’
     ‘<help> C-v’

     Describe specified voice — analogous to C-h /.
     When called interactively, ‘personality’ defaults to first personality at point.
     If there are multiple personalities at point,
     these are available via minibuffer history.

     (fn PERSONALITY)

12.230.1.4 voice-setup-list-voices
..................................

 -- Command: voice-setup-list-voices (pattern)
     ‘C-h "’
     ‘<f1> "’
     ‘<help> "’

     Show all defined voice-face mappings  in a help buffer.
     Sample text to use comes from variable
       ‘voice-setup-sample-text’.

     (fn PATTERN)

12.230.1.5 voice-setup-toggle-silence-personality
.................................................

 -- Command: voice-setup-toggle-silence-personality
     ‘C-e M-q’
     ‘<fn> M-q’

     Toggle audibility of personality under point  .
     If personality at point is currently audible, its
     face->personality map is cached in a buffer local variable, and
     its face->personality map is replaced by face->inaudible.  If
     personality at point is inaudible, and there is a cached value,
     then the original face->personality mapping is restored.  In
     either case, the buffer is refontified to have the new mapping
     take effect.

12.230.2 voice-setup Options
----------------------------

 -- Variable: User Option voice-animate-extra-settings
     Adds extra animation to current voice.

 -- Variable: User Option voice-animate-medium-settings
     Adds medium animation current voice.

 -- Variable: User Option voice-animate-settings
     Animates current voice.

 -- Variable: User Option voice-annotate-settings
     Indicate annotation.

 -- Variable: User Option voice-bolden-and-animate-settings
     Bolden and animate current voice.

 -- Variable: User Option voice-bolden-extra-settings
     Extra bolden current voice.

 -- Variable: User Option voice-bolden-medium-settings
     Add medium bolden current voice.

 -- Variable: User Option voice-bolden-settings
     Bolden current voice.

 -- Variable: User Option voice-brighten-extra-settings
     Extra brighten current voice.

 -- Variable: User Option voice-brighten-medium-settings
     Brighten (medium) current voice.

 -- Variable: User Option voice-brighten-settings
     Brighten current voice.

 -- Variable: User Option voice-indent-settings
     Indicate indentation .

 -- Variable: User Option voice-lighten-extra-settings
     Add extra lightness to current voice.

 -- Variable: User Option voice-lighten-medium-settings
     Add medium lightness to current voice.

 -- Variable: User Option voice-lighten-settings
     Lighten current voice.

 -- Variable: User Option voice-lock-global-modes
     Modes for which Voice Lock mode is automagically turned on.  Global
     Voice Lock mode is controlled by the command
     ‘global-voice-lock-mode’.  If nil, means no modes have Voice Lock
     mode automatically turned on.  If t, all modes that support Voice
     Lock mode have it automatically turned on.  If a list, it should be
     a list of ‘major-mode’ symbol names for which Voice Lock mode
     should be automatically turned on.  The sense of the list is
     negated if it begins with ‘not’.  For example: (c-mode c++-mode)
     means that Voice Lock mode is turned on for buffers in C and C++
     modes only.

 -- Variable: User Option voice-lock-overlay-0-settings
     Overlay voice that sets dimension 0 of ACSS structure to 8.

 -- Variable: User Option voice-lock-overlay-1-settings
     Overlay voice that sets dimension 1 of ACSS structure to 8.

 -- Variable: User Option voice-lock-overlay-2-settings
     Overlay voice that sets dimension 2 of ACSS structure to 8.

 -- Variable: User Option voice-lock-overlay-3-settings
     Overlay voice that sets dimension 3 of ACSS structure to 8.

 -- Variable: User Option voice-monotone-light-settings
     Turns current voice into a light monotone.

 -- Variable: User Option voice-monotone-medium-settings
     Turns current voice into a medium monotone.

 -- Variable: User Option voice-monotone-settings
     Turns current voice into a monotone and speaks all punctuations.

 -- Variable: User Option voice-punctuations-all-settings
     Turns current voice into one that speaks all punctuations.

 -- Variable: User Option voice-punctuations-none-settings
     Turns current voice into one that speaks no punctuations.

 -- Variable: User Option voice-punctuations-some-settings
     Turns current voice into one that speaks some punctuations.

 -- Variable: User Option voice-setup-sample-text
     Sample text used when displaying available voices.

 -- Variable: User Option voice-smoothen-extra-settings
     Extra smoothen current voice.

 -- Variable: User Option voice-smoothen-medium-settings
     Add medium smoothen current voice.

 -- Variable: User Option voice-smoothen-settings
     Smoothen current voice.

 -- Variable: User Option voice-womanize-1-settings
     Apply first female voice.


File: emacspeak.info,  Node: xbacklight,  Next: URL Templates,  Prev: voice-setup,  Up: Emacspeak Commands And Options

12.231 xbacklight
=================

Provide an emacs front-end to xbacklight.  This is a tool that controls
the brightness on laptops.  To install xbacklight, sudo apt-get install
xbacklight

   This module is most easily used in conjunction with hydra: M-x
package-install hydra

12.231.1 xbacklight Commands
----------------------------

12.231.1.1 xbacklight-black
...........................

 -- Command: xbacklight-black

     Turn screen black.

12.231.1.2 xbacklight-decrement
...............................

 -- Command: xbacklight-decrement

     Decrease brightness by  by one step.

12.231.1.3 xbacklight-get
.........................

 -- Command: xbacklight-get

     Get current brightness level.

12.231.1.4 xbacklight-increment
...............................

 -- Command: xbacklight-increment

     Increase brightness by  by one step.

12.231.1.5 xbacklight-set
.........................

 -- Command: xbacklight-set (brightness)

     Set brightness to  specified level.
     ‘brightness’ is a percentage value.

     (fn BRIGHTNESS)

12.231.1.6 xbacklight-white
...........................

 -- Command: xbacklight-white

     Turn screen white.

12.231.2 xbacklight Options
---------------------------

 -- Variable: User Option xbacklight-step
     Step-size used when incrementing and decrementing brightness.


File: emacspeak.info,  Node: URL Templates,  Prev: xbacklight,  Up: Emacspeak Commands And Options

12.232 URL Templates
====================

This section documents a total of 81 URL Templates.

   All of these URL templates can be invoked via command ‘M-x
emacspeak-url-template-fetch’ normally bound to ‘C-e u C-; u <fn> u C-x
 h u’.  This command prompts for the name of the template, and
completion is available via Emacs’ minibuffer completion.  Each URL
template carries out the following steps:
   • Prompt for the relevant information.
   • Fetch the resulting URL using an appropriate fetcher.
   • Set up the resulting resource with appropriate customizations.

   As an example, the URL template for weather forecasts prompts for a
location and speaks the forecast.

   Air Traffic Control

   Find live streams for Air Traffic Control.

   Airport conditions

   Display airport conditions from the FAA.

   Amazon Product Details By ASIN

   Retrieve product details from Amazon by either ISBN or ASIN.

   Anonymize Google Search

   Logout from Google to do an anonymous search.

   ArchWiki Search

   Search Linux ArchWiki

   BBC Genre Using IPlayer

   BBC iPlayer Genre

   BBC Podcast Directory

   BBC PodCast Directory

   BBC Program Guide

   Display interactive BBC Program Guide.

   BBC World News Summary

   BBC World News Summary

   BBC iPlayer

   BBC iPlayer

   Baseball Box Scores

   Display baseball Play By Play.

   Baseball Game Details

   Display baseball Play By Play.

   Baseball Game Index

   Display baseball Play By Play.

   Baseball Highlights

   Display baseball Video Highlights.

   Baseball scores

   Display baseball scores.

   Bing News

   Bing News results as RSS feed.

   Bing Search

   Bing results as RSS feed.

   Bloomberg Stock Lookup

   Lookup Stock Quote information on Bloomberg.  Ticker is of the form
goog:us

   CNN Content

   Filter down to CNN content area.

   CNN Market Data

   CNN Money

   CNN PodCasts

   List CNN Podcast media links.

   Dictionary Lookup

   Dictionary Lookup

   EmacsWiki Search

   EmacsWiki Search

   Finance Google Search

   Display content from Google Finance.

   FreeSound

   Search FreeSound.

   GitHub Code Search

   GitHub Code Search.  Query can include filters such as:

   <term>: Query Term.  extension:<ext> Filter by file extension
-filename:<pattern> Filter out files matching pattern.

   GitHub Search

   Perform a GitHub Search.

   GoLang Browse

   Browse GoLang package documentation.

   GoLang Lookup

   Lookup GoLang package documentation.

   GoLang Search

   Search GoLang package documentation.

   Google Category News

   Google News By Category.

   Google Image Search

   Google Image Search

   Google News Search

   Search Google news.

   Google Regional News

   Google News By Region.

   Google Related Trends

   Display Related Query Trends.

   Google Scholar

   Google Scholar Search

   Google Transcoder

   Transcode site via Google.

   Google Trends

   Google Trends

   Google Trends Compared

   Display comparative trends.

   Google Webmaster Page Analysis

   Page Analysis From Google Webmaster tools.

   Guardian RSS Feeds Directory

   Guardian Feeds Directory

   MLB Scorecard

   Show MLB Scorecard.

   MLB standings

   Display MLB standings.

   Multilingual dictionary via Google.

   Translate word using Google.  Source and target languages are
specified as two-letter language codes, e.g.  en|de translates from
English to German

   NBA standings

   Display NBA standings.

   NLS Bard Popular

   NLS Bard Catalog: Most Popular.  Login once before using this
template.

   NLS Bard Recent

   NLS Bard Catalog: Recently Added.  Login once before using this
template.

   NLS Bard Search

   Search NLS Bard Catalog.  Login once before using this template.

   NY Times Mobile

   NYTimes Mobile Site

   NY Times RSS Feeds

   Display browsable list of NY Times RSS Feeds.

   Old Time Radio

   This months Old Time Radio Programming

   OpenLibrary

   Open Library Search

   Patent Search From Google

   Perform patent search via Google

   PodCast CNet

   Play Podcast from CNET

   RadioTime Browser

   RadioTime Entry point.

   RadioTime Categories

   RadioTime Categories .

   RadioTime Search

   RadioTime Search.

   Seeking Alpha Stock Search

   Seeking Alpha search.

   Sign in to Google

   Login to Google.

   StreamWorld Radio

   Play radio stream.  Example: kcbsFM. Format is stationid+AM/FM.

   Structured Data Extractor

   Extract/Validate Structured Data.

   Tech News From CNet

   Display tech news from CNET

   Times Of India

   Retrieve Times Of India.

   TuneIn Radio

   Translate StreamId to playable stream.

   UPS Packages

   Display package tracking information from UPS.

   Washington Post

   Washington Post Contents

   Weather Light From Wunderground

   Light weight weather forecast

   Weather forecast from Weather Underground

   Weather forecast from weather underground mobile.

   Wiki Data Search

   Search WikiData.

   WordNet Search

   Look up term in WordNet.

   Yahoo RSS Feeds

   List Yahoo RSS Feeds.

   fedex packages

   Display package tracking information from Fedex.

   html Google News Search

   Search Google news.

   html5IRC

   Show HTML5 IRC log.

   rss weather from wunderground

   Pull RSS weather feed for specified state/city.

   sourceforge Download

   Download specified file.

   sourceforge browse mirrors

   Retrieve download page at Sourceforge for specified project.

   sourceforge project

   Open specified project page at SourceForge.

   w3c IRC Logs

   Use this to pull up the archived logs from the W3C IRC. You need to
know the exact name of the channel.

   w3c Lists

   Use this to pull up the archived mail from the W3C list.  You need to
know the exact name of the list.

   world CNN Content

   Filter down to CNN content area.


File: emacspeak.info,  Node: Emacspeak Keyboard Commands,  Next: TTS Servers,  Prev: Emacspeak Commands And Options,  Up: Top

13 Emacspeak Keyboard Commands.
*******************************

This chapter gives an overview of all the keymaps used by Emacspeak.
For a complete reference, see *Note emacspeak::.  For basic usage, see
*Note Basic Usage::.

   Emacspeak uses the following keymaps, each of which are invoked by a
specific prefix key.
‘C-e’
     The main Emacspeak keymap.
‘C-e d’
     The text-to-speech keymap.
‘C-;’
     The Emacspeak hyper keymap.
‘C-'’
     The emacspeak super keymap.
‘C-,’
     The Emacspeak alt keymap.
‘C-.’
     The Emacspeak super keymap.
‘C-e x’
     The emacspeak ‘x’ keymap.
‘C-e C-x’
     The Emacspeak ‘C-x’ keymap.

   Primary Emacspeak commands start with ‘C-e’.  Following ‘C-e’ with
‘d’ invokes commands that control the text-to-speech engine.  Note that
silencing speech is an exception to this rule — Speech silence commands
are placed directly on the primary emacspeak-keymap (‘C-e s’ and ‘C-e
.’).

   In addition, Emacspeak introduces five additional keymaps for binding
its extensive set of facilities to convenient keystrokes.

   When running under a windowing system, Emacs automatically receives
keys ‘C-;’, ‘C-'’, ‘C-,’ and ‘C-.’.  When running on the Linux console,
these keys become available after loading the custom Linux keymap found
in ‘emacspeak/tvr/console-keymaps’ after checking out the emacspeak
repository from ‘https://github.com/tvraman/emacspeak’.

   Emacspeak defines personal keymaps accessible via ‘C-e x’ and ‘C-e
C-x’.  For now, emacspeak does not bind any commands in keymap ‘C-e C-x’
— this keymap is left for end-user personalization.

   Note that the information presented in the following subsections can
also be viewed via Emacs’ built-in Help system; e.g., Press ‘C-; C-h’ to
get a ‘*Help*’ buffer that displays all keys bound in
‘emacspeak-hyper-keymap’.


File: emacspeak.info,  Node: TTS Servers,  Next: Emacspeak At Twenty,  Prev: Emacspeak Keyboard Commands,  Up: Top

14 TTS Servers
**************

Emacspeak produces spoken output by communicating with one of many
speech servers.  This section documents the communication protocol
between the client application i.e.  Emacspeak, and the TTS server.
This section is primarily intended for developers wishing to: For
additional notes on how to log and view TTS server commands when
developing a speech server, see
<http://emacspeak.blogspot.com/2015/04/howto-log-speech-server-output-to-aid.html>.

   • Create new speech servers that comply with this communication
     protocol
   • Developers of other client applications who wish to use the various
     Emacspeak speech servers.

14.1 High-level Overview
========================

The TTS server reads commands from standard input, and script
_speech-server_ can be used to cause a TTS server to communicate via a
TCP socket.  Speech server commands are used by the client application
to make specific requests of the server; the server listens for these
requests in a non-blocking read loop and executes requests as they
become available.  Requests can be classified as follows:
   • Commands that send text to be spoken.
   • Commands that set _state_ of the TTS server.

   All commands are of the form
             commandWord {arguments}
   The braces are optional if the command argument contains no white
space.  The speech server maintains a _current state_ that determines
various characteristics of spoken output such as speech rate,
punctuations mode etc.  (see set of commands that manipulate speech
state for complete list).  The client application _queues_ The text and
non-speech audio output to be produced before asking the server to
_dispatch_ the set of queued requests, i.e.  start producing output.

   Once the server has been asked to produce output, it removes items
from the front of the queue, sends the requisite commands to the
underlying TTS engine, and waits for the engine to acknowledge that the
request has been completely processed.  This is a non-blocking
operation, i.e., if the client application generates additional
requests, these are processed _immediately_.

   The above design allows the Emacspeak TTS server to be _highly_
responsive; Client applications can queue large amounts of text
(typically queued a clause at a time to achieve the best prosody), ask
the TTS server to start speaking, and interrupt the spoken output at any
time.

14.1.1 Commands That Queue Output.
----------------------------------

This section documents commands that either produce spoken output, or
queue output to be produced on demand.  Commands that place the request
on the queue are clearly marked.

             version

   Speaks the _version_ of the TTS engine.  Produces output immediately.

             tts_say text

   Speaks the specified _text_ immediately.  The text is not
pre-processed in any way, contrast this with the primary way of speaking
text which is to queue text before asking the server to process the
queue.

   Note that this command needs to handle the special syntax for
morpheme boundaries ‘[*]’.  The ‘[*]’ syntax is specific to the Dectalk
family of synthesizers; servers for other TTS engines need to map this
pattern to the engine-specific code for each engine.  As an example, see
‘servers/outloud’ A morpheme boundary results in synthesizing compound
words such as _left bracket_ with the right intonation; using a space
would result in that phrase being synthesized as two separate words.

     l c
   Speak _c_ a single character, as a letter.  The character is spoken
immediately.  This command uses the TTS engine’s capability to speak a
single character with the ability to flush speech _immediately_.  Client
applications wishing to produce character-at-a-time output, e.g., when
providing character echo during keyboard input should use this command.

             d

   This command is used to _dispatch_ all queued requests.  It was
renamed to a single character command (like many of the commonly used
TTS server commands) to work more effectively over slow (9600) dialup
lines.  The effect of calling this command is for the TTS server to
start processing items that have been queued via earlier requests.

             tts_pause

   This pauses speech _immediately_.  It does not affect queued
requests; when command _tts_resume_ is called, the output resumes at the
point where it was paused.  Not all TTS engines provide this capability.

             tts_resume

   Resume spoken output if it has been paused earlier.

             s

   Stop speech _immediately_.  Spoken output is interrupted, and all
pending requests are flushed from the queue.

             q text

   Queues text to be spoken.  No spoken output is produced until a
_dispatch_ request is received via execution of command _d_.

             c codes

   Queues synthesis codes to be sent to the TTS engine.  Codes are sent
to the engine with no further transformation or processing.  The codes
are inserted into the output queue and will be dispatched to the TTS
engine at the appropriate point in the output stream.

             a filename

   Cues the audio file identified by filename for playing.

             t freq length

   Queues a tone to be played at the specified frequency and having the
specified length.  Frequency is specified in hertz and length is
specified in milliseconds.

             sh duration

   Queues the specified duration of silence.  Silence is specified in
milliseconds.

14.1.2 Commands That Set State
------------------------------

             tts_reset

   Reset TTS engine to default settings.

             tts_set_punctuations mode

   Sets TTS engine to the specified punctuation mode.  Typically, TTS
servers provide at least three modes:
   • None: Do not speak punctuation characters.
   • some: Speak some punctuation characters.  Used for English prose.
   • all: Speak out _all_ punctuation characters; useful in programming
     modes.

             tts_set_speech_rate rate

   Sets speech rate.  The interpretation of this value is typically
engine specific.

             tts_set_character_scale factor

   Scale factor applied to speech rate when speaking individual
characters.Thus, setting speech rate to 500 and character scale to 1.2
will cause command _l_ to use a speech rate of _500 * 1.2 = 600_.

             tts_split_caps flag

   Set state of _split caps_ processing.  Turn this on to speak
mixed-case (AKA Camel Case) identifiers.

             tts_capitalize flag

   Indicate capitalization via a beep tone or voice pitch.

             tts_allcaps_beep flag

   Setting this flag produces a high-pitched beep when speaking words
that are in all-caps, e.g.  abbreviations.


File: emacspeak.info,  Node: Emacspeak At Twenty,  Next: Acknowledgments,  Prev: TTS Servers,  Up: Top

15 Emacspeak At Twenty.
***********************

This article was originally published to mark the 20th anniversary of
Emacspeak.  It has been incorporated as the final chapter of the
Emacspeak manual for easy reference.  The original article is available
on the Web and in its original source form as an *org* file in the
emacspeak distribution.
* Menu:

* Turning Twenty::
* Using UNIX With Speech Output  —   1994: Using UNIX With Speech Output  ---  1994.
* Key Enabler  ---  Emacs And Lisp Advice::
* Key Component  —   Text To Speech (TTS): Key Component  ---  Text To Speech (TTS).
* Emacspeak And Software Development::
* Emacspeak And Authoring Documents::
* Emacspeak And The Early Days Of The Web::
* Audio Formatting  —   Generalizing Aural CSS: Audio Formatting  ---  Generalizing Aural CSS.
* Conversational Gestures For The Audio Desktop::
* Accessing Media Streams::
* EBooks —    Ubiquitous Access To Books: EBooks ---  Ubiquitous Access To Books.
* Leveraging Computational Tools  —   From SQL And R To IPython Notebooks: Leveraging Computational Tools  ---  From SQL And R To IPython Notebooks.
* Social Web   —  EMail, Instant Messaging, Blogging  And Tweeting Using Open Protocols: Social Web  ---  EMail Instant Messaging Blogging And Tweeting Using Open Protocols.
* The RESTful Web  —   Web Wizards And URL Templates For Faster Access: The RESTful Web  ---  Web Wizards And URL Templates For Faster Access.
* Mashing It Up  —   Leveraging Evolving Web APIs: Mashing It Up  --- Leveraging Evolving Web APIs.
* Conclusion --- Turning Twenty::
* References::

